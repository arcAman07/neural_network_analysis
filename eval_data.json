[{"network": "nn.Sequential(\n    nn.Conv2d(in_channels=97, out_channels=44, kernel_size=5),\n    nn.Linear(in_features=71, out_features=81),\n    nn.Linear(in_features=81, out_features=58),\n    nn.Linear(in_features=58, out_features=207),\n    nn.Conv3d(in_channels=44, out_channels=56, kernel_size=4),\n    nn.Conv1d(in_channels=56, out_channels=62, kernel_size=5),\n    nn.LSTM(input_size=207, hidden_size=80, batch_first=True),\n    nn.Linear(in_features=80, out_features=44),\n    nn.LSTM(input_size=44, hidden_size=73, batch_first=True),\n    nn.Conv1d(in_channels=62, out_channels=14, kernel_size=3)\n)", "description": "This neural network takes an input of shape [97, 234, 71] and produces an output of shape [14, 234, 73]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=12, out_features=203),\n    nn.LSTM(input_size=203, hidden_size=56, batch_first=True)\n)", "description": "This neural network takes an input of shape [12] and produces an output of shape [56]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=6, out_channels=41, kernel_size=3),\n    nn.LSTM(input_size=198, hidden_size=120, batch_first=True),\n    nn.LSTM(input_size=120, hidden_size=108, batch_first=True),\n    nn.Linear(in_features=108, out_features=5),\n    nn.GRU(input_size=5, hidden_size=111, batch_first=True),\n    nn.Conv1d(in_channels=41, out_channels=2, kernel_size=1),\n    nn.LSTM(input_size=111, hidden_size=99, batch_first=True),\n    nn.Conv3d(in_channels=2, out_channels=6, kernel_size=1)\n)", "description": "This neural network takes an input of shape [6, 198] and produces an output of shape [6, 99]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=237, out_channels=56, kernel_size=4),\n    nn.Conv1d(in_channels=56, out_channels=4, kernel_size=1),\n    nn.Conv1d(in_channels=4, out_channels=55, kernel_size=4),\n    nn.Conv2d(in_channels=55, out_channels=57, kernel_size=1),\n    nn.Conv3d(in_channels=57, out_channels=30, kernel_size=4)\n)", "description": "This neural network takes an input of shape [237] and produces an output of shape [30]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=39, out_features=127),\n    nn.GRU(input_size=127, hidden_size=127, batch_first=True)\n)", "description": "This neural network takes an input of shape [195, 39] and produces an output of shape [195, 127]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=218, out_channels=19, kernel_size=5)\n)", "description": "This neural network takes an input of shape [218, 2] and produces an output of shape [19, 2]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=104, out_channels=62, kernel_size=2),\n    nn.LSTM(input_size=62, hidden_size=67, batch_first=True),\n    nn.LSTM(input_size=67, hidden_size=43, batch_first=True),\n    nn.Conv3d(in_channels=43, out_channels=57, kernel_size=5)\n)", "description": "This neural network takes an input of shape [104] and produces an output of shape [57]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=152, out_channels=35, kernel_size=4),\n    nn.GRU(input_size=35, hidden_size=42, batch_first=True)\n)", "description": "This neural network takes an input of shape [152] and produces an output of shape [42]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=85, out_channels=43, kernel_size=2),\n    nn.Conv1d(in_channels=43, out_channels=30, kernel_size=1),\n    nn.Linear(in_features=16, out_features=193),\n    nn.Linear(in_features=193, out_features=132),\n    nn.Conv3d(in_channels=30, out_channels=41, kernel_size=5),\n    nn.Conv2d(in_channels=41, out_channels=57, kernel_size=1),\n    nn.Conv3d(in_channels=57, out_channels=22, kernel_size=3),\n    nn.Conv3d(in_channels=22, out_channels=17, kernel_size=1),\n    nn.Conv2d(in_channels=17, out_channels=33, kernel_size=4),\n    nn.Conv3d(in_channels=33, out_channels=18, kernel_size=4)\n)", "description": "This neural network takes an input of shape [85, 243, 16] and produces an output of shape [18, 243, 132]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=245, out_features=244),\n    nn.GRU(input_size=244, hidden_size=50, batch_first=True),\n    nn.Conv1d(in_channels=50, out_channels=33, kernel_size=5),\n    nn.Conv3d(in_channels=33, out_channels=20, kernel_size=3),\n    nn.LSTM(input_size=20, hidden_size=27, batch_first=True),\n    nn.Conv1d(in_channels=27, out_channels=46, kernel_size=1),\n    nn.Linear(in_features=46, out_features=208),\n    nn.GRU(input_size=208, hidden_size=53, batch_first=True),\n    nn.GRU(input_size=53, hidden_size=122, batch_first=True)\n)", "description": "This neural network takes an input of shape [245] and produces an output of shape [122]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=18, out_channels=23, kernel_size=1),\n    nn.Conv1d(in_channels=23, out_channels=60, kernel_size=5),\n    nn.Linear(in_features=101, out_features=102),\n    nn.Conv2d(in_channels=60, out_channels=10, kernel_size=3),\n    nn.Conv2d(in_channels=10, out_channels=58, kernel_size=3)\n)", "description": "This neural network takes an input of shape [18, 190, 101] and produces an output of shape [58, 190, 102]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=39, out_channels=60, kernel_size=3),\n    nn.Linear(in_features=51, out_features=116),\n    nn.Linear(in_features=116, out_features=136),\n    nn.Conv1d(in_channels=60, out_channels=14, kernel_size=2),\n    nn.Conv1d(in_channels=14, out_channels=30, kernel_size=4),\n    nn.Linear(in_features=136, out_features=188),\n    nn.Conv1d(in_channels=30, out_channels=46, kernel_size=3),\n    nn.GRU(input_size=188, hidden_size=21, batch_first=True),\n    nn.GRU(input_size=21, hidden_size=68, batch_first=True),\n    nn.GRU(input_size=68, hidden_size=104, batch_first=True)\n)", "description": "This neural network takes an input of shape [39, 237, 51] and produces an output of shape [46, 237, 104]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=234, hidden_size=73, batch_first=True),\n    nn.LSTM(input_size=73, hidden_size=71, batch_first=True),\n    nn.Conv1d(in_channels=177, out_channels=53, kernel_size=5),\n    nn.LSTM(input_size=71, hidden_size=33, batch_first=True),\n    nn.LSTM(input_size=33, hidden_size=89, batch_first=True),\n    nn.Linear(in_features=89, out_features=34)\n)", "description": "This neural network takes an input of shape [177, 1, 234] and produces an output of shape [53, 1, 34]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=226, hidden_size=6, batch_first=True),\n    nn.Linear(in_features=6, out_features=119),\n    nn.Linear(in_features=119, out_features=211),\n    nn.Conv1d(in_channels=211, out_channels=48, kernel_size=3)\n)", "description": "This neural network takes an input of shape [226] and produces an output of shape [48]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=100, out_features=182),\n    nn.GRU(input_size=182, hidden_size=50, batch_first=True),\n    nn.GRU(input_size=50, hidden_size=73, batch_first=True),\n    nn.Conv2d(in_channels=188, out_channels=2, kernel_size=2),\n    nn.Conv3d(in_channels=2, out_channels=14, kernel_size=2),\n    nn.Conv1d(in_channels=14, out_channels=44, kernel_size=2),\n    nn.Linear(in_features=73, out_features=119),\n    nn.Conv3d(in_channels=44, out_channels=63, kernel_size=4)\n)", "description": "This neural network takes an input of shape [188, 100] and produces an output of shape [63, 119]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=164, out_features=247),\n    nn.LSTM(input_size=247, hidden_size=49, batch_first=True),\n    nn.Linear(in_features=49, out_features=76),\n    nn.GRU(input_size=76, hidden_size=126, batch_first=True),\n    nn.Linear(in_features=126, out_features=9)\n)", "description": "This neural network takes an input of shape [22, 164] and produces an output of shape [22, 9]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=226, hidden_size=27, batch_first=True),\n    nn.LSTM(input_size=27, hidden_size=6, batch_first=True),\n    nn.Conv2d(in_channels=158, out_channels=35, kernel_size=1),\n    nn.Linear(in_features=6, out_features=119),\n    nn.Conv1d(in_channels=35, out_channels=56, kernel_size=2)\n)", "description": "This neural network takes an input of shape [158, 226] and produces an output of shape [56, 119]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=185, out_channels=64, kernel_size=1),\n    nn.Conv3d(in_channels=64, out_channels=34, kernel_size=5),\n    nn.Conv3d(in_channels=34, out_channels=32, kernel_size=3),\n    nn.LSTM(input_size=64, hidden_size=54, batch_first=True),\n    nn.GRU(input_size=54, hidden_size=26, batch_first=True)\n)", "description": "This neural network takes an input of shape [185, 150, 64] and produces an output of shape [32, 150, 26]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=207, hidden_size=112, batch_first=True),\n    nn.Conv2d(in_channels=182, out_channels=23, kernel_size=1)\n)", "description": "This neural network takes an input of shape [182, 207] and produces an output of shape [23, 112]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=15, out_features=129),\n    nn.GRU(input_size=129, hidden_size=64, batch_first=True)\n)", "description": "This neural network takes an input of shape [231, 199, 15] and produces an output of shape [231, 199, 64]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=51, hidden_size=117, batch_first=True),\n    nn.Linear(in_features=117, out_features=164),\n    nn.Conv3d(in_channels=193, out_channels=39, kernel_size=5),\n    nn.Conv3d(in_channels=39, out_channels=33, kernel_size=5),\n    nn.Conv1d(in_channels=33, out_channels=56, kernel_size=1),\n    nn.Linear(in_features=164, out_features=99)\n)", "description": "This neural network takes an input of shape [193, 51] and produces an output of shape [56, 99]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=53, hidden_size=118, batch_first=True),\n    nn.Conv1d(in_channels=2, out_channels=36, kernel_size=2),\n    nn.LSTM(input_size=118, hidden_size=27, batch_first=True),\n    nn.Linear(in_features=27, out_features=218)\n)", "description": "This neural network takes an input of shape [2, 53] and produces an output of shape [36, 218]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=57, out_channels=23, kernel_size=2),\n    nn.LSTM(input_size=52, hidden_size=98, batch_first=True),\n    nn.LSTM(input_size=98, hidden_size=17, batch_first=True),\n    nn.GRU(input_size=17, hidden_size=68, batch_first=True),\n    nn.GRU(input_size=68, hidden_size=121, batch_first=True),\n    nn.Conv2d(in_channels=23, out_channels=48, kernel_size=2)\n)", "description": "This neural network takes an input of shape [57, 52] and produces an output of shape [48, 121]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=193, out_channels=2, kernel_size=2),\n    nn.GRU(input_size=128, hidden_size=128, batch_first=True),\n    nn.GRU(input_size=128, hidden_size=125, batch_first=True)\n)", "description": "This neural network takes an input of shape [193, 132, 128] and produces an output of shape [2, 132, 125]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=139, hidden_size=117, batch_first=True),\n    nn.Conv1d(in_channels=117, out_channels=1, kernel_size=4),\n    nn.Conv1d(in_channels=1, out_channels=16, kernel_size=4),\n    nn.Conv3d(in_channels=16, out_channels=3, kernel_size=3),\n    nn.Conv1d(in_channels=3, out_channels=21, kernel_size=2)\n)", "description": "This neural network takes an input of shape [139] and produces an output of shape [21]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=166, out_channels=30, kernel_size=5),\n    nn.Conv2d(in_channels=30, out_channels=36, kernel_size=3),\n    nn.Conv1d(in_channels=36, out_channels=25, kernel_size=4),\n    nn.Conv3d(in_channels=25, out_channels=36, kernel_size=4),\n    nn.Conv1d(in_channels=36, out_channels=2, kernel_size=4)\n)", "description": "This neural network takes an input of shape [166, 42, 248] and produces an output of shape [2, 42, 248]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=10, out_channels=8, kernel_size=4),\n    nn.Conv3d(in_channels=8, out_channels=35, kernel_size=5),\n    nn.Conv3d(in_channels=35, out_channels=17, kernel_size=1),\n    nn.Conv3d(in_channels=17, out_channels=12, kernel_size=3),\n    nn.Conv1d(in_channels=12, out_channels=12, kernel_size=3),\n    nn.Conv1d(in_channels=12, out_channels=13, kernel_size=5),\n    nn.LSTM(input_size=241, hidden_size=46, batch_first=True),\n    nn.LSTM(input_size=46, hidden_size=77, batch_first=True),\n    nn.GRU(input_size=77, hidden_size=24, batch_first=True)\n)", "description": "This neural network takes an input of shape [10, 235, 241] and produces an output of shape [13, 235, 24]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=207, out_channels=26, kernel_size=4)\n)", "description": "This neural network takes an input of shape [207, 60, 24] and produces an output of shape [26, 60, 24]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=22, out_channels=15, kernel_size=3)\n)", "description": "This neural network takes an input of shape [22, 224, 155] and produces an output of shape [15, 224, 155]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=26, out_features=13),\n    nn.Linear(in_features=13, out_features=85)\n)", "description": "This neural network takes an input of shape [100, 63, 26] and produces an output of shape [100, 63, 85]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=142, out_features=208)\n)", "description": "This neural network takes an input of shape [142] and produces an output of shape [208]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=152, out_channels=20, kernel_size=1),\n    nn.GRU(input_size=39, hidden_size=6, batch_first=True),\n    nn.Conv1d(in_channels=20, out_channels=42, kernel_size=5),\n    nn.Conv1d(in_channels=42, out_channels=54, kernel_size=3),\n    nn.Conv1d(in_channels=54, out_channels=1, kernel_size=2),\n    nn.Conv1d(in_channels=1, out_channels=30, kernel_size=4),\n    nn.Conv3d(in_channels=30, out_channels=17, kernel_size=2)\n)", "description": "This neural network takes an input of shape [152, 181, 39] and produces an output of shape [17, 181, 6]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=145, out_channels=4, kernel_size=4),\n    nn.Conv2d(in_channels=4, out_channels=18, kernel_size=3),\n    nn.Conv2d(in_channels=18, out_channels=12, kernel_size=4),\n    nn.LSTM(input_size=12, hidden_size=95, batch_first=True),\n    nn.Linear(in_features=95, out_features=152)\n)", "description": "This neural network takes an input of shape [145] and produces an output of shape [152]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=188, out_channels=54, kernel_size=1),\n    nn.GRU(input_size=215, hidden_size=38, batch_first=True),\n    nn.Linear(in_features=38, out_features=101),\n    nn.Conv3d(in_channels=54, out_channels=59, kernel_size=1),\n    nn.Linear(in_features=101, out_features=150),\n    nn.GRU(input_size=150, hidden_size=70, batch_first=True),\n    nn.Conv1d(in_channels=59, out_channels=58, kernel_size=1)\n)", "description": "This neural network takes an input of shape [188, 215] and produces an output of shape [58, 70]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=139, hidden_size=15, batch_first=True),\n    nn.LSTM(input_size=15, hidden_size=51, batch_first=True),\n    nn.Conv1d(in_channels=51, out_channels=61, kernel_size=4),\n    nn.Conv2d(in_channels=61, out_channels=42, kernel_size=5),\n    nn.LSTM(input_size=42, hidden_size=117, batch_first=True),\n    nn.Linear(in_features=117, out_features=6),\n    nn.LSTM(input_size=6, hidden_size=67, batch_first=True),\n    nn.Conv1d(in_channels=67, out_channels=15, kernel_size=4),\n    nn.GRU(input_size=15, hidden_size=22, batch_first=True),\n    nn.LSTM(input_size=22, hidden_size=27, batch_first=True)\n)", "description": "This neural network takes an input of shape [139] and produces an output of shape [27]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=42, out_channels=44, kernel_size=4),\n    nn.LSTM(input_size=58, hidden_size=91, batch_first=True)\n)", "description": "This neural network takes an input of shape [42, 58] and produces an output of shape [44, 91]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=245, hidden_size=126, batch_first=True),\n    nn.GRU(input_size=126, hidden_size=34, batch_first=True),\n    nn.GRU(input_size=34, hidden_size=77, batch_first=True),\n    nn.Linear(in_features=77, out_features=209),\n    nn.LSTM(input_size=209, hidden_size=28, batch_first=True),\n    nn.LSTM(input_size=28, hidden_size=72, batch_first=True),\n    nn.GRU(input_size=72, hidden_size=5, batch_first=True),\n    nn.Conv3d(in_channels=5, out_channels=63, kernel_size=5),\n    nn.Conv1d(in_channels=63, out_channels=32, kernel_size=1)\n)", "description": "This neural network takes an input of shape [245] and produces an output of shape [32]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=202, hidden_size=45, batch_first=True),\n    nn.LSTM(input_size=45, hidden_size=69, batch_first=True),\n    nn.Linear(in_features=69, out_features=228)\n)", "description": "This neural network takes an input of shape [202] and produces an output of shape [228]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=218, hidden_size=55, batch_first=True),\n    nn.Conv1d(in_channels=55, out_channels=16, kernel_size=2),\n    nn.GRU(input_size=16, hidden_size=124, batch_first=True),\n    nn.LSTM(input_size=124, hidden_size=22, batch_first=True)\n)", "description": "This neural network takes an input of shape [218] and produces an output of shape [22]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=145, out_channels=19, kernel_size=3),\n    nn.Conv2d(in_channels=19, out_channels=5, kernel_size=1),\n    nn.GRU(input_size=211, hidden_size=93, batch_first=True),\n    nn.GRU(input_size=93, hidden_size=75, batch_first=True),\n    nn.Conv2d(in_channels=5, out_channels=41, kernel_size=3)\n)", "description": "This neural network takes an input of shape [145, 211] and produces an output of shape [41, 75]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=154, hidden_size=6, batch_first=True),\n    nn.GRU(input_size=6, hidden_size=119, batch_first=True),\n    nn.Conv3d(in_channels=81, out_channels=32, kernel_size=1),\n    nn.Conv2d(in_channels=32, out_channels=4, kernel_size=2),\n    nn.GRU(input_size=119, hidden_size=14, batch_first=True)\n)", "description": "This neural network takes an input of shape [81, 154] and produces an output of shape [4, 14]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=116, hidden_size=126, batch_first=True),\n    nn.LSTM(input_size=126, hidden_size=123, batch_first=True),\n    nn.LSTM(input_size=123, hidden_size=14, batch_first=True)\n)", "description": "This neural network takes an input of shape [64, 236, 116] and produces an output of shape [64, 236, 14]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=7, out_channels=33, kernel_size=1),\n    nn.GRU(input_size=234, hidden_size=68, batch_first=True)\n)", "description": "This neural network takes an input of shape [7, 234] and produces an output of shape [33, 68]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=100, out_channels=51, kernel_size=3),\n    nn.LSTM(input_size=247, hidden_size=2, batch_first=True),\n    nn.Conv1d(in_channels=51, out_channels=13, kernel_size=4),\n    nn.Conv3d(in_channels=13, out_channels=13, kernel_size=4),\n    nn.Conv1d(in_channels=13, out_channels=15, kernel_size=1),\n    nn.GRU(input_size=2, hidden_size=58, batch_first=True)\n)", "description": "This neural network takes an input of shape [100, 35, 247] and produces an output of shape [15, 35, 58]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=98, out_channels=50, kernel_size=1),\n    nn.Conv1d(in_channels=50, out_channels=16, kernel_size=2),\n    nn.Linear(in_features=115, out_features=124),\n    nn.Conv3d(in_channels=16, out_channels=21, kernel_size=2),\n    nn.GRU(input_size=124, hidden_size=66, batch_first=True),\n    nn.Conv2d(in_channels=21, out_channels=45, kernel_size=2)\n)", "description": "This neural network takes an input of shape [98, 25, 115] and produces an output of shape [45, 25, 66]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=240, out_channels=7, kernel_size=2),\n    nn.Conv1d(in_channels=7, out_channels=15, kernel_size=3),\n    nn.Conv3d(in_channels=15, out_channels=18, kernel_size=2),\n    nn.GRU(input_size=197, hidden_size=115, batch_first=True),\n    nn.Linear(in_features=115, out_features=28),\n    nn.Conv2d(in_channels=18, out_channels=62, kernel_size=3),\n    nn.Conv3d(in_channels=62, out_channels=17, kernel_size=2)\n)", "description": "This neural network takes an input of shape [240, 197] and produces an output of shape [17, 28]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=252, hidden_size=6, batch_first=True),\n    nn.LSTM(input_size=6, hidden_size=38, batch_first=True),\n    nn.Conv3d(in_channels=197, out_channels=11, kernel_size=1),\n    nn.Conv3d(in_channels=11, out_channels=64, kernel_size=4)\n)", "description": "This neural network takes an input of shape [197, 252] and produces an output of shape [64, 38]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=159, out_channels=24, kernel_size=4),\n    nn.Linear(in_features=52, out_features=85),\n    nn.Conv1d(in_channels=24, out_channels=24, kernel_size=5),\n    nn.Conv1d(in_channels=24, out_channels=31, kernel_size=3),\n    nn.Linear(in_features=85, out_features=179),\n    nn.Conv1d(in_channels=31, out_channels=26, kernel_size=4),\n    nn.Linear(in_features=179, out_features=72),\n    nn.GRU(input_size=72, hidden_size=128, batch_first=True)\n)", "description": "This neural network takes an input of shape [159, 204, 52] and produces an output of shape [26, 204, 128]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=98, hidden_size=56, batch_first=True),\n    nn.GRU(input_size=56, hidden_size=20, batch_first=True)\n)", "description": "This neural network takes an input of shape [133, 182, 98] and produces an output of shape [133, 182, 20]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=107, out_channels=7, kernel_size=5),\n    nn.Conv1d(in_channels=7, out_channels=14, kernel_size=4),\n    nn.GRU(input_size=14, hidden_size=71, batch_first=True),\n    nn.Conv1d(in_channels=71, out_channels=11, kernel_size=1),\n    nn.Linear(in_features=11, out_features=96)\n)", "description": "This neural network takes an input of shape [107] and produces an output of shape [96]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=65, hidden_size=86, batch_first=True),\n    nn.LSTM(input_size=86, hidden_size=21, batch_first=True),\n    nn.Conv3d(in_channels=21, out_channels=23, kernel_size=1),\n    nn.Linear(in_features=23, out_features=209),\n    nn.GRU(input_size=209, hidden_size=78, batch_first=True),\n    nn.Conv2d(in_channels=78, out_channels=24, kernel_size=3)\n)", "description": "This neural network takes an input of shape [65] and produces an output of shape [24]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=23, hidden_size=123, batch_first=True),\n    nn.GRU(input_size=123, hidden_size=60, batch_first=True),\n    nn.Conv3d(in_channels=68, out_channels=9, kernel_size=4),\n    nn.LSTM(input_size=60, hidden_size=126, batch_first=True),\n    nn.Conv1d(in_channels=9, out_channels=40, kernel_size=2),\n    nn.Conv1d(in_channels=40, out_channels=9, kernel_size=5),\n    nn.Linear(in_features=126, out_features=122),\n    nn.Linear(in_features=122, out_features=155)\n)", "description": "This neural network takes an input of shape [68, 23] and produces an output of shape [9, 155]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=112, hidden_size=85, batch_first=True),\n    nn.LSTM(input_size=85, hidden_size=77, batch_first=True),\n    nn.Conv1d(in_channels=77, out_channels=51, kernel_size=1),\n    nn.Linear(in_features=51, out_features=59),\n    nn.Conv3d(in_channels=59, out_channels=15, kernel_size=1),\n    nn.GRU(input_size=15, hidden_size=54, batch_first=True),\n    nn.Linear(in_features=54, out_features=162),\n    nn.Linear(in_features=162, out_features=59),\n    nn.Linear(in_features=59, out_features=83)\n)", "description": "This neural network takes an input of shape [112] and produces an output of shape [83]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=15, out_channels=1, kernel_size=1),\n    nn.Conv1d(in_channels=1, out_channels=56, kernel_size=1),\n    nn.Linear(in_features=170, out_features=106),\n    nn.Conv1d(in_channels=56, out_channels=2, kernel_size=5),\n    nn.Conv2d(in_channels=2, out_channels=43, kernel_size=2),\n    nn.Conv3d(in_channels=43, out_channels=51, kernel_size=5),\n    nn.Conv2d(in_channels=51, out_channels=53, kernel_size=1)\n)", "description": "This neural network takes an input of shape [15, 124, 170] and produces an output of shape [53, 124, 106]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=113, out_channels=29, kernel_size=1),\n    nn.GRU(input_size=29, hidden_size=105, batch_first=True),\n    nn.Conv2d(in_channels=105, out_channels=32, kernel_size=3),\n    nn.Conv3d(in_channels=32, out_channels=37, kernel_size=5),\n    nn.Linear(in_features=37, out_features=246),\n    nn.Linear(in_features=246, out_features=93),\n    nn.Conv2d(in_channels=93, out_channels=55, kernel_size=1),\n    nn.Linear(in_features=55, out_features=198),\n    nn.Conv3d(in_channels=198, out_channels=27, kernel_size=2)\n)", "description": "This neural network takes an input of shape [113] and produces an output of shape [27]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=105, hidden_size=112, batch_first=True)\n)", "description": "This neural network takes an input of shape [219, 105] and produces an output of shape [219, 112]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=224, out_features=103),\n    nn.Conv2d(in_channels=103, out_channels=2, kernel_size=1),\n    nn.Conv2d(in_channels=2, out_channels=5, kernel_size=1),\n    nn.Conv3d(in_channels=5, out_channels=4, kernel_size=5),\n    nn.Conv3d(in_channels=4, out_channels=1, kernel_size=2),\n    nn.Conv1d(in_channels=1, out_channels=13, kernel_size=4),\n    nn.LSTM(input_size=13, hidden_size=60, batch_first=True),\n    nn.Conv3d(in_channels=60, out_channels=19, kernel_size=2)\n)", "description": "This neural network takes an input of shape [224] and produces an output of shape [19]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=97, hidden_size=110, batch_first=True),\n    nn.GRU(input_size=110, hidden_size=25, batch_first=True),\n    nn.Conv3d(in_channels=218, out_channels=57, kernel_size=1),\n    nn.GRU(input_size=25, hidden_size=113, batch_first=True)\n)", "description": "This neural network takes an input of shape [218, 97] and produces an output of shape [57, 113]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=82, hidden_size=85, batch_first=True),\n    nn.Conv1d(in_channels=243, out_channels=39, kernel_size=1),\n    nn.Conv2d(in_channels=39, out_channels=4, kernel_size=1),\n    nn.LSTM(input_size=85, hidden_size=98, batch_first=True)\n)", "description": "This neural network takes an input of shape [243, 84, 82] and produces an output of shape [4, 84, 98]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=253, out_channels=48, kernel_size=3),\n    nn.Conv1d(in_channels=48, out_channels=27, kernel_size=4),\n    nn.LSTM(input_size=207, hidden_size=116, batch_first=True),\n    nn.Conv3d(in_channels=27, out_channels=35, kernel_size=3)\n)", "description": "This neural network takes an input of shape [253, 207] and produces an output of shape [35, 116]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=102, out_channels=47, kernel_size=4),\n    nn.LSTM(input_size=226, hidden_size=78, batch_first=True),\n    nn.Conv2d(in_channels=47, out_channels=45, kernel_size=5),\n    nn.GRU(input_size=78, hidden_size=47, batch_first=True),\n    nn.LSTM(input_size=47, hidden_size=75, batch_first=True),\n    nn.LSTM(input_size=75, hidden_size=58, batch_first=True),\n    nn.GRU(input_size=58, hidden_size=124, batch_first=True),\n    nn.Conv2d(in_channels=45, out_channels=27, kernel_size=1),\n    nn.Linear(in_features=124, out_features=13)\n)", "description": "This neural network takes an input of shape [102, 76, 226] and produces an output of shape [27, 76, 13]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=242, out_channels=35, kernel_size=4),\n    nn.GRU(input_size=164, hidden_size=64, batch_first=True),\n    nn.LSTM(input_size=64, hidden_size=40, batch_first=True),\n    nn.Conv2d(in_channels=35, out_channels=47, kernel_size=5),\n    nn.GRU(input_size=40, hidden_size=100, batch_first=True),\n    nn.Conv3d(in_channels=47, out_channels=46, kernel_size=1),\n    nn.GRU(input_size=100, hidden_size=10, batch_first=True),\n    nn.Conv3d(in_channels=46, out_channels=18, kernel_size=4),\n    nn.Linear(in_features=10, out_features=227),\n    nn.Conv3d(in_channels=18, out_channels=1, kernel_size=1)\n)", "description": "This neural network takes an input of shape [242, 209, 164] and produces an output of shape [1, 209, 227]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=189, out_channels=60, kernel_size=2),\n    nn.Conv2d(in_channels=60, out_channels=32, kernel_size=1),\n    nn.Conv1d(in_channels=32, out_channels=24, kernel_size=3),\n    nn.LSTM(input_size=24, hidden_size=25, batch_first=True),\n    nn.Linear(in_features=25, out_features=99),\n    nn.Linear(in_features=99, out_features=138),\n    nn.Linear(in_features=138, out_features=144),\n    nn.Conv2d(in_channels=144, out_channels=15, kernel_size=1),\n    nn.Conv1d(in_channels=15, out_channels=16, kernel_size=1)\n)", "description": "This neural network takes an input of shape [189] and produces an output of shape [16]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=19, out_features=10),\n    nn.GRU(input_size=10, hidden_size=2, batch_first=True),\n    nn.LSTM(input_size=2, hidden_size=119, batch_first=True),\n    nn.Conv2d(in_channels=119, out_channels=5, kernel_size=1),\n    nn.Linear(in_features=5, out_features=239),\n    nn.LSTM(input_size=239, hidden_size=123, batch_first=True),\n    nn.Conv1d(in_channels=123, out_channels=49, kernel_size=3),\n    nn.LSTM(input_size=49, hidden_size=37, batch_first=True)\n)", "description": "This neural network takes an input of shape [19] and produces an output of shape [37]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=49, hidden_size=22, batch_first=True),\n    nn.Linear(in_features=22, out_features=198),\n    nn.GRU(input_size=198, hidden_size=11, batch_first=True),\n    nn.GRU(input_size=11, hidden_size=40, batch_first=True),\n    nn.Linear(in_features=40, out_features=25),\n    nn.Conv2d(in_channels=230, out_channels=7, kernel_size=2),\n    nn.GRU(input_size=25, hidden_size=68, batch_first=True)\n)", "description": "This neural network takes an input of shape [230, 157, 49] and produces an output of shape [7, 157, 68]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=113, hidden_size=115, batch_first=True),\n    nn.LSTM(input_size=115, hidden_size=120, batch_first=True),\n    nn.Conv3d(in_channels=213, out_channels=49, kernel_size=2),\n    nn.Conv3d(in_channels=49, out_channels=42, kernel_size=1),\n    nn.GRU(input_size=120, hidden_size=111, batch_first=True),\n    nn.Conv3d(in_channels=42, out_channels=60, kernel_size=1),\n    nn.GRU(input_size=111, hidden_size=87, batch_first=True)\n)", "description": "This neural network takes an input of shape [213, 113] and produces an output of shape [60, 87]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=64, out_channels=18, kernel_size=1),\n    nn.Conv3d(in_channels=18, out_channels=14, kernel_size=5),\n    nn.Conv1d(in_channels=14, out_channels=39, kernel_size=3),\n    nn.Conv3d(in_channels=39, out_channels=17, kernel_size=1),\n    nn.GRU(input_size=108, hidden_size=30, batch_first=True),\n    nn.LSTM(input_size=30, hidden_size=96, batch_first=True),\n    nn.Conv2d(in_channels=17, out_channels=18, kernel_size=5),\n    nn.LSTM(input_size=96, hidden_size=95, batch_first=True),\n    nn.Conv2d(in_channels=18, out_channels=39, kernel_size=4),\n    nn.Conv1d(in_channels=39, out_channels=27, kernel_size=1)\n)", "description": "This neural network takes an input of shape [64, 1, 108] and produces an output of shape [27, 1, 95]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=121, out_channels=4, kernel_size=3),\n    nn.Conv1d(in_channels=4, out_channels=41, kernel_size=2),\n    nn.Conv1d(in_channels=41, out_channels=15, kernel_size=1),\n    nn.Conv2d(in_channels=15, out_channels=19, kernel_size=4)\n)", "description": "This neural network takes an input of shape [121, 80, 71] and produces an output of shape [19, 80, 71]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=69, out_channels=48, kernel_size=5)\n)", "description": "This neural network takes an input of shape [69] and produces an output of shape [48]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=121, hidden_size=67, batch_first=True),\n    nn.GRU(input_size=67, hidden_size=77, batch_first=True),\n    nn.Conv1d(in_channels=77, out_channels=16, kernel_size=5),\n    nn.Linear(in_features=16, out_features=76),\n    nn.Conv3d(in_channels=76, out_channels=43, kernel_size=3),\n    nn.Linear(in_features=43, out_features=99),\n    nn.LSTM(input_size=99, hidden_size=95, batch_first=True),\n    nn.Linear(in_features=95, out_features=24),\n    nn.Linear(in_features=24, out_features=141),\n    nn.Linear(in_features=141, out_features=54)\n)", "description": "This neural network takes an input of shape [121] and produces an output of shape [54]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=108, out_features=174),\n    nn.GRU(input_size=174, hidden_size=85, batch_first=True),\n    nn.LSTM(input_size=85, hidden_size=47, batch_first=True),\n    nn.Linear(in_features=47, out_features=151),\n    nn.Linear(in_features=151, out_features=33),\n    nn.Conv1d(in_channels=41, out_channels=16, kernel_size=2),\n    nn.Linear(in_features=33, out_features=212),\n    nn.Conv1d(in_channels=16, out_channels=59, kernel_size=4)\n)", "description": "This neural network takes an input of shape [41, 108] and produces an output of shape [59, 212]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=58, out_features=173),\n    nn.Conv2d(in_channels=173, out_channels=43, kernel_size=2),\n    nn.GRU(input_size=43, hidden_size=19, batch_first=True),\n    nn.Conv2d(in_channels=19, out_channels=23, kernel_size=1),\n    nn.Conv2d(in_channels=23, out_channels=38, kernel_size=5),\n    nn.Conv1d(in_channels=38, out_channels=22, kernel_size=2),\n    nn.GRU(input_size=22, hidden_size=66, batch_first=True),\n    nn.Linear(in_features=66, out_features=85),\n    nn.Linear(in_features=85, out_features=11)\n)", "description": "This neural network takes an input of shape [58] and produces an output of shape [11]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=250, hidden_size=74, batch_first=True),\n    nn.Conv3d(in_channels=74, out_channels=3, kernel_size=2),\n    nn.LSTM(input_size=3, hidden_size=39, batch_first=True),\n    nn.LSTM(input_size=39, hidden_size=59, batch_first=True),\n    nn.Conv3d(in_channels=59, out_channels=52, kernel_size=4),\n    nn.Conv3d(in_channels=52, out_channels=63, kernel_size=1),\n    nn.LSTM(input_size=63, hidden_size=78, batch_first=True),\n    nn.GRU(input_size=78, hidden_size=128, batch_first=True),\n    nn.GRU(input_size=128, hidden_size=62, batch_first=True),\n    nn.LSTM(input_size=62, hidden_size=122, batch_first=True)\n)", "description": "This neural network takes an input of shape [250] and produces an output of shape [122]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=32, out_channels=28, kernel_size=3),\n    nn.LSTM(input_size=170, hidden_size=118, batch_first=True),\n    nn.LSTM(input_size=118, hidden_size=107, batch_first=True),\n    nn.LSTM(input_size=107, hidden_size=94, batch_first=True),\n    nn.Conv1d(in_channels=28, out_channels=17, kernel_size=4),\n    nn.Conv3d(in_channels=17, out_channels=19, kernel_size=4)\n)", "description": "This neural network takes an input of shape [32, 79, 170] and produces an output of shape [19, 79, 94]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=96, hidden_size=9, batch_first=True),\n    nn.LSTM(input_size=9, hidden_size=76, batch_first=True),\n    nn.GRU(input_size=76, hidden_size=62, batch_first=True),\n    nn.LSTM(input_size=62, hidden_size=86, batch_first=True)\n)", "description": "This neural network takes an input of shape [201, 96] and produces an output of shape [201, 86]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=222, out_channels=16, kernel_size=4),\n    nn.Linear(in_features=125, out_features=224),\n    nn.Linear(in_features=224, out_features=108)\n)", "description": "This neural network takes an input of shape [222, 20, 125] and produces an output of shape [16, 20, 108]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=251, out_channels=41, kernel_size=2),\n    nn.Linear(in_features=41, out_features=171),\n    nn.LSTM(input_size=171, hidden_size=126, batch_first=True),\n    nn.Conv2d(in_channels=126, out_channels=62, kernel_size=3),\n    nn.Linear(in_features=62, out_features=111),\n    nn.Conv2d(in_channels=111, out_channels=63, kernel_size=5),\n    nn.GRU(input_size=63, hidden_size=37, batch_first=True)\n)", "description": "This neural network takes an input of shape [251] and produces an output of shape [37]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=127, out_channels=36, kernel_size=1),\n    nn.Linear(in_features=183, out_features=76),\n    nn.Linear(in_features=76, out_features=48)\n)", "description": "This neural network takes an input of shape [127, 102, 183] and produces an output of shape [36, 102, 48]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=122, out_channels=1, kernel_size=2),\n    nn.GRU(input_size=113, hidden_size=93, batch_first=True),\n    nn.LSTM(input_size=93, hidden_size=41, batch_first=True),\n    nn.Conv1d(in_channels=1, out_channels=49, kernel_size=1),\n    nn.Conv3d(in_channels=49, out_channels=52, kernel_size=3),\n    nn.Conv1d(in_channels=52, out_channels=6, kernel_size=1)\n)", "description": "This neural network takes an input of shape [122, 62, 113] and produces an output of shape [6, 62, 41]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=209, hidden_size=22, batch_first=True),\n    nn.Conv2d(in_channels=143, out_channels=57, kernel_size=3),\n    nn.Linear(in_features=22, out_features=24),\n    nn.Conv1d(in_channels=57, out_channels=47, kernel_size=3),\n    nn.Conv1d(in_channels=47, out_channels=44, kernel_size=1),\n    nn.GRU(input_size=24, hidden_size=118, batch_first=True),\n    nn.Conv1d(in_channels=44, out_channels=20, kernel_size=2),\n    nn.Conv2d(in_channels=20, out_channels=44, kernel_size=5),\n    nn.GRU(input_size=118, hidden_size=75, batch_first=True)\n)", "description": "This neural network takes an input of shape [143, 206, 209] and produces an output of shape [44, 206, 75]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=137, out_features=145),\n    nn.Linear(in_features=145, out_features=103),\n    nn.GRU(input_size=103, hidden_size=105, batch_first=True),\n    nn.Linear(in_features=105, out_features=116),\n    nn.Conv2d(in_channels=197, out_channels=22, kernel_size=5)\n)", "description": "This neural network takes an input of shape [197, 137] and produces an output of shape [22, 116]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=21, hidden_size=71, batch_first=True),\n    nn.Conv1d(in_channels=255, out_channels=37, kernel_size=2)\n)", "description": "This neural network takes an input of shape [255, 140, 21] and produces an output of shape [37, 140, 71]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=60, out_features=238),\n    nn.Linear(in_features=238, out_features=100),\n    nn.Conv2d(in_channels=100, out_channels=42, kernel_size=2),\n    nn.GRU(input_size=42, hidden_size=71, batch_first=True),\n    nn.Conv3d(in_channels=71, out_channels=55, kernel_size=3),\n    nn.Conv1d(in_channels=55, out_channels=63, kernel_size=3),\n    nn.Linear(in_features=63, out_features=60)\n)", "description": "This neural network takes an input of shape [60] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=254, hidden_size=66, batch_first=True),\n    nn.LSTM(input_size=66, hidden_size=67, batch_first=True),\n    nn.Conv2d(in_channels=84, out_channels=42, kernel_size=3),\n    nn.Conv1d(in_channels=42, out_channels=59, kernel_size=3)\n)", "description": "This neural network takes an input of shape [84, 135, 254] and produces an output of shape [59, 135, 67]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=26, hidden_size=119, batch_first=True),\n    nn.LSTM(input_size=119, hidden_size=115, batch_first=True),\n    nn.Conv1d(in_channels=115, out_channels=39, kernel_size=2),\n    nn.Conv3d(in_channels=39, out_channels=15, kernel_size=4),\n    nn.LSTM(input_size=15, hidden_size=88, batch_first=True)\n)", "description": "This neural network takes an input of shape [26] and produces an output of shape [88]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=249, out_features=217),\n    nn.LSTM(input_size=217, hidden_size=12, batch_first=True)\n)", "description": "This neural network takes an input of shape [73, 249] and produces an output of shape [73, 12]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=26, hidden_size=79, batch_first=True),\n    nn.Linear(in_features=79, out_features=114),\n    nn.Conv3d(in_channels=12, out_channels=7, kernel_size=3),\n    nn.Conv2d(in_channels=7, out_channels=31, kernel_size=3),\n    nn.Conv2d(in_channels=31, out_channels=18, kernel_size=3),\n    nn.Conv1d(in_channels=18, out_channels=47, kernel_size=3)\n)", "description": "This neural network takes an input of shape [12, 99, 26] and produces an output of shape [47, 99, 114]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=30, out_features=78),\n    nn.LSTM(input_size=78, hidden_size=84, batch_first=True),\n    nn.Conv2d(in_channels=84, out_channels=15, kernel_size=4),\n    nn.GRU(input_size=15, hidden_size=105, batch_first=True),\n    nn.Conv1d(in_channels=105, out_channels=63, kernel_size=2),\n    nn.Conv2d(in_channels=63, out_channels=61, kernel_size=4),\n    nn.LSTM(input_size=61, hidden_size=78, batch_first=True),\n    nn.GRU(input_size=78, hidden_size=122, batch_first=True),\n    nn.GRU(input_size=122, hidden_size=58, batch_first=True)\n)", "description": "This neural network takes an input of shape [30] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=186, out_channels=33, kernel_size=1),\n    nn.GRU(input_size=33, hidden_size=123, batch_first=True),\n    nn.Conv2d(in_channels=123, out_channels=63, kernel_size=1),\n    nn.Conv3d(in_channels=63, out_channels=53, kernel_size=5),\n    nn.Linear(in_features=53, out_features=65),\n    nn.GRU(input_size=65, hidden_size=61, batch_first=True),\n    nn.GRU(input_size=61, hidden_size=13, batch_first=True),\n    nn.LSTM(input_size=13, hidden_size=95, batch_first=True),\n    nn.Conv1d(in_channels=95, out_channels=39, kernel_size=1)\n)", "description": "This neural network takes an input of shape [186] and produces an output of shape [39]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=155, out_channels=22, kernel_size=5)\n)", "description": "This neural network takes an input of shape [155] and produces an output of shape [22]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=1, hidden_size=42, batch_first=True),\n    nn.LSTM(input_size=42, hidden_size=15, batch_first=True),\n    nn.Conv3d(in_channels=42, out_channels=8, kernel_size=2),\n    nn.GRU(input_size=15, hidden_size=102, batch_first=True),\n    nn.LSTM(input_size=102, hidden_size=93, batch_first=True),\n    nn.Conv3d(in_channels=8, out_channels=48, kernel_size=1),\n    nn.Linear(in_features=93, out_features=57)\n)", "description": "This neural network takes an input of shape [42, 27, 1] and produces an output of shape [48, 27, 57]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=256, hidden_size=36, batch_first=True),\n    nn.Conv2d(in_channels=140, out_channels=24, kernel_size=1),\n    nn.LSTM(input_size=36, hidden_size=79, batch_first=True),\n    nn.Conv1d(in_channels=24, out_channels=38, kernel_size=5),\n    nn.LSTM(input_size=79, hidden_size=122, batch_first=True),\n    nn.LSTM(input_size=122, hidden_size=18, batch_first=True),\n    nn.Conv3d(in_channels=38, out_channels=27, kernel_size=4)\n)", "description": "This neural network takes an input of shape [140, 99, 256] and produces an output of shape [27, 99, 18]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=205, hidden_size=1, batch_first=True)\n)", "description": "This neural network takes an input of shape [248, 81, 205] and produces an output of shape [248, 81, 1]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=157, hidden_size=109, batch_first=True),\n    nn.Conv3d(in_channels=116, out_channels=29, kernel_size=2)\n)", "description": "This neural network takes an input of shape [116, 232, 157] and produces an output of shape [29, 232, 109]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=38, out_channels=45, kernel_size=2),\n    nn.Conv2d(in_channels=45, out_channels=59, kernel_size=2),\n    nn.Conv1d(in_channels=59, out_channels=9, kernel_size=4)\n)", "description": "This neural network takes an input of shape [38] and produces an output of shape [9]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=33, hidden_size=29, batch_first=True),\n    nn.GRU(input_size=29, hidden_size=79, batch_first=True),\n    nn.Conv2d(in_channels=79, out_channels=37, kernel_size=2),\n    nn.GRU(input_size=37, hidden_size=61, batch_first=True),\n    nn.Conv2d(in_channels=61, out_channels=54, kernel_size=3)\n)", "description": "This neural network takes an input of shape [33] and produces an output of shape [54]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=255, hidden_size=6, batch_first=True),\n    nn.Conv3d(in_channels=246, out_channels=20, kernel_size=5),\n    nn.Conv1d(in_channels=20, out_channels=61, kernel_size=2),\n    nn.Conv2d(in_channels=61, out_channels=59, kernel_size=5),\n    nn.Conv3d(in_channels=59, out_channels=64, kernel_size=5),\n    nn.LSTM(input_size=6, hidden_size=63, batch_first=True)\n)", "description": "This neural network takes an input of shape [246, 255] and produces an output of shape [64, 63]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=199, out_channels=14, kernel_size=2),\n    nn.Conv2d(in_channels=14, out_channels=5, kernel_size=3),\n    nn.Conv3d(in_channels=5, out_channels=40, kernel_size=2),\n    nn.Conv3d(in_channels=40, out_channels=14, kernel_size=2),\n    nn.Conv2d(in_channels=14, out_channels=43, kernel_size=1),\n    nn.Linear(in_features=123, out_features=99)\n)", "description": "This neural network takes an input of shape [199, 123] and produces an output of shape [43, 99]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=79, out_channels=36, kernel_size=4),\n    nn.Conv3d(in_channels=36, out_channels=26, kernel_size=1),\n    nn.Conv1d(in_channels=26, out_channels=48, kernel_size=2),\n    nn.LSTM(input_size=226, hidden_size=122, batch_first=True)\n)", "description": "This neural network takes an input of shape [79, 226] and produces an output of shape [48, 122]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=237, out_channels=7, kernel_size=5),\n    nn.Linear(in_features=167, out_features=224),\n    nn.Conv2d(in_channels=7, out_channels=24, kernel_size=1),\n    nn.Conv1d(in_channels=24, out_channels=17, kernel_size=4),\n    nn.Conv2d(in_channels=17, out_channels=15, kernel_size=1),\n    nn.LSTM(input_size=224, hidden_size=3, batch_first=True),\n    nn.Conv3d(in_channels=15, out_channels=27, kernel_size=5),\n    nn.GRU(input_size=3, hidden_size=47, batch_first=True),\n    nn.Conv3d(in_channels=27, out_channels=58, kernel_size=1),\n    nn.GRU(input_size=47, hidden_size=10, batch_first=True)\n)", "description": "This neural network takes an input of shape [237, 167] and produces an output of shape [58, 10]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=102, out_channels=17, kernel_size=4),\n    nn.Conv3d(in_channels=17, out_channels=40, kernel_size=1),\n    nn.GRU(input_size=192, hidden_size=116, batch_first=True),\n    nn.Conv1d(in_channels=40, out_channels=30, kernel_size=2),\n    nn.GRU(input_size=116, hidden_size=17, batch_first=True),\n    nn.LSTM(input_size=17, hidden_size=37, batch_first=True),\n    nn.Conv2d(in_channels=30, out_channels=3, kernel_size=1),\n    nn.Conv1d(in_channels=3, out_channels=52, kernel_size=3),\n    nn.Conv1d(in_channels=52, out_channels=55, kernel_size=4),\n    nn.Conv3d(in_channels=55, out_channels=48, kernel_size=1)\n)", "description": "This neural network takes an input of shape [102, 239, 192] and produces an output of shape [48, 239, 37]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=162, out_channels=64, kernel_size=1),\n    nn.Conv3d(in_channels=64, out_channels=5, kernel_size=1),\n    nn.Linear(in_features=245, out_features=13),\n    nn.GRU(input_size=13, hidden_size=20, batch_first=True),\n    nn.Conv1d(in_channels=5, out_channels=2, kernel_size=1)\n)", "description": "This neural network takes an input of shape [162, 210, 245] and produces an output of shape [2, 210, 20]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=219, out_features=29),\n    nn.Conv1d(in_channels=70, out_channels=34, kernel_size=2),\n    nn.Conv2d(in_channels=34, out_channels=1, kernel_size=4),\n    nn.Linear(in_features=29, out_features=149),\n    nn.Conv3d(in_channels=1, out_channels=46, kernel_size=3),\n    nn.LSTM(input_size=149, hidden_size=84, batch_first=True),\n    nn.GRU(input_size=84, hidden_size=26, batch_first=True),\n    nn.Conv1d(in_channels=46, out_channels=41, kernel_size=5),\n    nn.Conv3d(in_channels=41, out_channels=37, kernel_size=5)\n)", "description": "This neural network takes an input of shape [70, 22, 219] and produces an output of shape [37, 22, 26]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=59, hidden_size=94, batch_first=True),\n    nn.LSTM(input_size=94, hidden_size=25, batch_first=True),\n    nn.Conv1d(in_channels=25, out_channels=36, kernel_size=4),\n    nn.LSTM(input_size=36, hidden_size=39, batch_first=True),\n    nn.Conv2d(in_channels=39, out_channels=61, kernel_size=2),\n    nn.GRU(input_size=61, hidden_size=127, batch_first=True)\n)", "description": "This neural network takes an input of shape [59] and produces an output of shape [127]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=193, out_channels=2, kernel_size=5),\n    nn.LSTM(input_size=2, hidden_size=22, batch_first=True)\n)", "description": "This neural network takes an input of shape [193] and produces an output of shape [22]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=191, hidden_size=96, batch_first=True),\n    nn.Linear(in_features=96, out_features=113)\n)", "description": "This neural network takes an input of shape [191] and produces an output of shape [113]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=26, hidden_size=15, batch_first=True),\n    nn.Conv3d(in_channels=163, out_channels=34, kernel_size=5),\n    nn.GRU(input_size=15, hidden_size=37, batch_first=True),\n    nn.GRU(input_size=37, hidden_size=80, batch_first=True),\n    nn.Conv2d(in_channels=34, out_channels=53, kernel_size=3),\n    nn.Conv3d(in_channels=53, out_channels=2, kernel_size=3),\n    nn.Linear(in_features=80, out_features=171),\n    nn.Conv1d(in_channels=2, out_channels=52, kernel_size=4)\n)", "description": "This neural network takes an input of shape [163, 26] and produces an output of shape [52, 171]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=96, out_channels=11, kernel_size=1),\n    nn.Linear(in_features=8, out_features=175),\n    nn.Conv2d(in_channels=11, out_channels=48, kernel_size=2),\n    nn.LSTM(input_size=175, hidden_size=112, batch_first=True),\n    nn.Linear(in_features=112, out_features=186)\n)", "description": "This neural network takes an input of shape [96, 101, 8] and produces an output of shape [48, 101, 186]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=83, hidden_size=85, batch_first=True),\n    nn.Conv3d(in_channels=85, out_channels=16, kernel_size=3),\n    nn.Conv3d(in_channels=16, out_channels=11, kernel_size=5),\n    nn.Linear(in_features=11, out_features=171),\n    nn.Conv3d(in_channels=171, out_channels=63, kernel_size=4)\n)", "description": "This neural network takes an input of shape [83] and produces an output of shape [63]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=3, out_channels=4, kernel_size=5),\n    nn.GRU(input_size=181, hidden_size=112, batch_first=True),\n    nn.LSTM(input_size=112, hidden_size=77, batch_first=True),\n    nn.Conv3d(in_channels=4, out_channels=17, kernel_size=4),\n    nn.Conv2d(in_channels=17, out_channels=49, kernel_size=5),\n    nn.Conv2d(in_channels=49, out_channels=62, kernel_size=3),\n    nn.Conv2d(in_channels=62, out_channels=11, kernel_size=1)\n)", "description": "This neural network takes an input of shape [3, 181] and produces an output of shape [11, 77]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=230, hidden_size=41, batch_first=True),\n    nn.Conv2d(in_channels=231, out_channels=18, kernel_size=4)\n)", "description": "This neural network takes an input of shape [231, 230] and produces an output of shape [18, 41]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=69, hidden_size=25, batch_first=True),\n    nn.Conv1d(in_channels=179, out_channels=8, kernel_size=3)\n)", "description": "This neural network takes an input of shape [179, 69] and produces an output of shape [8, 25]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=122, out_features=100),\n    nn.Conv2d(in_channels=255, out_channels=36, kernel_size=4),\n    nn.Conv2d(in_channels=36, out_channels=23, kernel_size=1),\n    nn.Conv3d(in_channels=23, out_channels=9, kernel_size=4),\n    nn.Conv3d(in_channels=9, out_channels=59, kernel_size=4),\n    nn.Conv3d(in_channels=59, out_channels=49, kernel_size=2),\n    nn.LSTM(input_size=100, hidden_size=124, batch_first=True),\n    nn.Conv3d(in_channels=49, out_channels=5, kernel_size=4)\n)", "description": "This neural network takes an input of shape [255, 122] and produces an output of shape [5, 124]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=195, hidden_size=53, batch_first=True),\n    nn.Linear(in_features=53, out_features=16),\n    nn.Conv1d(in_channels=81, out_channels=27, kernel_size=4),\n    nn.Conv3d(in_channels=27, out_channels=45, kernel_size=4),\n    nn.Linear(in_features=16, out_features=64),\n    nn.Conv2d(in_channels=45, out_channels=53, kernel_size=5),\n    nn.GRU(input_size=64, hidden_size=3, batch_first=True),\n    nn.Linear(in_features=3, out_features=14),\n    nn.Conv2d(in_channels=53, out_channels=16, kernel_size=4),\n    nn.Conv2d(in_channels=16, out_channels=53, kernel_size=5)\n)", "description": "This neural network takes an input of shape [81, 100, 195] and produces an output of shape [53, 100, 14]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=184, hidden_size=121, batch_first=True),\n    nn.Conv2d(in_channels=70, out_channels=44, kernel_size=2),\n    nn.Linear(in_features=121, out_features=231)\n)", "description": "This neural network takes an input of shape [70, 205, 184] and produces an output of shape [44, 205, 231]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=64, out_features=69),\n    nn.Linear(in_features=69, out_features=119),\n    nn.Conv1d(in_channels=179, out_channels=40, kernel_size=5)\n)", "description": "This neural network takes an input of shape [179, 113, 64] and produces an output of shape [40, 113, 119]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=85, hidden_size=26, batch_first=True),\n    nn.Conv1d(in_channels=64, out_channels=30, kernel_size=5),\n    nn.Linear(in_features=26, out_features=62),\n    nn.Conv2d(in_channels=30, out_channels=33, kernel_size=1),\n    nn.Conv1d(in_channels=33, out_channels=41, kernel_size=5),\n    nn.LSTM(input_size=62, hidden_size=40, batch_first=True)\n)", "description": "This neural network takes an input of shape [64, 86, 85] and produces an output of shape [41, 86, 40]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=64, hidden_size=65, batch_first=True)\n)", "description": "This neural network takes an input of shape [64] and produces an output of shape [65]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=27, hidden_size=4, batch_first=True),\n    nn.Conv2d(in_channels=88, out_channels=31, kernel_size=3),\n    nn.Linear(in_features=4, out_features=29),\n    nn.Conv2d(in_channels=31, out_channels=58, kernel_size=1),\n    nn.Conv1d(in_channels=58, out_channels=19, kernel_size=5),\n    nn.LSTM(input_size=29, hidden_size=11, batch_first=True),\n    nn.Linear(in_features=11, out_features=38),\n    nn.Conv2d(in_channels=19, out_channels=13, kernel_size=4),\n    nn.Conv3d(in_channels=13, out_channels=5, kernel_size=5)\n)", "description": "This neural network takes an input of shape [88, 27] and produces an output of shape [5, 38]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=73, out_channels=35, kernel_size=1),\n    nn.Conv2d(in_channels=35, out_channels=2, kernel_size=4),\n    nn.Linear(in_features=85, out_features=232),\n    nn.Conv2d(in_channels=2, out_channels=54, kernel_size=4),\n    nn.Conv3d(in_channels=54, out_channels=24, kernel_size=5),\n    nn.Conv1d(in_channels=24, out_channels=55, kernel_size=2)\n)", "description": "This neural network takes an input of shape [73, 148, 85] and produces an output of shape [55, 148, 232]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=204, hidden_size=50, batch_first=True),\n    nn.GRU(input_size=50, hidden_size=95, batch_first=True),\n    nn.Conv1d(in_channels=87, out_channels=49, kernel_size=2),\n    nn.Conv2d(in_channels=49, out_channels=18, kernel_size=4),\n    nn.Conv3d(in_channels=18, out_channels=40, kernel_size=2),\n    nn.Conv2d(in_channels=40, out_channels=53, kernel_size=1),\n    nn.Conv3d(in_channels=53, out_channels=36, kernel_size=5),\n    nn.LSTM(input_size=95, hidden_size=70, batch_first=True)\n)", "description": "This neural network takes an input of shape [87, 181, 204] and produces an output of shape [36, 181, 70]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=217, out_channels=48, kernel_size=1)\n)", "description": "This neural network takes an input of shape [217, 230] and produces an output of shape [48, 230]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=133, out_features=13),\n    nn.Linear(in_features=13, out_features=251),\n    nn.Conv2d(in_channels=82, out_channels=56, kernel_size=5)\n)", "description": "This neural network takes an input of shape [82, 133] and produces an output of shape [56, 251]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=90, out_channels=21, kernel_size=2),\n    nn.Conv3d(in_channels=21, out_channels=57, kernel_size=5),\n    nn.Conv1d(in_channels=57, out_channels=45, kernel_size=3),\n    nn.Conv2d(in_channels=45, out_channels=45, kernel_size=1),\n    nn.Conv1d(in_channels=45, out_channels=7, kernel_size=4),\n    nn.Conv2d(in_channels=7, out_channels=62, kernel_size=1),\n    nn.Conv3d(in_channels=62, out_channels=57, kernel_size=4),\n    nn.Conv2d(in_channels=57, out_channels=48, kernel_size=5),\n    nn.Conv3d(in_channels=48, out_channels=52, kernel_size=4)\n)", "description": "This neural network takes an input of shape [90, 34, 135] and produces an output of shape [52, 34, 135]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=168, hidden_size=68, batch_first=True),\n    nn.GRU(input_size=68, hidden_size=8, batch_first=True),\n    nn.GRU(input_size=8, hidden_size=114, batch_first=True),\n    nn.GRU(input_size=114, hidden_size=117, batch_first=True),\n    nn.LSTM(input_size=117, hidden_size=5, batch_first=True)\n)", "description": "This neural network takes an input of shape [168] and produces an output of shape [5]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=193, out_channels=16, kernel_size=3),\n    nn.Conv2d(in_channels=16, out_channels=24, kernel_size=5),\n    nn.Conv1d(in_channels=24, out_channels=40, kernel_size=3),\n    nn.Linear(in_features=42, out_features=226),\n    nn.Conv1d(in_channels=40, out_channels=44, kernel_size=5),\n    nn.Conv1d(in_channels=44, out_channels=54, kernel_size=2),\n    nn.LSTM(input_size=226, hidden_size=114, batch_first=True)\n)", "description": "This neural network takes an input of shape [193, 32, 42] and produces an output of shape [54, 32, 114]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=26, out_channels=42, kernel_size=4),\n    nn.Conv2d(in_channels=42, out_channels=12, kernel_size=3),\n    nn.Linear(in_features=37, out_features=167),\n    nn.Linear(in_features=167, out_features=33),\n    nn.LSTM(input_size=33, hidden_size=100, batch_first=True),\n    nn.GRU(input_size=100, hidden_size=116, batch_first=True),\n    nn.Conv1d(in_channels=12, out_channels=15, kernel_size=5)\n)", "description": "This neural network takes an input of shape [26, 243, 37] and produces an output of shape [15, 243, 116]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=43, hidden_size=16, batch_first=True),\n    nn.Conv3d(in_channels=119, out_channels=61, kernel_size=4),\n    nn.GRU(input_size=16, hidden_size=24, batch_first=True),\n    nn.LSTM(input_size=24, hidden_size=10, batch_first=True),\n    nn.Conv3d(in_channels=61, out_channels=10, kernel_size=2),\n    nn.Conv1d(in_channels=10, out_channels=23, kernel_size=4)\n)", "description": "This neural network takes an input of shape [119, 227, 43] and produces an output of shape [23, 227, 10]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=102, out_channels=16, kernel_size=4)\n)", "description": "This neural network takes an input of shape [102, 239] and produces an output of shape [16, 239]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=106, out_features=21)\n)", "description": "This neural network takes an input of shape [207, 37, 106] and produces an output of shape [207, 37, 21]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=187, hidden_size=127, batch_first=True),\n    nn.Conv3d(in_channels=227, out_channels=45, kernel_size=4),\n    nn.Conv1d(in_channels=45, out_channels=6, kernel_size=2),\n    nn.GRU(input_size=127, hidden_size=40, batch_first=True),\n    nn.Linear(in_features=40, out_features=26),\n    nn.GRU(input_size=26, hidden_size=34, batch_first=True),\n    nn.Conv2d(in_channels=6, out_channels=50, kernel_size=4),\n    nn.Conv2d(in_channels=50, out_channels=49, kernel_size=4)\n)", "description": "This neural network takes an input of shape [227, 187] and produces an output of shape [49, 34]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=225, out_features=83),\n    nn.GRU(input_size=83, hidden_size=65, batch_first=True),\n    nn.GRU(input_size=65, hidden_size=73, batch_first=True),\n    nn.Linear(in_features=73, out_features=239),\n    nn.Conv2d(in_channels=239, out_channels=34, kernel_size=3),\n    nn.Linear(in_features=34, out_features=180),\n    nn.LSTM(input_size=180, hidden_size=105, batch_first=True),\n    nn.Conv2d(in_channels=105, out_channels=5, kernel_size=1),\n    nn.GRU(input_size=5, hidden_size=86, batch_first=True),\n    nn.GRU(input_size=86, hidden_size=34, batch_first=True)\n)", "description": "This neural network takes an input of shape [225] and produces an output of shape [34]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=239, out_channels=64, kernel_size=3),\n    nn.GRU(input_size=64, hidden_size=121, batch_first=True),\n    nn.Conv3d(in_channels=121, out_channels=52, kernel_size=1),\n    nn.LSTM(input_size=52, hidden_size=107, batch_first=True)\n)", "description": "This neural network takes an input of shape [239] and produces an output of shape [107]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=219, hidden_size=1, batch_first=True),\n    nn.Conv3d(in_channels=81, out_channels=40, kernel_size=1),\n    nn.Linear(in_features=1, out_features=105),\n    nn.Linear(in_features=105, out_features=9),\n    nn.Conv3d(in_channels=40, out_channels=26, kernel_size=2)\n)", "description": "This neural network takes an input of shape [81, 219] and produces an output of shape [26, 9]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=231, hidden_size=70, batch_first=True),\n    nn.Conv1d(in_channels=92, out_channels=34, kernel_size=1),\n    nn.LSTM(input_size=70, hidden_size=31, batch_first=True),\n    nn.Conv3d(in_channels=34, out_channels=15, kernel_size=5),\n    nn.Conv1d(in_channels=15, out_channels=34, kernel_size=4),\n    nn.Conv1d(in_channels=34, out_channels=60, kernel_size=5),\n    nn.Linear(in_features=31, out_features=82),\n    nn.Conv3d(in_channels=60, out_channels=23, kernel_size=5),\n    nn.Linear(in_features=82, out_features=43)\n)", "description": "This neural network takes an input of shape [92, 34, 231] and produces an output of shape [23, 34, 43]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=153, out_channels=1, kernel_size=1),\n    nn.Conv3d(in_channels=1, out_channels=26, kernel_size=2)\n)", "description": "This neural network takes an input of shape [153, 170, 243] and produces an output of shape [26, 170, 243]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=247, out_features=41),\n    nn.Conv3d(in_channels=41, out_channels=59, kernel_size=2),\n    nn.Conv1d(in_channels=59, out_channels=46, kernel_size=2)\n)", "description": "This neural network takes an input of shape [247] and produces an output of shape [46]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=212, out_channels=40, kernel_size=2),\n    nn.Conv3d(in_channels=40, out_channels=52, kernel_size=5),\n    nn.LSTM(input_size=208, hidden_size=123, batch_first=True),\n    nn.Conv2d(in_channels=52, out_channels=42, kernel_size=4),\n    nn.Conv3d(in_channels=42, out_channels=28, kernel_size=5),\n    nn.GRU(input_size=123, hidden_size=100, batch_first=True),\n    nn.LSTM(input_size=100, hidden_size=43, batch_first=True),\n    nn.Conv2d(in_channels=28, out_channels=9, kernel_size=4)\n)", "description": "This neural network takes an input of shape [212, 208] and produces an output of shape [9, 43]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=85, out_channels=55, kernel_size=5)\n)", "description": "This neural network takes an input of shape [85, 198, 231] and produces an output of shape [55, 198, 231]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=196, hidden_size=12, batch_first=True),\n    nn.Conv1d(in_channels=69, out_channels=62, kernel_size=2),\n    nn.LSTM(input_size=12, hidden_size=54, batch_first=True),\n    nn.Conv2d(in_channels=62, out_channels=22, kernel_size=5),\n    nn.Linear(in_features=54, out_features=11),\n    nn.Conv3d(in_channels=22, out_channels=42, kernel_size=1),\n    nn.LSTM(input_size=11, hidden_size=117, batch_first=True),\n    nn.Linear(in_features=117, out_features=128),\n    nn.Linear(in_features=128, out_features=172),\n    nn.Conv1d(in_channels=42, out_channels=58, kernel_size=5)\n)", "description": "This neural network takes an input of shape [69, 27, 196] and produces an output of shape [58, 27, 172]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=26, out_channels=17, kernel_size=3),\n    nn.Conv3d(in_channels=17, out_channels=61, kernel_size=4),\n    nn.Conv2d(in_channels=61, out_channels=23, kernel_size=2),\n    nn.Conv2d(in_channels=23, out_channels=60, kernel_size=1),\n    nn.Conv3d(in_channels=60, out_channels=56, kernel_size=2),\n    nn.Linear(in_features=56, out_features=88)\n)", "description": "This neural network takes an input of shape [26] and produces an output of shape [88]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=110, hidden_size=41, batch_first=True)\n)", "description": "This neural network takes an input of shape [222, 110] and produces an output of shape [222, 41]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=194, hidden_size=31, batch_first=True),\n    nn.Conv3d(in_channels=30, out_channels=35, kernel_size=5),\n    nn.Conv3d(in_channels=35, out_channels=57, kernel_size=3),\n    nn.Conv1d(in_channels=57, out_channels=28, kernel_size=3),\n    nn.Conv3d(in_channels=28, out_channels=35, kernel_size=4),\n    nn.Conv3d(in_channels=35, out_channels=62, kernel_size=4),\n    nn.Conv3d(in_channels=62, out_channels=57, kernel_size=5),\n    nn.GRU(input_size=31, hidden_size=12, batch_first=True)\n)", "description": "This neural network takes an input of shape [30, 130, 194] and produces an output of shape [57, 130, 12]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=59, out_features=96),\n    nn.Conv3d(in_channels=96, out_channels=49, kernel_size=3),\n    nn.Linear(in_features=49, out_features=187),\n    nn.Conv1d(in_channels=187, out_channels=33, kernel_size=4),\n    nn.GRU(input_size=33, hidden_size=103, batch_first=True),\n    nn.Conv2d(in_channels=103, out_channels=20, kernel_size=3),\n    nn.Conv3d(in_channels=20, out_channels=62, kernel_size=3)\n)", "description": "This neural network takes an input of shape [59] and produces an output of shape [62]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=21, hidden_size=128, batch_first=True),\n    nn.Conv3d(in_channels=128, out_channels=23, kernel_size=2),\n    nn.Linear(in_features=23, out_features=44),\n    nn.Conv2d(in_channels=44, out_channels=35, kernel_size=3),\n    nn.GRU(input_size=35, hidden_size=4, batch_first=True),\n    nn.Conv1d(in_channels=4, out_channels=64, kernel_size=5),\n    nn.LSTM(input_size=64, hidden_size=1, batch_first=True),\n    nn.Conv1d(in_channels=1, out_channels=63, kernel_size=2),\n    nn.Conv2d(in_channels=63, out_channels=41, kernel_size=5)\n)", "description": "This neural network takes an input of shape [21] and produces an output of shape [41]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=149, out_channels=49, kernel_size=3),\n    nn.Linear(in_features=220, out_features=110),\n    nn.GRU(input_size=110, hidden_size=5, batch_first=True),\n    nn.Conv1d(in_channels=49, out_channels=49, kernel_size=1),\n    nn.GRU(input_size=5, hidden_size=76, batch_first=True),\n    nn.LSTM(input_size=76, hidden_size=80, batch_first=True),\n    nn.Conv3d(in_channels=49, out_channels=12, kernel_size=3),\n    nn.Conv2d(in_channels=12, out_channels=22, kernel_size=4),\n    nn.Linear(in_features=80, out_features=56)\n)", "description": "This neural network takes an input of shape [149, 47, 220] and produces an output of shape [22, 47, 56]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=21, out_channels=11, kernel_size=4),\n    nn.Conv2d(in_channels=11, out_channels=31, kernel_size=2),\n    nn.Conv1d(in_channels=31, out_channels=60, kernel_size=1)\n)", "description": "This neural network takes an input of shape [21] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=31, out_channels=36, kernel_size=5),\n    nn.Conv1d(in_channels=36, out_channels=26, kernel_size=4),\n    nn.Conv3d(in_channels=26, out_channels=44, kernel_size=5),\n    nn.LSTM(input_size=214, hidden_size=42, batch_first=True),\n    nn.Linear(in_features=42, out_features=57)\n)", "description": "This neural network takes an input of shape [31, 214] and produces an output of shape [44, 57]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=205, hidden_size=75, batch_first=True)\n)", "description": "This neural network takes an input of shape [205] and produces an output of shape [75]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=220, out_features=127),\n    nn.Conv2d(in_channels=136, out_channels=41, kernel_size=4),\n    nn.Conv3d(in_channels=41, out_channels=17, kernel_size=2)\n)", "description": "This neural network takes an input of shape [136, 220] and produces an output of shape [17, 127]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=172, out_features=44),\n    nn.GRU(input_size=44, hidden_size=121, batch_first=True),\n    nn.GRU(input_size=121, hidden_size=30, batch_first=True),\n    nn.Conv1d(in_channels=186, out_channels=22, kernel_size=5),\n    nn.GRU(input_size=30, hidden_size=24, batch_first=True),\n    nn.Conv2d(in_channels=22, out_channels=34, kernel_size=4)\n)", "description": "This neural network takes an input of shape [186, 67, 172] and produces an output of shape [34, 67, 24]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=169, out_channels=33, kernel_size=1),\n    nn.GRU(input_size=33, hidden_size=9, batch_first=True),\n    nn.GRU(input_size=9, hidden_size=67, batch_first=True),\n    nn.Conv3d(in_channels=67, out_channels=53, kernel_size=5)\n)", "description": "This neural network takes an input of shape [169] and produces an output of shape [53]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=188, hidden_size=125, batch_first=True),\n    nn.GRU(input_size=125, hidden_size=82, batch_first=True),\n    nn.GRU(input_size=82, hidden_size=52, batch_first=True),\n    nn.GRU(input_size=52, hidden_size=12, batch_first=True)\n)", "description": "This neural network takes an input of shape [188] and produces an output of shape [12]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=142, hidden_size=4, batch_first=True),\n    nn.LSTM(input_size=4, hidden_size=12, batch_first=True),\n    nn.Conv3d(in_channels=241, out_channels=46, kernel_size=4),\n    nn.GRU(input_size=12, hidden_size=15, batch_first=True)\n)", "description": "This neural network takes an input of shape [241, 142] and produces an output of shape [46, 15]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=222, out_channels=10, kernel_size=2)\n)", "description": "This neural network takes an input of shape [222, 77] and produces an output of shape [10, 77]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=70, hidden_size=23, batch_first=True),\n    nn.Conv3d(in_channels=49, out_channels=19, kernel_size=4),\n    nn.Conv3d(in_channels=19, out_channels=30, kernel_size=3),\n    nn.Conv2d(in_channels=30, out_channels=31, kernel_size=5),\n    nn.Conv1d(in_channels=31, out_channels=32, kernel_size=4),\n    nn.Conv3d(in_channels=32, out_channels=37, kernel_size=4),\n    nn.GRU(input_size=23, hidden_size=118, batch_first=True),\n    nn.Linear(in_features=118, out_features=42),\n    nn.Conv1d(in_channels=37, out_channels=25, kernel_size=4)\n)", "description": "This neural network takes an input of shape [49, 120, 70] and produces an output of shape [25, 120, 42]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=108, hidden_size=34, batch_first=True),\n    nn.Linear(in_features=34, out_features=147),\n    nn.Conv2d(in_channels=147, out_channels=64, kernel_size=1),\n    nn.Linear(in_features=64, out_features=152),\n    nn.GRU(input_size=152, hidden_size=52, batch_first=True),\n    nn.Linear(in_features=52, out_features=153),\n    nn.Linear(in_features=153, out_features=106),\n    nn.Conv3d(in_channels=106, out_channels=4, kernel_size=4)\n)", "description": "This neural network takes an input of shape [108] and produces an output of shape [4]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=42, out_features=2),\n    nn.Conv3d(in_channels=218, out_channels=17, kernel_size=4),\n    nn.Conv1d(in_channels=17, out_channels=29, kernel_size=5),\n    nn.Conv3d(in_channels=29, out_channels=11, kernel_size=4),\n    nn.GRU(input_size=2, hidden_size=58, batch_first=True),\n    nn.Conv1d(in_channels=11, out_channels=42, kernel_size=2),\n    nn.LSTM(input_size=58, hidden_size=18, batch_first=True),\n    nn.GRU(input_size=18, hidden_size=35, batch_first=True)\n)", "description": "This neural network takes an input of shape [218, 30, 42] and produces an output of shape [42, 30, 35]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=251, out_features=35),\n    nn.Conv3d(in_channels=90, out_channels=2, kernel_size=1),\n    nn.LSTM(input_size=35, hidden_size=54, batch_first=True),\n    nn.Conv1d(in_channels=2, out_channels=62, kernel_size=5),\n    nn.Conv2d(in_channels=62, out_channels=3, kernel_size=3),\n    nn.Conv2d(in_channels=3, out_channels=23, kernel_size=2),\n    nn.Conv1d(in_channels=23, out_channels=33, kernel_size=5),\n    nn.Conv1d(in_channels=33, out_channels=14, kernel_size=4),\n    nn.GRU(input_size=54, hidden_size=107, batch_first=True),\n    nn.GRU(input_size=107, hidden_size=82, batch_first=True)\n)", "description": "This neural network takes an input of shape [90, 186, 251] and produces an output of shape [14, 186, 82]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=207, hidden_size=89, batch_first=True),\n    nn.Conv3d(in_channels=236, out_channels=60, kernel_size=4)\n)", "description": "This neural network takes an input of shape [236, 20, 207] and produces an output of shape [60, 20, 89]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=72, out_channels=52, kernel_size=4),\n    nn.GRU(input_size=52, hidden_size=93, batch_first=True),\n    nn.Linear(in_features=93, out_features=248)\n)", "description": "This neural network takes an input of shape [72] and produces an output of shape [248]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=217, out_channels=45, kernel_size=3),\n    nn.Linear(in_features=239, out_features=168),\n    nn.Conv2d(in_channels=45, out_channels=9, kernel_size=4),\n    nn.Conv1d(in_channels=9, out_channels=55, kernel_size=4),\n    nn.Linear(in_features=168, out_features=14),\n    nn.Conv3d(in_channels=55, out_channels=43, kernel_size=3),\n    nn.Conv2d(in_channels=43, out_channels=25, kernel_size=4),\n    nn.LSTM(input_size=14, hidden_size=126, batch_first=True)\n)", "description": "This neural network takes an input of shape [217, 98, 239] and produces an output of shape [25, 98, 126]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=223, out_channels=42, kernel_size=3),\n    nn.Conv1d(in_channels=42, out_channels=58, kernel_size=5),\n    nn.Conv1d(in_channels=58, out_channels=24, kernel_size=2),\n    nn.Conv1d(in_channels=24, out_channels=37, kernel_size=4),\n    nn.LSTM(input_size=73, hidden_size=5, batch_first=True),\n    nn.Conv2d(in_channels=37, out_channels=3, kernel_size=3),\n    nn.Conv2d(in_channels=3, out_channels=61, kernel_size=1),\n    nn.LSTM(input_size=5, hidden_size=27, batch_first=True),\n    nn.Linear(in_features=27, out_features=206)\n)", "description": "This neural network takes an input of shape [223, 73] and produces an output of shape [61, 206]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=19, out_features=175),\n    nn.Conv3d(in_channels=175, out_channels=40, kernel_size=1),\n    nn.Conv3d(in_channels=40, out_channels=32, kernel_size=3),\n    nn.Conv3d(in_channels=32, out_channels=23, kernel_size=4),\n    nn.Conv1d(in_channels=23, out_channels=55, kernel_size=3)\n)", "description": "This neural network takes an input of shape [19] and produces an output of shape [55]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=239, out_features=214),\n    nn.GRU(input_size=214, hidden_size=16, batch_first=True),\n    nn.Conv2d(in_channels=12, out_channels=13, kernel_size=5),\n    nn.Conv3d(in_channels=13, out_channels=47, kernel_size=1)\n)", "description": "This neural network takes an input of shape [12, 239] and produces an output of shape [47, 16]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=98, out_channels=43, kernel_size=4),\n    nn.LSTM(input_size=43, hidden_size=96, batch_first=True),\n    nn.GRU(input_size=96, hidden_size=52, batch_first=True),\n    nn.Linear(in_features=52, out_features=158)\n)", "description": "This neural network takes an input of shape [98] and produces an output of shape [158]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=142, out_channels=54, kernel_size=1),\n    nn.LSTM(input_size=6, hidden_size=70, batch_first=True),\n    nn.LSTM(input_size=70, hidden_size=123, batch_first=True)\n)", "description": "This neural network takes an input of shape [142, 6] and produces an output of shape [54, 123]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=57, out_channels=4, kernel_size=1),\n    nn.Conv2d(in_channels=4, out_channels=35, kernel_size=5),\n    nn.LSTM(input_size=250, hidden_size=77, batch_first=True),\n    nn.Conv3d(in_channels=35, out_channels=11, kernel_size=5),\n    nn.Linear(in_features=77, out_features=205),\n    nn.LSTM(input_size=205, hidden_size=88, batch_first=True),\n    nn.Linear(in_features=88, out_features=74)\n)", "description": "This neural network takes an input of shape [57, 250] and produces an output of shape [11, 74]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=86, hidden_size=22, batch_first=True),\n    nn.GRU(input_size=22, hidden_size=67, batch_first=True),\n    nn.Linear(in_features=67, out_features=230),\n    nn.Conv2d(in_channels=230, out_channels=7, kernel_size=2),\n    nn.LSTM(input_size=7, hidden_size=58, batch_first=True)\n)", "description": "This neural network takes an input of shape [86] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=92, out_channels=25, kernel_size=2),\n    nn.Linear(in_features=103, out_features=255),\n    nn.LSTM(input_size=255, hidden_size=20, batch_first=True),\n    nn.Conv2d(in_channels=25, out_channels=47, kernel_size=1),\n    nn.Conv3d(in_channels=47, out_channels=54, kernel_size=1),\n    nn.Conv1d(in_channels=54, out_channels=26, kernel_size=2),\n    nn.Linear(in_features=20, out_features=209)\n)", "description": "This neural network takes an input of shape [92, 221, 103] and produces an output of shape [26, 221, 209]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=11, hidden_size=111, batch_first=True),\n    nn.Conv3d(in_channels=111, out_channels=32, kernel_size=4),\n    nn.Conv1d(in_channels=32, out_channels=56, kernel_size=4),\n    nn.Linear(in_features=56, out_features=210),\n    nn.Conv1d(in_channels=210, out_channels=14, kernel_size=3),\n    nn.Linear(in_features=14, out_features=33)\n)", "description": "This neural network takes an input of shape [11] and produces an output of shape [33]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=11, out_channels=20, kernel_size=5)\n)", "description": "This neural network takes an input of shape [11] and produces an output of shape [20]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=183, out_features=227),\n    nn.LSTM(input_size=227, hidden_size=24, batch_first=True),\n    nn.Conv1d(in_channels=143, out_channels=48, kernel_size=5),\n    nn.Conv3d(in_channels=48, out_channels=15, kernel_size=5),\n    nn.LSTM(input_size=24, hidden_size=90, batch_first=True),\n    nn.Linear(in_features=90, out_features=64)\n)", "description": "This neural network takes an input of shape [143, 187, 183] and produces an output of shape [15, 187, 64]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=230, out_channels=56, kernel_size=1),\n    nn.LSTM(input_size=248, hidden_size=32, batch_first=True),\n    nn.GRU(input_size=32, hidden_size=109, batch_first=True),\n    nn.Conv3d(in_channels=56, out_channels=64, kernel_size=2)\n)", "description": "This neural network takes an input of shape [230, 181, 248] and produces an output of shape [64, 181, 109]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=133, out_channels=3, kernel_size=3),\n    nn.Conv1d(in_channels=3, out_channels=29, kernel_size=5),\n    nn.Conv3d(in_channels=29, out_channels=17, kernel_size=1)\n)", "description": "This neural network takes an input of shape [133] and produces an output of shape [17]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=54, out_channels=34, kernel_size=2),\n    nn.GRU(input_size=121, hidden_size=120, batch_first=True),\n    nn.Linear(in_features=120, out_features=81),\n    nn.Conv2d(in_channels=34, out_channels=33, kernel_size=1),\n    nn.LSTM(input_size=81, hidden_size=74, batch_first=True),\n    nn.Conv3d(in_channels=33, out_channels=59, kernel_size=4),\n    nn.Conv3d(in_channels=59, out_channels=26, kernel_size=2),\n    nn.Conv2d(in_channels=26, out_channels=49, kernel_size=1),\n    nn.Conv2d(in_channels=49, out_channels=14, kernel_size=4),\n    nn.Conv2d(in_channels=14, out_channels=28, kernel_size=3)\n)", "description": "This neural network takes an input of shape [54, 121] and produces an output of shape [28, 74]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=206, out_channels=5, kernel_size=5),\n    nn.Conv3d(in_channels=5, out_channels=64, kernel_size=1),\n    nn.Conv3d(in_channels=64, out_channels=44, kernel_size=5),\n    nn.Linear(in_features=44, out_features=95),\n    nn.Conv3d(in_channels=95, out_channels=57, kernel_size=5),\n    nn.GRU(input_size=57, hidden_size=122, batch_first=True),\n    nn.Conv2d(in_channels=122, out_channels=38, kernel_size=4)\n)", "description": "This neural network takes an input of shape [206] and produces an output of shape [38]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=62, out_channels=12, kernel_size=3),\n    nn.Linear(in_features=238, out_features=179),\n    nn.LSTM(input_size=179, hidden_size=123, batch_first=True),\n    nn.Conv2d(in_channels=12, out_channels=53, kernel_size=3),\n    nn.GRU(input_size=123, hidden_size=90, batch_first=True),\n    nn.GRU(input_size=90, hidden_size=60, batch_first=True)\n)", "description": "This neural network takes an input of shape [62, 238] and produces an output of shape [53, 60]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=93, hidden_size=66, batch_first=True),\n    nn.Conv3d(in_channels=66, out_channels=59, kernel_size=3),\n    nn.Linear(in_features=59, out_features=251),\n    nn.Conv2d(in_channels=251, out_channels=57, kernel_size=4),\n    nn.GRU(input_size=57, hidden_size=21, batch_first=True),\n    nn.Conv2d(in_channels=21, out_channels=27, kernel_size=4),\n    nn.Conv2d(in_channels=27, out_channels=19, kernel_size=1),\n    nn.Conv1d(in_channels=19, out_channels=8, kernel_size=5)\n)", "description": "This neural network takes an input of shape [93] and produces an output of shape [8]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=20, out_features=221)\n)", "description": "This neural network takes an input of shape [15, 20] and produces an output of shape [15, 221]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=177, out_channels=59, kernel_size=3),\n    nn.Conv1d(in_channels=59, out_channels=60, kernel_size=5),\n    nn.GRU(input_size=60, hidden_size=35, batch_first=True)\n)", "description": "This neural network takes an input of shape [177] and produces an output of shape [35]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=128, hidden_size=41, batch_first=True),\n    nn.Conv1d(in_channels=41, out_channels=35, kernel_size=1),\n    nn.GRU(input_size=35, hidden_size=108, batch_first=True),\n    nn.Conv2d(in_channels=108, out_channels=20, kernel_size=2),\n    nn.LSTM(input_size=20, hidden_size=118, batch_first=True)\n)", "description": "This neural network takes an input of shape [128] and produces an output of shape [118]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=87, out_features=79),\n    nn.GRU(input_size=79, hidden_size=50, batch_first=True),\n    nn.GRU(input_size=50, hidden_size=82, batch_first=True),\n    nn.Linear(in_features=82, out_features=247),\n    nn.Linear(in_features=247, out_features=156),\n    nn.Conv3d(in_channels=251, out_channels=4, kernel_size=3)\n)", "description": "This neural network takes an input of shape [251, 87] and produces an output of shape [4, 156]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=142, out_features=22),\n    nn.Conv1d(in_channels=22, out_channels=2, kernel_size=2),\n    nn.Conv3d(in_channels=2, out_channels=45, kernel_size=3),\n    nn.Conv2d(in_channels=45, out_channels=50, kernel_size=2),\n    nn.GRU(input_size=50, hidden_size=6, batch_first=True),\n    nn.Conv2d(in_channels=6, out_channels=33, kernel_size=5),\n    nn.LSTM(input_size=33, hidden_size=111, batch_first=True),\n    nn.Conv3d(in_channels=111, out_channels=26, kernel_size=5),\n    nn.Linear(in_features=26, out_features=53)\n)", "description": "This neural network takes an input of shape [142] and produces an output of shape [53]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=220, hidden_size=48, batch_first=True),\n    nn.Conv3d(in_channels=48, out_channels=64, kernel_size=5),\n    nn.LSTM(input_size=64, hidden_size=29, batch_first=True),\n    nn.Linear(in_features=29, out_features=157),\n    nn.Conv2d(in_channels=157, out_channels=50, kernel_size=5),\n    nn.Linear(in_features=50, out_features=33)\n)", "description": "This neural network takes an input of shape [220] and produces an output of shape [33]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=178, out_channels=43, kernel_size=1),\n    nn.Conv1d(in_channels=43, out_channels=63, kernel_size=1),\n    nn.GRU(input_size=78, hidden_size=59, batch_first=True),\n    nn.GRU(input_size=59, hidden_size=78, batch_first=True),\n    nn.LSTM(input_size=78, hidden_size=103, batch_first=True),\n    nn.GRU(input_size=103, hidden_size=53, batch_first=True),\n    nn.Conv3d(in_channels=63, out_channels=46, kernel_size=2),\n    nn.Linear(in_features=53, out_features=90)\n)", "description": "This neural network takes an input of shape [178, 78] and produces an output of shape [46, 90]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=206, out_channels=30, kernel_size=3),\n    nn.Conv3d(in_channels=30, out_channels=58, kernel_size=1)\n)", "description": "This neural network takes an input of shape [206] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=150, hidden_size=14, batch_first=True),\n    nn.Linear(in_features=14, out_features=61),\n    nn.Linear(in_features=61, out_features=95),\n    nn.Conv1d(in_channels=163, out_channels=44, kernel_size=4),\n    nn.Conv1d(in_channels=44, out_channels=44, kernel_size=1),\n    nn.Conv2d(in_channels=44, out_channels=16, kernel_size=4),\n    nn.Linear(in_features=95, out_features=178),\n    nn.Conv3d(in_channels=16, out_channels=3, kernel_size=1)\n)", "description": "This neural network takes an input of shape [163, 150] and produces an output of shape [3, 178]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=180, hidden_size=20, batch_first=True),\n    nn.Linear(in_features=20, out_features=217),\n    nn.Linear(in_features=217, out_features=165),\n    nn.Conv1d(in_channels=204, out_channels=22, kernel_size=1),\n    nn.Linear(in_features=165, out_features=243),\n    nn.GRU(input_size=243, hidden_size=107, batch_first=True),\n    nn.Conv3d(in_channels=22, out_channels=61, kernel_size=1),\n    nn.GRU(input_size=107, hidden_size=122, batch_first=True),\n    nn.LSTM(input_size=122, hidden_size=41, batch_first=True)\n)", "description": "This neural network takes an input of shape [204, 226, 180] and produces an output of shape [61, 226, 41]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=164, out_features=239),\n    nn.Conv1d(in_channels=47, out_channels=14, kernel_size=2),\n    nn.Conv2d(in_channels=14, out_channels=56, kernel_size=4),\n    nn.LSTM(input_size=239, hidden_size=54, batch_first=True)\n)", "description": "This neural network takes an input of shape [47, 166, 164] and produces an output of shape [56, 166, 54]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=18, out_channels=60, kernel_size=5),\n    nn.Conv3d(in_channels=60, out_channels=12, kernel_size=2),\n    nn.Conv2d(in_channels=12, out_channels=15, kernel_size=1),\n    nn.Conv1d(in_channels=15, out_channels=2, kernel_size=3),\n    nn.GRU(input_size=220, hidden_size=76, batch_first=True),\n    nn.GRU(input_size=76, hidden_size=98, batch_first=True),\n    nn.GRU(input_size=98, hidden_size=78, batch_first=True),\n    nn.LSTM(input_size=78, hidden_size=98, batch_first=True)\n)", "description": "This neural network takes an input of shape [18, 220] and produces an output of shape [2, 98]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=125, hidden_size=47, batch_first=True),\n    nn.Conv1d(in_channels=47, out_channels=20, kernel_size=4),\n    nn.Conv1d(in_channels=20, out_channels=7, kernel_size=5),\n    nn.Conv2d(in_channels=7, out_channels=35, kernel_size=1),\n    nn.GRU(input_size=35, hidden_size=87, batch_first=True),\n    nn.Conv3d(in_channels=87, out_channels=41, kernel_size=4)\n)", "description": "This neural network takes an input of shape [125] and produces an output of shape [41]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=161, out_features=256),\n    nn.LSTM(input_size=256, hidden_size=83, batch_first=True),\n    nn.Conv2d(in_channels=197, out_channels=59, kernel_size=5),\n    nn.Linear(in_features=83, out_features=8),\n    nn.Linear(in_features=8, out_features=254)\n)", "description": "This neural network takes an input of shape [197, 161] and produces an output of shape [59, 254]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=40, hidden_size=118, batch_first=True),\n    nn.Linear(in_features=118, out_features=64),\n    nn.Conv1d(in_channels=118, out_channels=23, kernel_size=3),\n    nn.LSTM(input_size=64, hidden_size=35, batch_first=True),\n    nn.Linear(in_features=35, out_features=69),\n    nn.GRU(input_size=69, hidden_size=34, batch_first=True)\n)", "description": "This neural network takes an input of shape [118, 133, 40] and produces an output of shape [23, 133, 34]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=149, out_channels=46, kernel_size=5),\n    nn.GRU(input_size=46, hidden_size=94, batch_first=True),\n    nn.Linear(in_features=94, out_features=131),\n    nn.LSTM(input_size=131, hidden_size=19, batch_first=True),\n    nn.LSTM(input_size=19, hidden_size=4, batch_first=True),\n    nn.GRU(input_size=4, hidden_size=92, batch_first=True),\n    nn.LSTM(input_size=92, hidden_size=123, batch_first=True),\n    nn.Conv3d(in_channels=123, out_channels=8, kernel_size=4),\n    nn.Conv2d(in_channels=8, out_channels=38, kernel_size=3)\n)", "description": "This neural network takes an input of shape [149] and produces an output of shape [38]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=168, hidden_size=58, batch_first=True),\n    nn.Conv3d(in_channels=184, out_channels=62, kernel_size=3),\n    nn.GRU(input_size=58, hidden_size=38, batch_first=True),\n    nn.GRU(input_size=38, hidden_size=113, batch_first=True),\n    nn.Conv2d(in_channels=62, out_channels=24, kernel_size=3)\n)", "description": "This neural network takes an input of shape [184, 168] and produces an output of shape [24, 113]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=46, out_channels=35, kernel_size=2),\n    nn.Conv2d(in_channels=35, out_channels=13, kernel_size=1)\n)", "description": "This neural network takes an input of shape [46, 78, 155] and produces an output of shape [13, 78, 155]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=99, out_channels=35, kernel_size=4),\n    nn.LSTM(input_size=148, hidden_size=4, batch_first=True),\n    nn.GRU(input_size=4, hidden_size=88, batch_first=True),\n    nn.Conv1d(in_channels=35, out_channels=42, kernel_size=2),\n    nn.Linear(in_features=88, out_features=156)\n)", "description": "This neural network takes an input of shape [99, 89, 148] and produces an output of shape [42, 89, 156]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=254, hidden_size=114, batch_first=True),\n    nn.Conv2d(in_channels=114, out_channels=6, kernel_size=4),\n    nn.Conv1d(in_channels=6, out_channels=49, kernel_size=1),\n    nn.Conv2d(in_channels=49, out_channels=1, kernel_size=2),\n    nn.LSTM(input_size=1, hidden_size=65, batch_first=True),\n    nn.Conv2d(in_channels=65, out_channels=24, kernel_size=5),\n    nn.LSTM(input_size=24, hidden_size=114, batch_first=True),\n    nn.Linear(in_features=114, out_features=204),\n    nn.GRU(input_size=204, hidden_size=56, batch_first=True),\n    nn.Conv1d(in_channels=56, out_channels=6, kernel_size=1)\n)", "description": "This neural network takes an input of shape [254] and produces an output of shape [6]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=214, hidden_size=17, batch_first=True),\n    nn.LSTM(input_size=17, hidden_size=39, batch_first=True),\n    nn.Conv3d(in_channels=106, out_channels=57, kernel_size=2),\n    nn.GRU(input_size=39, hidden_size=59, batch_first=True),\n    nn.Linear(in_features=59, out_features=16)\n)", "description": "This neural network takes an input of shape [106, 214] and produces an output of shape [57, 16]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=198, out_features=10),\n    nn.Linear(in_features=10, out_features=15),\n    nn.Linear(in_features=15, out_features=101),\n    nn.GRU(input_size=101, hidden_size=65, batch_first=True)\n)", "description": "This neural network takes an input of shape [198] and produces an output of shape [65]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=216, out_channels=6, kernel_size=2),\n    nn.LSTM(input_size=229, hidden_size=94, batch_first=True),\n    nn.Linear(in_features=94, out_features=230)\n)", "description": "This neural network takes an input of shape [216, 229] and produces an output of shape [6, 230]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=169, out_channels=27, kernel_size=2),\n    nn.LSTM(input_size=159, hidden_size=39, batch_first=True),\n    nn.GRU(input_size=39, hidden_size=2, batch_first=True),\n    nn.Conv3d(in_channels=27, out_channels=40, kernel_size=3),\n    nn.Conv3d(in_channels=40, out_channels=5, kernel_size=3),\n    nn.Conv2d(in_channels=5, out_channels=26, kernel_size=1),\n    nn.GRU(input_size=2, hidden_size=62, batch_first=True)\n)", "description": "This neural network takes an input of shape [169, 159] and produces an output of shape [26, 62]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=169, out_channels=58, kernel_size=3)\n)", "description": "This neural network takes an input of shape [169] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=28, hidden_size=70, batch_first=True),\n    nn.Conv3d(in_channels=70, out_channels=32, kernel_size=5)\n)", "description": "This neural network takes an input of shape [28] and produces an output of shape [32]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=115, out_channels=40, kernel_size=4),\n    nn.GRU(input_size=3, hidden_size=20, batch_first=True),\n    nn.LSTM(input_size=20, hidden_size=37, batch_first=True),\n    nn.Linear(in_features=37, out_features=197),\n    nn.Linear(in_features=197, out_features=47)\n)", "description": "This neural network takes an input of shape [115, 111, 3] and produces an output of shape [40, 111, 47]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=131, out_channels=49, kernel_size=4),\n    nn.Conv1d(in_channels=49, out_channels=2, kernel_size=5),\n    nn.Linear(in_features=2, out_features=251),\n    nn.GRU(input_size=251, hidden_size=61, batch_first=True),\n    nn.LSTM(input_size=61, hidden_size=4, batch_first=True)\n)", "description": "This neural network takes an input of shape [131] and produces an output of shape [4]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=242, hidden_size=117, batch_first=True),\n    nn.GRU(input_size=117, hidden_size=113, batch_first=True),\n    nn.Linear(in_features=113, out_features=88),\n    nn.Conv1d(in_channels=88, out_channels=10, kernel_size=1),\n    nn.GRU(input_size=10, hidden_size=70, batch_first=True),\n    nn.Linear(in_features=70, out_features=34)\n)", "description": "This neural network takes an input of shape [242] and produces an output of shape [34]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=56, hidden_size=13, batch_first=True),\n    nn.Conv2d(in_channels=213, out_channels=47, kernel_size=2),\n    nn.Conv1d(in_channels=47, out_channels=34, kernel_size=5),\n    nn.GRU(input_size=13, hidden_size=90, batch_first=True),\n    nn.LSTM(input_size=90, hidden_size=104, batch_first=True),\n    nn.Linear(in_features=104, out_features=20)\n)", "description": "This neural network takes an input of shape [213, 210, 56] and produces an output of shape [34, 210, 20]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=75, out_channels=11, kernel_size=2),\n    nn.Conv3d(in_channels=11, out_channels=24, kernel_size=2),\n    nn.LSTM(input_size=24, hidden_size=41, batch_first=True),\n    nn.Conv3d(in_channels=41, out_channels=36, kernel_size=1),\n    nn.Conv1d(in_channels=36, out_channels=11, kernel_size=5),\n    nn.Conv3d(in_channels=11, out_channels=62, kernel_size=4),\n    nn.Conv2d(in_channels=62, out_channels=21, kernel_size=2),\n    nn.Conv1d(in_channels=21, out_channels=9, kernel_size=4),\n    nn.GRU(input_size=9, hidden_size=34, batch_first=True)\n)", "description": "This neural network takes an input of shape [75] and produces an output of shape [34]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=79, out_channels=50, kernel_size=3),\n    nn.Conv3d(in_channels=50, out_channels=7, kernel_size=5),\n    nn.Conv3d(in_channels=7, out_channels=62, kernel_size=2),\n    nn.GRU(input_size=62, hidden_size=12, batch_first=True),\n    nn.Linear(in_features=12, out_features=112),\n    nn.Conv2d(in_channels=112, out_channels=25, kernel_size=3),\n    nn.LSTM(input_size=25, hidden_size=65, batch_first=True),\n    nn.Conv2d(in_channels=65, out_channels=59, kernel_size=3),\n    nn.GRU(input_size=59, hidden_size=101, batch_first=True)\n)", "description": "This neural network takes an input of shape [79] and produces an output of shape [101]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=110, out_features=97),\n    nn.Linear(in_features=97, out_features=182),\n    nn.Conv2d(in_channels=182, out_channels=59, kernel_size=5),\n    nn.GRU(input_size=59, hidden_size=119, batch_first=True),\n    nn.Conv2d(in_channels=119, out_channels=33, kernel_size=5),\n    nn.Conv3d(in_channels=33, out_channels=33, kernel_size=1)\n)", "description": "This neural network takes an input of shape [110] and produces an output of shape [33]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=55, out_features=100),\n    nn.Linear(in_features=100, out_features=198),\n    nn.Conv3d(in_channels=198, out_channels=17, kernel_size=1)\n)", "description": "This neural network takes an input of shape [55] and produces an output of shape [17]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=177, out_channels=25, kernel_size=1),\n    nn.Conv1d(in_channels=25, out_channels=33, kernel_size=2),\n    nn.LSTM(input_size=127, hidden_size=8, batch_first=True),\n    nn.Linear(in_features=8, out_features=228),\n    nn.Conv3d(in_channels=33, out_channels=37, kernel_size=4),\n    nn.Conv1d(in_channels=37, out_channels=44, kernel_size=1),\n    nn.Linear(in_features=228, out_features=109),\n    nn.Conv3d(in_channels=44, out_channels=14, kernel_size=1),\n    nn.GRU(input_size=109, hidden_size=14, batch_first=True),\n    nn.GRU(input_size=14, hidden_size=44, batch_first=True)\n)", "description": "This neural network takes an input of shape [177, 65, 127] and produces an output of shape [14, 65, 44]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=214, out_features=140)\n)", "description": "This neural network takes an input of shape [57, 39, 214] and produces an output of shape [57, 39, 140]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=132, out_channels=9, kernel_size=1),\n    nn.GRU(input_size=9, hidden_size=48, batch_first=True),\n    nn.GRU(input_size=48, hidden_size=78, batch_first=True),\n    nn.Conv1d(in_channels=78, out_channels=7, kernel_size=4)\n)", "description": "This neural network takes an input of shape [132] and produces an output of shape [7]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=31, out_channels=1, kernel_size=3),\n    nn.Conv2d(in_channels=1, out_channels=61, kernel_size=1),\n    nn.Conv1d(in_channels=61, out_channels=41, kernel_size=5)\n)", "description": "This neural network takes an input of shape [31] and produces an output of shape [41]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=3, out_features=1),\n    nn.Conv1d(in_channels=229, out_channels=62, kernel_size=4),\n    nn.LSTM(input_size=1, hidden_size=98, batch_first=True),\n    nn.Linear(in_features=98, out_features=69),\n    nn.Linear(in_features=69, out_features=170),\n    nn.GRU(input_size=170, hidden_size=126, batch_first=True),\n    nn.Linear(in_features=126, out_features=200)\n)", "description": "This neural network takes an input of shape [229, 3] and produces an output of shape [62, 200]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=35, out_features=103),\n    nn.Conv1d(in_channels=149, out_channels=3, kernel_size=2)\n)", "description": "This neural network takes an input of shape [149, 179, 35] and produces an output of shape [3, 179, 103]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=85, out_channels=44, kernel_size=5),\n    nn.Conv2d(in_channels=44, out_channels=53, kernel_size=1),\n    nn.Conv2d(in_channels=53, out_channels=5, kernel_size=1),\n    nn.Conv3d(in_channels=5, out_channels=27, kernel_size=5),\n    nn.LSTM(input_size=27, hidden_size=34, batch_first=True),\n    nn.LSTM(input_size=34, hidden_size=97, batch_first=True),\n    nn.Conv1d(in_channels=97, out_channels=8, kernel_size=4),\n    nn.Conv1d(in_channels=8, out_channels=49, kernel_size=4),\n    nn.LSTM(input_size=49, hidden_size=38, batch_first=True)\n)", "description": "This neural network takes an input of shape [85] and produces an output of shape [38]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=246, out_features=161),\n    nn.GRU(input_size=161, hidden_size=49, batch_first=True),\n    nn.GRU(input_size=49, hidden_size=48, batch_first=True),\n    nn.LSTM(input_size=48, hidden_size=3, batch_first=True),\n    nn.Conv3d(in_channels=134, out_channels=36, kernel_size=3),\n    nn.Conv3d(in_channels=36, out_channels=32, kernel_size=1),\n    nn.Conv2d(in_channels=32, out_channels=7, kernel_size=4)\n)", "description": "This neural network takes an input of shape [134, 6, 246] and produces an output of shape [7, 6, 3]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=124, out_channels=1, kernel_size=3),\n    nn.LSTM(input_size=221, hidden_size=17, batch_first=True),\n    nn.LSTM(input_size=17, hidden_size=92, batch_first=True)\n)", "description": "This neural network takes an input of shape [124, 26, 221] and produces an output of shape [1, 26, 92]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=199, out_channels=25, kernel_size=2),\n    nn.LSTM(input_size=25, hidden_size=111, batch_first=True),\n    nn.Conv1d(in_channels=111, out_channels=43, kernel_size=3),\n    nn.GRU(input_size=43, hidden_size=33, batch_first=True),\n    nn.Conv3d(in_channels=33, out_channels=3, kernel_size=2),\n    nn.Conv1d(in_channels=3, out_channels=21, kernel_size=2),\n    nn.LSTM(input_size=21, hidden_size=44, batch_first=True),\n    nn.LSTM(input_size=44, hidden_size=66, batch_first=True),\n    nn.Conv2d(in_channels=66, out_channels=58, kernel_size=4)\n)", "description": "This neural network takes an input of shape [199] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=20, hidden_size=116, batch_first=True),\n    nn.Linear(in_features=116, out_features=242),\n    nn.Conv3d(in_channels=102, out_channels=51, kernel_size=5),\n    nn.GRU(input_size=242, hidden_size=55, batch_first=True),\n    nn.Conv3d(in_channels=51, out_channels=14, kernel_size=1),\n    nn.LSTM(input_size=55, hidden_size=37, batch_first=True),\n    nn.LSTM(input_size=37, hidden_size=80, batch_first=True),\n    nn.Linear(in_features=80, out_features=4),\n    nn.Conv2d(in_channels=14, out_channels=57, kernel_size=3)\n)", "description": "This neural network takes an input of shape [102, 98, 20] and produces an output of shape [57, 98, 4]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=165, out_channels=40, kernel_size=2),\n    nn.Conv1d(in_channels=40, out_channels=49, kernel_size=3),\n    nn.Linear(in_features=1, out_features=18),\n    nn.LSTM(input_size=18, hidden_size=15, batch_first=True),\n    nn.Conv3d(in_channels=49, out_channels=33, kernel_size=4),\n    nn.GRU(input_size=15, hidden_size=17, batch_first=True),\n    nn.Conv2d(in_channels=33, out_channels=44, kernel_size=4),\n    nn.Conv2d(in_channels=44, out_channels=14, kernel_size=5)\n)", "description": "This neural network takes an input of shape [165, 222, 1] and produces an output of shape [14, 222, 17]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=170, out_channels=43, kernel_size=4),\n    nn.Conv2d(in_channels=43, out_channels=63, kernel_size=5),\n    nn.Conv2d(in_channels=63, out_channels=21, kernel_size=2)\n)", "description": "This neural network takes an input of shape [170] and produces an output of shape [21]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=184, out_channels=58, kernel_size=5),\n    nn.LSTM(input_size=13, hidden_size=85, batch_first=True),\n    nn.Conv1d(in_channels=58, out_channels=62, kernel_size=4)\n)", "description": "This neural network takes an input of shape [184, 35, 13] and produces an output of shape [62, 35, 85]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=44, out_features=101),\n    nn.GRU(input_size=101, hidden_size=111, batch_first=True),\n    nn.Conv3d(in_channels=216, out_channels=47, kernel_size=2),\n    nn.Conv2d(in_channels=47, out_channels=36, kernel_size=3),\n    nn.Conv1d(in_channels=36, out_channels=42, kernel_size=1),\n    nn.Conv3d(in_channels=42, out_channels=6, kernel_size=5),\n    nn.GRU(input_size=111, hidden_size=34, batch_first=True),\n    nn.Conv1d(in_channels=6, out_channels=2, kernel_size=2)\n)", "description": "This neural network takes an input of shape [216, 150, 44] and produces an output of shape [2, 150, 34]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=157, out_channels=48, kernel_size=1),\n    nn.Conv2d(in_channels=48, out_channels=27, kernel_size=2),\n    nn.GRU(input_size=242, hidden_size=48, batch_first=True),\n    nn.Conv2d(in_channels=27, out_channels=38, kernel_size=4),\n    nn.Conv2d(in_channels=38, out_channels=20, kernel_size=5),\n    nn.GRU(input_size=48, hidden_size=13, batch_first=True),\n    nn.Linear(in_features=13, out_features=135),\n    nn.GRU(input_size=135, hidden_size=64, batch_first=True)\n)", "description": "This neural network takes an input of shape [157, 105, 242] and produces an output of shape [20, 105, 64]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=72, out_channels=35, kernel_size=2),\n    nn.Conv1d(in_channels=35, out_channels=37, kernel_size=5),\n    nn.LSTM(input_size=37, hidden_size=63, batch_first=True),\n    nn.Conv1d(in_channels=63, out_channels=33, kernel_size=5),\n    nn.GRU(input_size=33, hidden_size=20, batch_first=True),\n    nn.LSTM(input_size=20, hidden_size=94, batch_first=True)\n)", "description": "This neural network takes an input of shape [72] and produces an output of shape [94]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=255, out_channels=10, kernel_size=1),\n    nn.Conv2d(in_channels=10, out_channels=35, kernel_size=3),\n    nn.LSTM(input_size=184, hidden_size=124, batch_first=True),\n    nn.LSTM(input_size=124, hidden_size=8, batch_first=True),\n    nn.Linear(in_features=8, out_features=188),\n    nn.Conv1d(in_channels=35, out_channels=16, kernel_size=4),\n    nn.LSTM(input_size=188, hidden_size=15, batch_first=True),\n    nn.Conv2d(in_channels=16, out_channels=64, kernel_size=4),\n    nn.Linear(in_features=15, out_features=4)\n)", "description": "This neural network takes an input of shape [255, 193, 184] and produces an output of shape [64, 193, 4]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=187, out_channels=3, kernel_size=4),\n    nn.Conv3d(in_channels=3, out_channels=4, kernel_size=3)\n)", "description": "This neural network takes an input of shape [187, 225] and produces an output of shape [4, 225]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=48, hidden_size=34, batch_first=True),\n    nn.Linear(in_features=34, out_features=62),\n    nn.Conv1d(in_channels=85, out_channels=13, kernel_size=3),\n    nn.Linear(in_features=62, out_features=30),\n    nn.Linear(in_features=30, out_features=21),\n    nn.Linear(in_features=21, out_features=141),\n    nn.Linear(in_features=141, out_features=140),\n    nn.Linear(in_features=140, out_features=127),\n    nn.GRU(input_size=127, hidden_size=93, batch_first=True),\n    nn.Conv1d(in_channels=13, out_channels=54, kernel_size=1)\n)", "description": "This neural network takes an input of shape [85, 48] and produces an output of shape [54, 93]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=243, out_features=188),\n    nn.Conv2d(in_channels=101, out_channels=9, kernel_size=4),\n    nn.GRU(input_size=188, hidden_size=102, batch_first=True),\n    nn.Conv2d(in_channels=9, out_channels=38, kernel_size=3),\n    nn.LSTM(input_size=102, hidden_size=28, batch_first=True),\n    nn.Conv1d(in_channels=38, out_channels=20, kernel_size=4),\n    nn.Linear(in_features=28, out_features=166)\n)", "description": "This neural network takes an input of shape [101, 243] and produces an output of shape [20, 166]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=118, out_features=68),\n    nn.Conv1d(in_channels=237, out_channels=32, kernel_size=3),\n    nn.Conv1d(in_channels=32, out_channels=55, kernel_size=3),\n    nn.Linear(in_features=68, out_features=31),\n    nn.Conv3d(in_channels=55, out_channels=33, kernel_size=5),\n    nn.Conv2d(in_channels=33, out_channels=10, kernel_size=2),\n    nn.GRU(input_size=31, hidden_size=96, batch_first=True),\n    nn.Conv2d(in_channels=10, out_channels=44, kernel_size=5)\n)", "description": "This neural network takes an input of shape [237, 57, 118] and produces an output of shape [44, 57, 96]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=156, out_channels=27, kernel_size=5)\n)", "description": "This neural network takes an input of shape [156] and produces an output of shape [27]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=86, out_channels=10, kernel_size=4),\n    nn.GRU(input_size=10, hidden_size=119, batch_first=True),\n    nn.Conv1d(in_channels=119, out_channels=49, kernel_size=4),\n    nn.Conv2d(in_channels=49, out_channels=27, kernel_size=2),\n    nn.Conv2d(in_channels=27, out_channels=5, kernel_size=4),\n    nn.Linear(in_features=5, out_features=145)\n)", "description": "This neural network takes an input of shape [86] and produces an output of shape [145]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=56, out_channels=58, kernel_size=3),\n    nn.Conv1d(in_channels=58, out_channels=25, kernel_size=4),\n    nn.LSTM(input_size=74, hidden_size=76, batch_first=True),\n    nn.Conv3d(in_channels=25, out_channels=39, kernel_size=3),\n    nn.Linear(in_features=76, out_features=167),\n    nn.LSTM(input_size=167, hidden_size=58, batch_first=True),\n    nn.Conv2d(in_channels=39, out_channels=7, kernel_size=1),\n    nn.GRU(input_size=58, hidden_size=75, batch_first=True),\n    nn.GRU(input_size=75, hidden_size=54, batch_first=True)\n)", "description": "This neural network takes an input of shape [56, 85, 74] and produces an output of shape [7, 85, 54]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=147, hidden_size=71, batch_first=True),\n    nn.Conv1d(in_channels=71, out_channels=12, kernel_size=3),\n    nn.LSTM(input_size=12, hidden_size=22, batch_first=True)\n)", "description": "This neural network takes an input of shape [147] and produces an output of shape [22]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=1, out_channels=7, kernel_size=3),\n    nn.Conv2d(in_channels=7, out_channels=45, kernel_size=5)\n)", "description": "This neural network takes an input of shape [1, 148] and produces an output of shape [45, 148]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=225, out_channels=1, kernel_size=5),\n    nn.Conv2d(in_channels=1, out_channels=57, kernel_size=5)\n)", "description": "This neural network takes an input of shape [225] and produces an output of shape [57]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=188, out_channels=56, kernel_size=2),\n    nn.LSTM(input_size=21, hidden_size=65, batch_first=True),\n    nn.Conv3d(in_channels=56, out_channels=12, kernel_size=5),\n    nn.Conv1d(in_channels=12, out_channels=64, kernel_size=3),\n    nn.Conv3d(in_channels=64, out_channels=7, kernel_size=1),\n    nn.LSTM(input_size=65, hidden_size=6, batch_first=True),\n    nn.Conv1d(in_channels=7, out_channels=3, kernel_size=3),\n    nn.Conv2d(in_channels=3, out_channels=4, kernel_size=5),\n    nn.Conv3d(in_channels=4, out_channels=22, kernel_size=4)\n)", "description": "This neural network takes an input of shape [188, 102, 21] and produces an output of shape [22, 102, 6]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=50, hidden_size=5, batch_first=True)\n)", "description": "This neural network takes an input of shape [50] and produces an output of shape [5]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=25, hidden_size=126, batch_first=True),\n    nn.LSTM(input_size=126, hidden_size=94, batch_first=True),\n    nn.Conv1d(in_channels=157, out_channels=34, kernel_size=5),\n    nn.LSTM(input_size=94, hidden_size=24, batch_first=True),\n    nn.LSTM(input_size=24, hidden_size=79, batch_first=True),\n    nn.GRU(input_size=79, hidden_size=46, batch_first=True)\n)", "description": "This neural network takes an input of shape [157, 27, 25] and produces an output of shape [34, 27, 46]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=139, out_channels=52, kernel_size=2)\n)", "description": "This neural network takes an input of shape [139, 96, 95] and produces an output of shape [52, 96, 95]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=219, out_channels=12, kernel_size=5),\n    nn.GRU(input_size=12, hidden_size=117, batch_first=True),\n    nn.Conv2d(in_channels=117, out_channels=56, kernel_size=2)\n)", "description": "This neural network takes an input of shape [219] and produces an output of shape [56]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=251, out_features=84),\n    nn.GRU(input_size=84, hidden_size=84, batch_first=True),\n    nn.LSTM(input_size=84, hidden_size=5, batch_first=True),\n    nn.Linear(in_features=5, out_features=240),\n    nn.Conv1d(in_channels=41, out_channels=3, kernel_size=4),\n    nn.Linear(in_features=240, out_features=199),\n    nn.Conv1d(in_channels=3, out_channels=23, kernel_size=5),\n    nn.Conv3d(in_channels=23, out_channels=6, kernel_size=2),\n    nn.Conv3d(in_channels=6, out_channels=40, kernel_size=2)\n)", "description": "This neural network takes an input of shape [41, 251] and produces an output of shape [40, 199]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=64, out_channels=6, kernel_size=3)\n)", "description": "This neural network takes an input of shape [64, 75, 27] and produces an output of shape [6, 75, 27]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=9, out_features=203),\n    nn.Conv3d(in_channels=136, out_channels=49, kernel_size=2),\n    nn.Linear(in_features=203, out_features=132),\n    nn.Linear(in_features=132, out_features=231),\n    nn.Linear(in_features=231, out_features=120),\n    nn.Linear(in_features=120, out_features=135),\n    nn.GRU(input_size=135, hidden_size=92, batch_first=True),\n    nn.Linear(in_features=92, out_features=113),\n    nn.GRU(input_size=113, hidden_size=46, batch_first=True)\n)", "description": "This neural network takes an input of shape [136, 9] and produces an output of shape [49, 46]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=213, out_channels=32, kernel_size=4),\n    nn.Conv1d(in_channels=32, out_channels=29, kernel_size=1),\n    nn.Linear(in_features=152, out_features=103),\n    nn.GRU(input_size=103, hidden_size=32, batch_first=True),\n    nn.Linear(in_features=32, out_features=139),\n    nn.GRU(input_size=139, hidden_size=35, batch_first=True),\n    nn.Conv3d(in_channels=29, out_channels=27, kernel_size=2)\n)", "description": "This neural network takes an input of shape [213, 203, 152] and produces an output of shape [27, 203, 35]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=29, out_channels=45, kernel_size=3)\n)", "description": "This neural network takes an input of shape [29] and produces an output of shape [45]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=252, hidden_size=65, batch_first=True),\n    nn.Conv2d(in_channels=75, out_channels=63, kernel_size=2),\n    nn.Conv3d(in_channels=63, out_channels=14, kernel_size=5),\n    nn.LSTM(input_size=65, hidden_size=92, batch_first=True)\n)", "description": "This neural network takes an input of shape [75, 252] and produces an output of shape [14, 92]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=176, hidden_size=54, batch_first=True),\n    nn.Conv1d(in_channels=163, out_channels=30, kernel_size=1),\n    nn.LSTM(input_size=54, hidden_size=59, batch_first=True),\n    nn.GRU(input_size=59, hidden_size=72, batch_first=True),\n    nn.Conv2d(in_channels=30, out_channels=56, kernel_size=3)\n)", "description": "This neural network takes an input of shape [163, 224, 176] and produces an output of shape [56, 224, 72]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=110, hidden_size=67, batch_first=True),\n    nn.Linear(in_features=67, out_features=176),\n    nn.GRU(input_size=176, hidden_size=46, batch_first=True),\n    nn.Conv3d(in_channels=221, out_channels=19, kernel_size=1),\n    nn.GRU(input_size=46, hidden_size=49, batch_first=True),\n    nn.LSTM(input_size=49, hidden_size=82, batch_first=True),\n    nn.Conv1d(in_channels=19, out_channels=19, kernel_size=4)\n)", "description": "This neural network takes an input of shape [221, 192, 110] and produces an output of shape [19, 192, 82]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=202, out_channels=28, kernel_size=3),\n    nn.Linear(in_features=212, out_features=24)\n)", "description": "This neural network takes an input of shape [202, 230, 212] and produces an output of shape [28, 230, 24]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=121, hidden_size=96, batch_first=True),\n    nn.GRU(input_size=96, hidden_size=36, batch_first=True),\n    nn.LSTM(input_size=36, hidden_size=114, batch_first=True),\n    nn.Conv2d(in_channels=114, out_channels=49, kernel_size=5),\n    nn.Conv1d(in_channels=49, out_channels=15, kernel_size=2),\n    nn.Linear(in_features=15, out_features=188),\n    nn.Conv1d(in_channels=188, out_channels=6, kernel_size=1),\n    nn.Conv3d(in_channels=6, out_channels=14, kernel_size=2)\n)", "description": "This neural network takes an input of shape [121] and produces an output of shape [14]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=126, out_channels=7, kernel_size=2),\n    nn.Conv3d(in_channels=7, out_channels=14, kernel_size=4),\n    nn.Linear(in_features=205, out_features=145),\n    nn.Conv1d(in_channels=14, out_channels=37, kernel_size=3),\n    nn.Conv2d(in_channels=37, out_channels=50, kernel_size=2),\n    nn.Linear(in_features=145, out_features=249)\n)", "description": "This neural network takes an input of shape [126, 205] and produces an output of shape [50, 249]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=1, hidden_size=29, batch_first=True),\n    nn.Linear(in_features=29, out_features=73),\n    nn.LSTM(input_size=73, hidden_size=18, batch_first=True),\n    nn.Conv3d(in_channels=31, out_channels=51, kernel_size=5),\n    nn.Linear(in_features=18, out_features=198),\n    nn.Conv1d(in_channels=51, out_channels=12, kernel_size=4),\n    nn.Conv3d(in_channels=12, out_channels=62, kernel_size=3)\n)", "description": "This neural network takes an input of shape [31, 1] and produces an output of shape [62, 198]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=203, hidden_size=34, batch_first=True),\n    nn.Linear(in_features=34, out_features=235),\n    nn.LSTM(input_size=235, hidden_size=5, batch_first=True),\n    nn.Conv3d(in_channels=160, out_channels=45, kernel_size=2),\n    nn.Conv1d(in_channels=45, out_channels=12, kernel_size=2),\n    nn.Linear(in_features=5, out_features=45),\n    nn.GRU(input_size=45, hidden_size=33, batch_first=True),\n    nn.Conv2d(in_channels=12, out_channels=11, kernel_size=4),\n    nn.GRU(input_size=33, hidden_size=56, batch_first=True)\n)", "description": "This neural network takes an input of shape [160, 224, 203] and produces an output of shape [11, 224, 56]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=240, out_channels=41, kernel_size=5),\n    nn.GRU(input_size=193, hidden_size=61, batch_first=True),\n    nn.Conv2d(in_channels=41, out_channels=10, kernel_size=5),\n    nn.Linear(in_features=61, out_features=10),\n    nn.Conv3d(in_channels=10, out_channels=54, kernel_size=4),\n    nn.Conv3d(in_channels=54, out_channels=40, kernel_size=4)\n)", "description": "This neural network takes an input of shape [240, 28, 193] and produces an output of shape [40, 28, 10]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=23, out_features=100),\n    nn.Linear(in_features=100, out_features=217),\n    nn.Linear(in_features=217, out_features=45),\n    nn.GRU(input_size=45, hidden_size=67, batch_first=True),\n    nn.Linear(in_features=67, out_features=245)\n)", "description": "This neural network takes an input of shape [202, 23] and produces an output of shape [202, 245]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=174, out_channels=32, kernel_size=1),\n    nn.Conv3d(in_channels=32, out_channels=21, kernel_size=1),\n    nn.Conv2d(in_channels=21, out_channels=43, kernel_size=3),\n    nn.GRU(input_size=231, hidden_size=89, batch_first=True),\n    nn.GRU(input_size=89, hidden_size=9, batch_first=True),\n    nn.Linear(in_features=9, out_features=84),\n    nn.Conv3d(in_channels=43, out_channels=45, kernel_size=4)\n)", "description": "This neural network takes an input of shape [174, 231] and produces an output of shape [45, 84]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=118, out_features=4),\n    nn.Conv1d(in_channels=4, out_channels=26, kernel_size=1),\n    nn.Linear(in_features=26, out_features=91),\n    nn.Conv1d(in_channels=91, out_channels=17, kernel_size=3)\n)", "description": "This neural network takes an input of shape [118] and produces an output of shape [17]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=21, out_channels=63, kernel_size=4),\n    nn.Conv3d(in_channels=63, out_channels=16, kernel_size=3)\n)", "description": "This neural network takes an input of shape [21] and produces an output of shape [16]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=182, out_channels=52, kernel_size=1),\n    nn.LSTM(input_size=120, hidden_size=32, batch_first=True),\n    nn.Conv3d(in_channels=52, out_channels=36, kernel_size=4),\n    nn.Linear(in_features=32, out_features=43),\n    nn.Conv2d(in_channels=36, out_channels=62, kernel_size=3),\n    nn.LSTM(input_size=43, hidden_size=27, batch_first=True),\n    nn.Conv3d(in_channels=62, out_channels=39, kernel_size=1)\n)", "description": "This neural network takes an input of shape [182, 95, 120] and produces an output of shape [39, 95, 27]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=87, out_features=165),\n    nn.GRU(input_size=165, hidden_size=102, batch_first=True),\n    nn.Conv1d(in_channels=181, out_channels=42, kernel_size=2),\n    nn.Linear(in_features=102, out_features=43),\n    nn.Conv1d(in_channels=42, out_channels=29, kernel_size=3),\n    nn.LSTM(input_size=43, hidden_size=31, batch_first=True),\n    nn.Linear(in_features=31, out_features=38),\n    nn.Conv1d(in_channels=29, out_channels=64, kernel_size=1),\n    nn.Conv2d(in_channels=64, out_channels=21, kernel_size=4)\n)", "description": "This neural network takes an input of shape [181, 126, 87] and produces an output of shape [21, 126, 38]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=42, hidden_size=88, batch_first=True),\n    nn.GRU(input_size=88, hidden_size=104, batch_first=True),\n    nn.Conv3d(in_channels=104, out_channels=56, kernel_size=1),\n    nn.Conv1d(in_channels=56, out_channels=33, kernel_size=1),\n    nn.Linear(in_features=33, out_features=40),\n    nn.Conv2d(in_channels=40, out_channels=46, kernel_size=5),\n    nn.LSTM(input_size=46, hidden_size=110, batch_first=True)\n)", "description": "This neural network takes an input of shape [42] and produces an output of shape [110]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=149, out_features=31),\n    nn.Linear(in_features=31, out_features=49),\n    nn.Conv1d(in_channels=49, out_channels=17, kernel_size=2),\n    nn.Conv2d(in_channels=17, out_channels=45, kernel_size=3),\n    nn.LSTM(input_size=45, hidden_size=24, batch_first=True),\n    nn.Conv2d(in_channels=24, out_channels=14, kernel_size=5),\n    nn.Linear(in_features=14, out_features=143),\n    nn.Conv2d(in_channels=143, out_channels=23, kernel_size=4),\n    nn.Conv1d(in_channels=23, out_channels=9, kernel_size=1),\n    nn.Conv1d(in_channels=9, out_channels=58, kernel_size=5)\n)", "description": "This neural network takes an input of shape [149] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=161, out_features=159),\n    nn.LSTM(input_size=159, hidden_size=105, batch_first=True),\n    nn.Conv2d(in_channels=105, out_channels=4, kernel_size=2)\n)", "description": "This neural network takes an input of shape [161] and produces an output of shape [4]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=149, hidden_size=101, batch_first=True),\n    nn.Conv3d(in_channels=200, out_channels=45, kernel_size=3),\n    nn.GRU(input_size=101, hidden_size=56, batch_first=True),\n    nn.GRU(input_size=56, hidden_size=30, batch_first=True),\n    nn.Conv3d(in_channels=45, out_channels=14, kernel_size=2),\n    nn.Linear(in_features=30, out_features=28),\n    nn.GRU(input_size=28, hidden_size=36, batch_first=True)\n)", "description": "This neural network takes an input of shape [200, 78, 149] and produces an output of shape [14, 78, 36]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=225, hidden_size=103, batch_first=True),\n    nn.LSTM(input_size=103, hidden_size=23, batch_first=True),\n    nn.Conv2d(in_channels=42, out_channels=54, kernel_size=2),\n    nn.LSTM(input_size=23, hidden_size=38, batch_first=True),\n    nn.Conv2d(in_channels=54, out_channels=16, kernel_size=1),\n    nn.Conv3d(in_channels=16, out_channels=36, kernel_size=2),\n    nn.Linear(in_features=38, out_features=11),\n    nn.Conv1d(in_channels=36, out_channels=27, kernel_size=2),\n    nn.Conv3d(in_channels=27, out_channels=64, kernel_size=5)\n)", "description": "This neural network takes an input of shape [42, 225] and produces an output of shape [64, 11]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=75, out_channels=36, kernel_size=3),\n    nn.Linear(in_features=3, out_features=1)\n)", "description": "This neural network takes an input of shape [75, 199, 3] and produces an output of shape [36, 199, 1]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=221, out_channels=37, kernel_size=1),\n    nn.Linear(in_features=29, out_features=91),\n    nn.LSTM(input_size=91, hidden_size=113, batch_first=True),\n    nn.Linear(in_features=113, out_features=159)\n)", "description": "This neural network takes an input of shape [221, 232, 29] and produces an output of shape [37, 232, 159]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=96, hidden_size=49, batch_first=True),\n    nn.GRU(input_size=49, hidden_size=84, batch_first=True),\n    nn.Conv3d(in_channels=28, out_channels=1, kernel_size=2),\n    nn.GRU(input_size=84, hidden_size=60, batch_first=True),\n    nn.GRU(input_size=60, hidden_size=66, batch_first=True),\n    nn.LSTM(input_size=66, hidden_size=96, batch_first=True)\n)", "description": "This neural network takes an input of shape [28, 193, 96] and produces an output of shape [1, 193, 96]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=14, out_channels=19, kernel_size=4),\n    nn.Conv3d(in_channels=19, out_channels=58, kernel_size=3),\n    nn.Conv1d(in_channels=58, out_channels=12, kernel_size=1),\n    nn.LSTM(input_size=177, hidden_size=36, batch_first=True),\n    nn.GRU(input_size=36, hidden_size=20, batch_first=True),\n    nn.LSTM(input_size=20, hidden_size=114, batch_first=True),\n    nn.Conv3d(in_channels=12, out_channels=18, kernel_size=3),\n    nn.Conv1d(in_channels=18, out_channels=17, kernel_size=3),\n    nn.GRU(input_size=114, hidden_size=84, batch_first=True)\n)", "description": "This neural network takes an input of shape [14, 177] and produces an output of shape [17, 84]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=8, out_channels=21, kernel_size=5),\n    nn.Conv2d(in_channels=21, out_channels=14, kernel_size=3),\n    nn.GRU(input_size=14, hidden_size=20, batch_first=True),\n    nn.Conv2d(in_channels=20, out_channels=63, kernel_size=1),\n    nn.Conv1d(in_channels=63, out_channels=13, kernel_size=3)\n)", "description": "This neural network takes an input of shape [8] and produces an output of shape [13]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=65, out_channels=12, kernel_size=3)\n)", "description": "This neural network takes an input of shape [65, 15, 31] and produces an output of shape [12, 15, 31]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=225, out_channels=36, kernel_size=5),\n    nn.Conv2d(in_channels=36, out_channels=42, kernel_size=4),\n    nn.Conv3d(in_channels=42, out_channels=31, kernel_size=1),\n    nn.Conv1d(in_channels=31, out_channels=29, kernel_size=1)\n)", "description": "This neural network takes an input of shape [225] and produces an output of shape [29]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=210, out_channels=58, kernel_size=3),\n    nn.Linear(in_features=61, out_features=55),\n    nn.LSTM(input_size=55, hidden_size=62, batch_first=True),\n    nn.Linear(in_features=62, out_features=31),\n    nn.Conv2d(in_channels=58, out_channels=37, kernel_size=1),\n    nn.Linear(in_features=31, out_features=153),\n    nn.Conv1d(in_channels=37, out_channels=46, kernel_size=5)\n)", "description": "This neural network takes an input of shape [210, 61] and produces an output of shape [46, 153]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=10, hidden_size=94, batch_first=True),\n    nn.Conv3d(in_channels=111, out_channels=10, kernel_size=3),\n    nn.Conv2d(in_channels=10, out_channels=60, kernel_size=5),\n    nn.Conv1d(in_channels=60, out_channels=18, kernel_size=1),\n    nn.Conv1d(in_channels=18, out_channels=46, kernel_size=2),\n    nn.Conv3d(in_channels=46, out_channels=16, kernel_size=3),\n    nn.GRU(input_size=94, hidden_size=69, batch_first=True)\n)", "description": "This neural network takes an input of shape [111, 59, 10] and produces an output of shape [16, 59, 69]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=50, out_channels=20, kernel_size=5),\n    nn.LSTM(input_size=31, hidden_size=53, batch_first=True),\n    nn.Conv2d(in_channels=20, out_channels=24, kernel_size=3),\n    nn.GRU(input_size=53, hidden_size=109, batch_first=True),\n    nn.LSTM(input_size=109, hidden_size=96, batch_first=True),\n    nn.GRU(input_size=96, hidden_size=127, batch_first=True),\n    nn.Conv2d(in_channels=24, out_channels=35, kernel_size=2),\n    nn.LSTM(input_size=127, hidden_size=80, batch_first=True),\n    nn.LSTM(input_size=80, hidden_size=80, batch_first=True),\n    nn.Conv3d(in_channels=35, out_channels=43, kernel_size=2)\n)", "description": "This neural network takes an input of shape [50, 31] and produces an output of shape [43, 80]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=24, out_features=9),\n    nn.GRU(input_size=9, hidden_size=7, batch_first=True),\n    nn.Linear(in_features=7, out_features=65),\n    nn.Conv3d(in_channels=78, out_channels=28, kernel_size=4)\n)", "description": "This neural network takes an input of shape [78, 98, 24] and produces an output of shape [28, 98, 65]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=162, hidden_size=76, batch_first=True),\n    nn.GRU(input_size=76, hidden_size=25, batch_first=True),\n    nn.Conv2d(in_channels=25, out_channels=13, kernel_size=3),\n    nn.Conv1d(in_channels=13, out_channels=33, kernel_size=2),\n    nn.LSTM(input_size=33, hidden_size=125, batch_first=True),\n    nn.Conv2d(in_channels=125, out_channels=37, kernel_size=3),\n    nn.Linear(in_features=37, out_features=34),\n    nn.Conv3d(in_channels=34, out_channels=53, kernel_size=5),\n    nn.GRU(input_size=53, hidden_size=88, batch_first=True),\n    nn.Conv3d(in_channels=88, out_channels=1, kernel_size=5)\n)", "description": "This neural network takes an input of shape [162] and produces an output of shape [1]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=228, hidden_size=35, batch_first=True)\n)", "description": "This neural network takes an input of shape [61, 115, 228] and produces an output of shape [61, 115, 35]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=115, out_channels=59, kernel_size=2)\n)", "description": "This neural network takes an input of shape [115, 204] and produces an output of shape [59, 204]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=55, hidden_size=80, batch_first=True),\n    nn.Conv3d(in_channels=80, out_channels=25, kernel_size=4),\n    nn.Conv1d(in_channels=25, out_channels=52, kernel_size=2),\n    nn.LSTM(input_size=52, hidden_size=100, batch_first=True),\n    nn.GRU(input_size=100, hidden_size=69, batch_first=True),\n    nn.Conv3d(in_channels=69, out_channels=21, kernel_size=5),\n    nn.LSTM(input_size=21, hidden_size=60, batch_first=True)\n)", "description": "This neural network takes an input of shape [55] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=33, out_features=73),\n    nn.LSTM(input_size=73, hidden_size=29, batch_first=True),\n    nn.Conv3d(in_channels=126, out_channels=55, kernel_size=1),\n    nn.Conv2d(in_channels=55, out_channels=1, kernel_size=5),\n    nn.Linear(in_features=29, out_features=25),\n    nn.GRU(input_size=25, hidden_size=9, batch_first=True),\n    nn.Conv2d(in_channels=1, out_channels=7, kernel_size=4),\n    nn.Conv1d(in_channels=7, out_channels=42, kernel_size=3),\n    nn.LSTM(input_size=9, hidden_size=1, batch_first=True),\n    nn.GRU(input_size=1, hidden_size=127, batch_first=True)\n)", "description": "This neural network takes an input of shape [126, 67, 33] and produces an output of shape [42, 67, 127]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=219, hidden_size=8, batch_first=True),\n    nn.Conv1d(in_channels=8, out_channels=52, kernel_size=1),\n    nn.LSTM(input_size=52, hidden_size=39, batch_first=True),\n    nn.LSTM(input_size=39, hidden_size=50, batch_first=True),\n    nn.Conv1d(in_channels=50, out_channels=2, kernel_size=3),\n    nn.Linear(in_features=2, out_features=144),\n    nn.Conv3d(in_channels=144, out_channels=4, kernel_size=5)\n)", "description": "This neural network takes an input of shape [219] and produces an output of shape [4]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=108, hidden_size=107, batch_first=True),\n    nn.Linear(in_features=107, out_features=133),\n    nn.Conv3d(in_channels=133, out_channels=18, kernel_size=1)\n)", "description": "This neural network takes an input of shape [108] and produces an output of shape [18]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=176, out_channels=26, kernel_size=1),\n    nn.Conv2d(in_channels=26, out_channels=5, kernel_size=1),\n    nn.Conv1d(in_channels=5, out_channels=41, kernel_size=2),\n    nn.Linear(in_features=102, out_features=131),\n    nn.Conv2d(in_channels=41, out_channels=64, kernel_size=5),\n    nn.Conv2d(in_channels=64, out_channels=47, kernel_size=2),\n    nn.GRU(input_size=131, hidden_size=24, batch_first=True),\n    nn.Linear(in_features=24, out_features=248)\n)", "description": "This neural network takes an input of shape [176, 233, 102] and produces an output of shape [47, 233, 248]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=97, out_channels=41, kernel_size=2),\n    nn.Conv2d(in_channels=41, out_channels=13, kernel_size=4),\n    nn.Linear(in_features=215, out_features=158),\n    nn.LSTM(input_size=158, hidden_size=109, batch_first=True),\n    nn.Linear(in_features=109, out_features=64),\n    nn.GRU(input_size=64, hidden_size=74, batch_first=True),\n    nn.GRU(input_size=74, hidden_size=50, batch_first=True),\n    nn.Conv3d(in_channels=13, out_channels=61, kernel_size=3)\n)", "description": "This neural network takes an input of shape [97, 215] and produces an output of shape [61, 50]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=252, out_features=131),\n    nn.GRU(input_size=131, hidden_size=4, batch_first=True),\n    nn.Conv3d(in_channels=135, out_channels=54, kernel_size=4),\n    nn.Conv1d(in_channels=54, out_channels=33, kernel_size=5)\n)", "description": "This neural network takes an input of shape [135, 36, 252] and produces an output of shape [33, 36, 4]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=106, hidden_size=12, batch_first=True),\n    nn.GRU(input_size=12, hidden_size=82, batch_first=True),\n    nn.GRU(input_size=82, hidden_size=95, batch_first=True),\n    nn.Conv1d(in_channels=95, out_channels=17, kernel_size=5),\n    nn.GRU(input_size=17, hidden_size=11, batch_first=True)\n)", "description": "This neural network takes an input of shape [106] and produces an output of shape [11]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=23, out_channels=13, kernel_size=2),\n    nn.Conv3d(in_channels=13, out_channels=42, kernel_size=5),\n    nn.GRU(input_size=42, hidden_size=20, batch_first=True),\n    nn.Conv3d(in_channels=20, out_channels=16, kernel_size=4)\n)", "description": "This neural network takes an input of shape [23] and produces an output of shape [16]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=109, out_channels=7, kernel_size=2),\n    nn.GRU(input_size=7, hidden_size=76, batch_first=True)\n)", "description": "This neural network takes an input of shape [109] and produces an output of shape [76]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=145, out_channels=61, kernel_size=3)\n)", "description": "This neural network takes an input of shape [145] and produces an output of shape [61]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=93, out_channels=44, kernel_size=2),\n    nn.Conv3d(in_channels=44, out_channels=26, kernel_size=2),\n    nn.Conv1d(in_channels=26, out_channels=35, kernel_size=1)\n)", "description": "This neural network takes an input of shape [93, 130] and produces an output of shape [35, 130]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=225, hidden_size=87, batch_first=True)\n)", "description": "This neural network takes an input of shape [225] and produces an output of shape [87]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=161, out_features=69),\n    nn.Linear(in_features=69, out_features=64),\n    nn.Conv3d(in_channels=193, out_channels=4, kernel_size=1),\n    nn.Conv3d(in_channels=4, out_channels=25, kernel_size=1),\n    nn.Linear(in_features=64, out_features=161),\n    nn.Conv1d(in_channels=25, out_channels=31, kernel_size=5),\n    nn.LSTM(input_size=161, hidden_size=12, batch_first=True)\n)", "description": "This neural network takes an input of shape [193, 161] and produces an output of shape [31, 12]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=220, out_channels=59, kernel_size=4),\n    nn.Linear(in_features=59, out_features=150),\n    nn.Conv1d(in_channels=150, out_channels=13, kernel_size=4)\n)", "description": "This neural network takes an input of shape [220] and produces an output of shape [13]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=74, hidden_size=91, batch_first=True),\n    nn.Conv2d(in_channels=113, out_channels=26, kernel_size=4)\n)", "description": "This neural network takes an input of shape [113, 206, 74] and produces an output of shape [26, 206, 91]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=243, out_features=248),\n    nn.LSTM(input_size=248, hidden_size=12, batch_first=True),\n    nn.Conv2d(in_channels=193, out_channels=6, kernel_size=1),\n    nn.Conv2d(in_channels=6, out_channels=49, kernel_size=3)\n)", "description": "This neural network takes an input of shape [193, 197, 243] and produces an output of shape [49, 197, 12]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=125, hidden_size=43, batch_first=True)\n)", "description": "This neural network takes an input of shape [125] and produces an output of shape [43]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=51, out_channels=42, kernel_size=1),\n    nn.GRU(input_size=42, hidden_size=114, batch_first=True)\n)", "description": "This neural network takes an input of shape [51] and produces an output of shape [114]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=251, out_channels=27, kernel_size=5),\n    nn.Conv3d(in_channels=27, out_channels=19, kernel_size=1),\n    nn.LSTM(input_size=19, hidden_size=99, batch_first=True),\n    nn.Conv3d(in_channels=99, out_channels=59, kernel_size=3),\n    nn.Conv1d(in_channels=59, out_channels=45, kernel_size=4),\n    nn.Conv3d(in_channels=45, out_channels=14, kernel_size=5),\n    nn.GRU(input_size=14, hidden_size=30, batch_first=True),\n    nn.Conv3d(in_channels=30, out_channels=11, kernel_size=3),\n    nn.Conv2d(in_channels=11, out_channels=34, kernel_size=2)\n)", "description": "This neural network takes an input of shape [251] and produces an output of shape [34]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=161, out_features=16),\n    nn.Conv1d(in_channels=16, out_channels=39, kernel_size=1),\n    nn.Conv1d(in_channels=39, out_channels=30, kernel_size=1),\n    nn.Conv3d(in_channels=30, out_channels=4, kernel_size=5),\n    nn.Conv2d(in_channels=4, out_channels=5, kernel_size=3),\n    nn.Linear(in_features=5, out_features=82),\n    nn.Conv3d(in_channels=82, out_channels=61, kernel_size=1),\n    nn.Conv1d(in_channels=61, out_channels=33, kernel_size=4)\n)", "description": "This neural network takes an input of shape [161] and produces an output of shape [33]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=252, out_channels=21, kernel_size=2),\n    nn.LSTM(input_size=3, hidden_size=113, batch_first=True),\n    nn.Conv3d(in_channels=21, out_channels=35, kernel_size=5),\n    nn.Conv3d(in_channels=35, out_channels=3, kernel_size=2),\n    nn.Linear(in_features=113, out_features=240),\n    nn.Conv3d(in_channels=3, out_channels=16, kernel_size=1)\n)", "description": "This neural network takes an input of shape [252, 3] and produces an output of shape [16, 240]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=240, out_channels=53, kernel_size=4),\n    nn.Conv1d(in_channels=53, out_channels=9, kernel_size=2),\n    nn.Conv2d(in_channels=9, out_channels=40, kernel_size=2),\n    nn.Conv1d(in_channels=40, out_channels=26, kernel_size=4),\n    nn.GRU(input_size=49, hidden_size=123, batch_first=True),\n    nn.GRU(input_size=123, hidden_size=17, batch_first=True),\n    nn.Linear(in_features=17, out_features=190),\n    nn.Conv3d(in_channels=26, out_channels=58, kernel_size=4),\n    nn.Conv1d(in_channels=58, out_channels=42, kernel_size=2)\n)", "description": "This neural network takes an input of shape [240, 49] and produces an output of shape [42, 190]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=12, out_channels=44, kernel_size=1)\n)", "description": "This neural network takes an input of shape [12, 177] and produces an output of shape [44, 177]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=182, out_features=240),\n    nn.Conv1d(in_channels=65, out_channels=40, kernel_size=1),\n    nn.GRU(input_size=240, hidden_size=121, batch_first=True),\n    nn.Conv2d(in_channels=40, out_channels=55, kernel_size=3)\n)", "description": "This neural network takes an input of shape [65, 182] and produces an output of shape [55, 121]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=33, hidden_size=15, batch_first=True),\n    nn.Conv3d(in_channels=86, out_channels=61, kernel_size=1),\n    nn.LSTM(input_size=15, hidden_size=95, batch_first=True),\n    nn.LSTM(input_size=95, hidden_size=34, batch_first=True),\n    nn.Linear(in_features=34, out_features=83),\n    nn.GRU(input_size=83, hidden_size=125, batch_first=True),\n    nn.GRU(input_size=125, hidden_size=122, batch_first=True),\n    nn.Linear(in_features=122, out_features=190)\n)", "description": "This neural network takes an input of shape [86, 226, 33] and produces an output of shape [61, 226, 190]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=112, out_channels=63, kernel_size=4)\n)", "description": "This neural network takes an input of shape [112] and produces an output of shape [63]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=183, out_channels=21, kernel_size=4),\n    nn.Conv1d(in_channels=21, out_channels=18, kernel_size=3),\n    nn.Conv1d(in_channels=18, out_channels=40, kernel_size=4),\n    nn.Conv2d(in_channels=40, out_channels=2, kernel_size=4),\n    nn.GRU(input_size=157, hidden_size=53, batch_first=True)\n)", "description": "This neural network takes an input of shape [183, 227, 157] and produces an output of shape [2, 227, 53]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=10, out_channels=18, kernel_size=4),\n    nn.Conv2d(in_channels=18, out_channels=21, kernel_size=1),\n    nn.Conv1d(in_channels=21, out_channels=57, kernel_size=5),\n    nn.Conv2d(in_channels=57, out_channels=32, kernel_size=3),\n    nn.Linear(in_features=85, out_features=229)\n)", "description": "This neural network takes an input of shape [10, 108, 85] and produces an output of shape [32, 108, 229]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=106, out_channels=21, kernel_size=4),\n    nn.Conv1d(in_channels=21, out_channels=10, kernel_size=1),\n    nn.Conv2d(in_channels=10, out_channels=15, kernel_size=2),\n    nn.Conv1d(in_channels=15, out_channels=41, kernel_size=5),\n    nn.GRU(input_size=153, hidden_size=47, batch_first=True)\n)", "description": "This neural network takes an input of shape [106, 153] and produces an output of shape [41, 47]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=128, out_channels=6, kernel_size=1),\n    nn.LSTM(input_size=6, hidden_size=98, batch_first=True)\n)", "description": "This neural network takes an input of shape [128] and produces an output of shape [98]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=217, out_channels=36, kernel_size=2)\n)", "description": "This neural network takes an input of shape [217] and produces an output of shape [36]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=41, out_features=177),\n    nn.GRU(input_size=177, hidden_size=59, batch_first=True),\n    nn.Linear(in_features=59, out_features=18),\n    nn.Conv1d(in_channels=186, out_channels=49, kernel_size=4),\n    nn.Conv2d(in_channels=49, out_channels=8, kernel_size=2)\n)", "description": "This neural network takes an input of shape [186, 123, 41] and produces an output of shape [8, 123, 18]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=106, hidden_size=8, batch_first=True),\n    nn.Linear(in_features=8, out_features=64),\n    nn.Conv2d(in_channels=202, out_channels=41, kernel_size=4),\n    nn.Conv3d(in_channels=41, out_channels=40, kernel_size=1)\n)", "description": "This neural network takes an input of shape [202, 205, 106] and produces an output of shape [40, 205, 64]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=160, out_features=121),\n    nn.GRU(input_size=121, hidden_size=67, batch_first=True),\n    nn.GRU(input_size=67, hidden_size=101, batch_first=True),\n    nn.LSTM(input_size=101, hidden_size=39, batch_first=True),\n    nn.GRU(input_size=39, hidden_size=25, batch_first=True),\n    nn.Conv1d(in_channels=25, out_channels=40, kernel_size=2),\n    nn.Linear(in_features=40, out_features=25),\n    nn.Conv3d(in_channels=25, out_channels=17, kernel_size=1)\n)", "description": "This neural network takes an input of shape [160] and produces an output of shape [17]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=114, hidden_size=110, batch_first=True),\n    nn.GRU(input_size=110, hidden_size=73, batch_first=True),\n    nn.GRU(input_size=73, hidden_size=62, batch_first=True)\n)", "description": "This neural network takes an input of shape [114] and produces an output of shape [62]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=138, out_channels=57, kernel_size=4),\n    nn.LSTM(input_size=57, hidden_size=95, batch_first=True),\n    nn.Conv2d(in_channels=95, out_channels=38, kernel_size=1),\n    nn.Linear(in_features=38, out_features=141),\n    nn.LSTM(input_size=141, hidden_size=85, batch_first=True),\n    nn.GRU(input_size=85, hidden_size=39, batch_first=True),\n    nn.GRU(input_size=39, hidden_size=115, batch_first=True),\n    nn.GRU(input_size=115, hidden_size=1, batch_first=True),\n    nn.Conv1d(in_channels=1, out_channels=28, kernel_size=5),\n    nn.Conv2d(in_channels=28, out_channels=49, kernel_size=2)\n)", "description": "This neural network takes an input of shape [138] and produces an output of shape [49]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=21, out_channels=8, kernel_size=4),\n    nn.Conv2d(in_channels=8, out_channels=37, kernel_size=4),\n    nn.Conv2d(in_channels=37, out_channels=24, kernel_size=5),\n    nn.Conv1d(in_channels=24, out_channels=30, kernel_size=3),\n    nn.LSTM(input_size=223, hidden_size=10, batch_first=True)\n)", "description": "This neural network takes an input of shape [21, 223] and produces an output of shape [30, 10]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=198, out_channels=29, kernel_size=3),\n    nn.LSTM(input_size=75, hidden_size=56, batch_first=True)\n)", "description": "This neural network takes an input of shape [198, 75] and produces an output of shape [29, 56]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=210, out_channels=60, kernel_size=1)\n)", "description": "This neural network takes an input of shape [210] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=108, hidden_size=16, batch_first=True),\n    nn.LSTM(input_size=16, hidden_size=118, batch_first=True)\n)", "description": "This neural network takes an input of shape [121, 130, 108] and produces an output of shape [121, 130, 118]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=161, out_channels=36, kernel_size=4),\n    nn.Linear(in_features=52, out_features=16),\n    nn.Linear(in_features=16, out_features=71)\n)", "description": "This neural network takes an input of shape [161, 52] and produces an output of shape [36, 71]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=158, hidden_size=116, batch_first=True),\n    nn.Conv1d(in_channels=154, out_channels=38, kernel_size=2),\n    nn.LSTM(input_size=116, hidden_size=65, batch_first=True),\n    nn.LSTM(input_size=65, hidden_size=88, batch_first=True)\n)", "description": "This neural network takes an input of shape [154, 158] and produces an output of shape [38, 88]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=8, out_channels=16, kernel_size=4),\n    nn.GRU(input_size=33, hidden_size=88, batch_first=True),\n    nn.Linear(in_features=88, out_features=175),\n    nn.Conv1d(in_channels=16, out_channels=44, kernel_size=5),\n    nn.Linear(in_features=175, out_features=135),\n    nn.Conv1d(in_channels=44, out_channels=17, kernel_size=2),\n    nn.LSTM(input_size=135, hidden_size=39, batch_first=True),\n    nn.GRU(input_size=39, hidden_size=48, batch_first=True),\n    nn.Conv2d(in_channels=17, out_channels=8, kernel_size=1),\n    nn.Conv3d(in_channels=8, out_channels=58, kernel_size=1)\n)", "description": "This neural network takes an input of shape [8, 29, 33] and produces an output of shape [58, 29, 48]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=165, hidden_size=17, batch_first=True),\n    nn.Linear(in_features=17, out_features=33),\n    nn.Conv3d(in_channels=62, out_channels=54, kernel_size=3),\n    nn.Linear(in_features=33, out_features=234),\n    nn.GRU(input_size=234, hidden_size=14, batch_first=True),\n    nn.Conv1d(in_channels=54, out_channels=24, kernel_size=5),\n    nn.Linear(in_features=14, out_features=134),\n    nn.Conv2d(in_channels=24, out_channels=27, kernel_size=1)\n)", "description": "This neural network takes an input of shape [62, 165] and produces an output of shape [27, 134]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=143, hidden_size=47, batch_first=True),\n    nn.Conv1d(in_channels=47, out_channels=21, kernel_size=1),\n    nn.GRU(input_size=21, hidden_size=71, batch_first=True),\n    nn.LSTM(input_size=71, hidden_size=118, batch_first=True),\n    nn.Conv2d(in_channels=118, out_channels=35, kernel_size=3)\n)", "description": "This neural network takes an input of shape [143] and produces an output of shape [35]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=204, out_channels=6, kernel_size=2),\n    nn.GRU(input_size=218, hidden_size=48, batch_first=True),\n    nn.LSTM(input_size=48, hidden_size=94, batch_first=True),\n    nn.Linear(in_features=94, out_features=18),\n    nn.Linear(in_features=18, out_features=243),\n    nn.Conv3d(in_channels=6, out_channels=10, kernel_size=2),\n    nn.Conv2d(in_channels=10, out_channels=63, kernel_size=4),\n    nn.Conv1d(in_channels=63, out_channels=41, kernel_size=1)\n)", "description": "This neural network takes an input of shape [204, 140, 218] and produces an output of shape [41, 140, 243]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=3, out_channels=50, kernel_size=5),\n    nn.LSTM(input_size=91, hidden_size=37, batch_first=True),\n    nn.LSTM(input_size=37, hidden_size=52, batch_first=True),\n    nn.Linear(in_features=52, out_features=162),\n    nn.Conv1d(in_channels=50, out_channels=21, kernel_size=4),\n    nn.Conv3d(in_channels=21, out_channels=10, kernel_size=4),\n    nn.LSTM(input_size=162, hidden_size=124, batch_first=True),\n    nn.GRU(input_size=124, hidden_size=99, batch_first=True),\n    nn.Conv2d(in_channels=10, out_channels=45, kernel_size=1)\n)", "description": "This neural network takes an input of shape [3, 91] and produces an output of shape [45, 99]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=169, out_features=116),\n    nn.Conv3d(in_channels=222, out_channels=37, kernel_size=5),\n    nn.Conv2d(in_channels=37, out_channels=16, kernel_size=5),\n    nn.Linear(in_features=116, out_features=227),\n    nn.Conv1d(in_channels=16, out_channels=41, kernel_size=1)\n)", "description": "This neural network takes an input of shape [222, 169] and produces an output of shape [41, 227]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=121, out_channels=27, kernel_size=1),\n    nn.Conv1d(in_channels=27, out_channels=28, kernel_size=1),\n    nn.Linear(in_features=28, out_features=73),\n    nn.Conv1d(in_channels=73, out_channels=11, kernel_size=1),\n    nn.GRU(input_size=11, hidden_size=125, batch_first=True),\n    nn.Conv3d(in_channels=125, out_channels=21, kernel_size=2),\n    nn.Conv1d(in_channels=21, out_channels=1, kernel_size=4)\n)", "description": "This neural network takes an input of shape [121] and produces an output of shape [1]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=187, out_channels=24, kernel_size=2),\n    nn.Conv1d(in_channels=24, out_channels=21, kernel_size=4),\n    nn.Linear(in_features=249, out_features=194),\n    nn.GRU(input_size=194, hidden_size=94, batch_first=True),\n    nn.Conv3d(in_channels=21, out_channels=29, kernel_size=4),\n    nn.Conv1d(in_channels=29, out_channels=22, kernel_size=1),\n    nn.Conv3d(in_channels=22, out_channels=13, kernel_size=5),\n    nn.Conv2d(in_channels=13, out_channels=31, kernel_size=2)\n)", "description": "This neural network takes an input of shape [187, 249] and produces an output of shape [31, 94]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=214, out_features=168),\n    nn.Conv1d(in_channels=168, out_channels=24, kernel_size=4),\n    nn.LSTM(input_size=24, hidden_size=42, batch_first=True),\n    nn.Linear(in_features=42, out_features=174),\n    nn.Conv3d(in_channels=174, out_channels=6, kernel_size=2),\n    nn.Conv2d(in_channels=6, out_channels=12, kernel_size=3),\n    nn.Conv2d(in_channels=12, out_channels=35, kernel_size=3),\n    nn.Linear(in_features=35, out_features=240),\n    nn.Linear(in_features=240, out_features=39),\n    nn.Conv1d(in_channels=39, out_channels=24, kernel_size=2)\n)", "description": "This neural network takes an input of shape [214] and produces an output of shape [24]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=41, out_features=256)\n)", "description": "This neural network takes an input of shape [46, 53, 41] and produces an output of shape [46, 53, 256]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=226, hidden_size=53, batch_first=True)\n)", "description": "This neural network takes an input of shape [245, 226] and produces an output of shape [245, 53]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=159, out_channels=13, kernel_size=4),\n    nn.Linear(in_features=13, out_features=23)\n)", "description": "This neural network takes an input of shape [159] and produces an output of shape [23]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=54, out_channels=12, kernel_size=4),\n    nn.Conv3d(in_channels=12, out_channels=25, kernel_size=4)\n)", "description": "This neural network takes an input of shape [54, 1] and produces an output of shape [25, 1]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=199, hidden_size=12, batch_first=True),\n    nn.Conv3d(in_channels=163, out_channels=29, kernel_size=1),\n    nn.Conv1d(in_channels=29, out_channels=35, kernel_size=2),\n    nn.LSTM(input_size=12, hidden_size=37, batch_first=True),\n    nn.Linear(in_features=37, out_features=229),\n    nn.Linear(in_features=229, out_features=134),\n    nn.Conv3d(in_channels=35, out_channels=14, kernel_size=4),\n    nn.Conv2d(in_channels=14, out_channels=61, kernel_size=3),\n    nn.GRU(input_size=134, hidden_size=97, batch_first=True),\n    nn.LSTM(input_size=97, hidden_size=48, batch_first=True)\n)", "description": "This neural network takes an input of shape [163, 217, 199] and produces an output of shape [61, 217, 48]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=76, hidden_size=116, batch_first=True),\n    nn.Conv3d(in_channels=176, out_channels=33, kernel_size=2),\n    nn.Conv1d(in_channels=33, out_channels=13, kernel_size=4),\n    nn.Conv1d(in_channels=13, out_channels=20, kernel_size=3),\n    nn.Conv1d(in_channels=20, out_channels=19, kernel_size=2),\n    nn.LSTM(input_size=116, hidden_size=20, batch_first=True),\n    nn.Conv1d(in_channels=19, out_channels=21, kernel_size=3),\n    nn.GRU(input_size=20, hidden_size=34, batch_first=True)\n)", "description": "This neural network takes an input of shape [176, 76] and produces an output of shape [21, 34]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=2, out_channels=23, kernel_size=2),\n    nn.Conv1d(in_channels=23, out_channels=44, kernel_size=1),\n    nn.GRU(input_size=44, hidden_size=112, batch_first=True),\n    nn.Conv2d(in_channels=112, out_channels=49, kernel_size=2),\n    nn.Conv1d(in_channels=49, out_channels=37, kernel_size=1),\n    nn.Conv1d(in_channels=37, out_channels=58, kernel_size=2),\n    nn.Conv2d(in_channels=58, out_channels=64, kernel_size=1)\n)", "description": "This neural network takes an input of shape [2] and produces an output of shape [64]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=23, hidden_size=125, batch_first=True),\n    nn.Conv2d(in_channels=29, out_channels=5, kernel_size=3),\n    nn.LSTM(input_size=125, hidden_size=47, batch_first=True),\n    nn.GRU(input_size=47, hidden_size=103, batch_first=True),\n    nn.Conv3d(in_channels=5, out_channels=25, kernel_size=4),\n    nn.LSTM(input_size=103, hidden_size=95, batch_first=True),\n    nn.Conv3d(in_channels=25, out_channels=29, kernel_size=4),\n    nn.Conv1d(in_channels=29, out_channels=4, kernel_size=5)\n)", "description": "This neural network takes an input of shape [29, 72, 23] and produces an output of shape [4, 72, 95]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=153, out_channels=27, kernel_size=2),\n    nn.LSTM(input_size=206, hidden_size=70, batch_first=True),\n    nn.Linear(in_features=70, out_features=88),\n    nn.Conv2d(in_channels=27, out_channels=39, kernel_size=1),\n    nn.LSTM(input_size=88, hidden_size=49, batch_first=True),\n    nn.Linear(in_features=49, out_features=157),\n    nn.Conv3d(in_channels=39, out_channels=38, kernel_size=1),\n    nn.LSTM(input_size=157, hidden_size=48, batch_first=True)\n)", "description": "This neural network takes an input of shape [153, 210, 206] and produces an output of shape [38, 210, 48]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=169, out_channels=47, kernel_size=4),\n    nn.Linear(in_features=47, out_features=143),\n    nn.LSTM(input_size=143, hidden_size=62, batch_first=True),\n    nn.Conv2d(in_channels=62, out_channels=26, kernel_size=1)\n)", "description": "This neural network takes an input of shape [169] and produces an output of shape [26]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=68, out_channels=55, kernel_size=1),\n    nn.Conv2d(in_channels=55, out_channels=44, kernel_size=2),\n    nn.LSTM(input_size=7, hidden_size=75, batch_first=True),\n    nn.Conv3d(in_channels=44, out_channels=54, kernel_size=5),\n    nn.Conv2d(in_channels=54, out_channels=28, kernel_size=4),\n    nn.Conv3d(in_channels=28, out_channels=46, kernel_size=1),\n    nn.Conv1d(in_channels=46, out_channels=9, kernel_size=1),\n    nn.LSTM(input_size=75, hidden_size=7, batch_first=True),\n    nn.Conv3d(in_channels=9, out_channels=43, kernel_size=5)\n)", "description": "This neural network takes an input of shape [68, 113, 7] and produces an output of shape [43, 113, 7]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=224, out_channels=37, kernel_size=1),\n    nn.Conv3d(in_channels=37, out_channels=50, kernel_size=4),\n    nn.Conv2d(in_channels=50, out_channels=46, kernel_size=5),\n    nn.Conv1d(in_channels=46, out_channels=26, kernel_size=2)\n)", "description": "This neural network takes an input of shape [224, 35, 184] and produces an output of shape [26, 35, 184]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=19, out_channels=34, kernel_size=5),\n    nn.Conv2d(in_channels=34, out_channels=58, kernel_size=5),\n    nn.Conv3d(in_channels=58, out_channels=29, kernel_size=3),\n    nn.Conv2d(in_channels=29, out_channels=39, kernel_size=3),\n    nn.LSTM(input_size=79, hidden_size=57, batch_first=True),\n    nn.Conv3d(in_channels=39, out_channels=3, kernel_size=4),\n    nn.Conv2d(in_channels=3, out_channels=26, kernel_size=2),\n    nn.GRU(input_size=57, hidden_size=39, batch_first=True)\n)", "description": "This neural network takes an input of shape [19, 181, 79] and produces an output of shape [26, 181, 39]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=75, out_channels=57, kernel_size=4),\n    nn.Conv3d(in_channels=57, out_channels=9, kernel_size=3),\n    nn.LSTM(input_size=9, hidden_size=77, batch_first=True),\n    nn.Linear(in_features=77, out_features=250),\n    nn.LSTM(input_size=250, hidden_size=21, batch_first=True),\n    nn.GRU(input_size=21, hidden_size=111, batch_first=True),\n    nn.Linear(in_features=111, out_features=231),\n    nn.GRU(input_size=231, hidden_size=99, batch_first=True),\n    nn.Conv1d(in_channels=99, out_channels=28, kernel_size=3)\n)", "description": "This neural network takes an input of shape [75] and produces an output of shape [28]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=239, out_channels=47, kernel_size=4),\n    nn.GRU(input_size=128, hidden_size=104, batch_first=True)\n)", "description": "This neural network takes an input of shape [239, 128] and produces an output of shape [47, 104]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=53, out_channels=13, kernel_size=5),\n    nn.Conv2d(in_channels=13, out_channels=44, kernel_size=4),\n    nn.Conv1d(in_channels=44, out_channels=39, kernel_size=1),\n    nn.LSTM(input_size=9, hidden_size=15, batch_first=True)\n)", "description": "This neural network takes an input of shape [53, 9] and produces an output of shape [39, 15]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=162, out_channels=60, kernel_size=5)\n)", "description": "This neural network takes an input of shape [162] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=82, hidden_size=114, batch_first=True),\n    nn.Linear(in_features=114, out_features=68),\n    nn.LSTM(input_size=68, hidden_size=6, batch_first=True),\n    nn.Conv2d(in_channels=206, out_channels=13, kernel_size=4),\n    nn.Conv3d(in_channels=13, out_channels=40, kernel_size=4),\n    nn.LSTM(input_size=6, hidden_size=122, batch_first=True),\n    nn.LSTM(input_size=122, hidden_size=114, batch_first=True),\n    nn.LSTM(input_size=114, hidden_size=53, batch_first=True)\n)", "description": "This neural network takes an input of shape [206, 40, 82] and produces an output of shape [40, 40, 53]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=211, out_channels=47, kernel_size=1),\n    nn.Conv2d(in_channels=47, out_channels=35, kernel_size=3),\n    nn.LSTM(input_size=217, hidden_size=70, batch_first=True),\n    nn.GRU(input_size=70, hidden_size=120, batch_first=True),\n    nn.Conv1d(in_channels=35, out_channels=53, kernel_size=5),\n    nn.Conv3d(in_channels=53, out_channels=30, kernel_size=3)\n)", "description": "This neural network takes an input of shape [211, 217] and produces an output of shape [30, 120]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=211, hidden_size=82, batch_first=True),\n    nn.Conv3d(in_channels=172, out_channels=19, kernel_size=5),\n    nn.LSTM(input_size=82, hidden_size=3, batch_first=True),\n    nn.Conv1d(in_channels=19, out_channels=36, kernel_size=1),\n    nn.Conv1d(in_channels=36, out_channels=32, kernel_size=4),\n    nn.Conv3d(in_channels=32, out_channels=21, kernel_size=3),\n    nn.Conv2d(in_channels=21, out_channels=13, kernel_size=2),\n    nn.Conv3d(in_channels=13, out_channels=58, kernel_size=5)\n)", "description": "This neural network takes an input of shape [172, 211] and produces an output of shape [58, 3]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=57, hidden_size=13, batch_first=True),\n    nn.Linear(in_features=13, out_features=242),\n    nn.Linear(in_features=242, out_features=86),\n    nn.Conv2d(in_channels=26, out_channels=47, kernel_size=3),\n    nn.Conv1d(in_channels=47, out_channels=35, kernel_size=4)\n)", "description": "This neural network takes an input of shape [26, 57] and produces an output of shape [35, 86]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=38, hidden_size=81, batch_first=True),\n    nn.Conv1d(in_channels=81, out_channels=51, kernel_size=3),\n    nn.Conv3d(in_channels=51, out_channels=38, kernel_size=4),\n    nn.Linear(in_features=38, out_features=171),\n    nn.Conv2d(in_channels=171, out_channels=39, kernel_size=2)\n)", "description": "This neural network takes an input of shape [38] and produces an output of shape [39]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=249, out_channels=54, kernel_size=1)\n)", "description": "This neural network takes an input of shape [249] and produces an output of shape [54]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=229, hidden_size=2, batch_first=True),\n    nn.Conv1d(in_channels=137, out_channels=28, kernel_size=4),\n    nn.GRU(input_size=2, hidden_size=5, batch_first=True),\n    nn.Linear(in_features=5, out_features=242)\n)", "description": "This neural network takes an input of shape [137, 211, 229] and produces an output of shape [28, 211, 242]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=152, hidden_size=115, batch_first=True),\n    nn.Linear(in_features=115, out_features=181),\n    nn.LSTM(input_size=181, hidden_size=59, batch_first=True),\n    nn.GRU(input_size=59, hidden_size=79, batch_first=True),\n    nn.GRU(input_size=79, hidden_size=89, batch_first=True),\n    nn.Linear(in_features=89, out_features=152),\n    nn.Conv2d(in_channels=94, out_channels=26, kernel_size=2),\n    nn.LSTM(input_size=152, hidden_size=40, batch_first=True)\n)", "description": "This neural network takes an input of shape [94, 152] and produces an output of shape [26, 40]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=198, out_channels=31, kernel_size=3),\n    nn.Conv2d(in_channels=31, out_channels=62, kernel_size=2),\n    nn.GRU(input_size=62, hidden_size=1, batch_first=True),\n    nn.GRU(input_size=1, hidden_size=111, batch_first=True),\n    nn.GRU(input_size=111, hidden_size=68, batch_first=True)\n)", "description": "This neural network takes an input of shape [198] and produces an output of shape [68]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=45, out_channels=50, kernel_size=2),\n    nn.LSTM(input_size=113, hidden_size=9, batch_first=True),\n    nn.GRU(input_size=9, hidden_size=97, batch_first=True),\n    nn.Conv2d(in_channels=50, out_channels=58, kernel_size=2),\n    nn.LSTM(input_size=97, hidden_size=107, batch_first=True),\n    nn.Conv2d(in_channels=58, out_channels=53, kernel_size=3),\n    nn.Conv3d(in_channels=53, out_channels=6, kernel_size=4),\n    nn.Linear(in_features=107, out_features=144),\n    nn.Conv2d(in_channels=6, out_channels=56, kernel_size=2),\n    nn.Conv3d(in_channels=56, out_channels=48, kernel_size=2)\n)", "description": "This neural network takes an input of shape [45, 113] and produces an output of shape [48, 144]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=65, hidden_size=27, batch_first=True)\n)", "description": "This neural network takes an input of shape [65] and produces an output of shape [27]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=112, out_channels=11, kernel_size=1),\n    nn.Conv1d(in_channels=11, out_channels=20, kernel_size=4),\n    nn.Conv1d(in_channels=20, out_channels=29, kernel_size=1),\n    nn.Conv2d(in_channels=29, out_channels=49, kernel_size=1),\n    nn.Conv1d(in_channels=49, out_channels=7, kernel_size=1),\n    nn.GRU(input_size=167, hidden_size=109, batch_first=True),\n    nn.GRU(input_size=109, hidden_size=16, batch_first=True)\n)", "description": "This neural network takes an input of shape [112, 167] and produces an output of shape [7, 16]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=177, out_features=211),\n    nn.Conv1d(in_channels=97, out_channels=36, kernel_size=5),\n    nn.GRU(input_size=211, hidden_size=1, batch_first=True),\n    nn.Linear(in_features=1, out_features=180)\n)", "description": "This neural network takes an input of shape [97, 177] and produces an output of shape [36, 180]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=11, hidden_size=76, batch_first=True),\n    nn.GRU(input_size=76, hidden_size=75, batch_first=True),\n    nn.Conv2d(in_channels=75, out_channels=31, kernel_size=2),\n    nn.GRU(input_size=31, hidden_size=101, batch_first=True),\n    nn.LSTM(input_size=101, hidden_size=7, batch_first=True),\n    nn.Linear(in_features=7, out_features=216),\n    nn.LSTM(input_size=216, hidden_size=71, batch_first=True)\n)", "description": "This neural network takes an input of shape [11] and produces an output of shape [71]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=186, out_channels=59, kernel_size=3),\n    nn.Conv2d(in_channels=59, out_channels=7, kernel_size=3)\n)", "description": "This neural network takes an input of shape [186] and produces an output of shape [7]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=60, out_features=127),\n    nn.Conv2d(in_channels=217, out_channels=18, kernel_size=2),\n    nn.GRU(input_size=127, hidden_size=59, batch_first=True),\n    nn.Conv2d(in_channels=18, out_channels=3, kernel_size=2),\n    nn.Linear(in_features=59, out_features=142),\n    nn.LSTM(input_size=142, hidden_size=47, batch_first=True),\n    nn.Linear(in_features=47, out_features=181),\n    nn.LSTM(input_size=181, hidden_size=75, batch_first=True),\n    nn.Conv1d(in_channels=3, out_channels=29, kernel_size=4)\n)", "description": "This neural network takes an input of shape [217, 246, 60] and produces an output of shape [29, 246, 75]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=53, hidden_size=76, batch_first=True),\n    nn.Conv2d(in_channels=28, out_channels=45, kernel_size=4),\n    nn.Linear(in_features=76, out_features=135),\n    nn.LSTM(input_size=135, hidden_size=104, batch_first=True),\n    nn.Conv1d(in_channels=45, out_channels=57, kernel_size=2),\n    nn.Conv3d(in_channels=57, out_channels=16, kernel_size=4),\n    nn.Conv2d(in_channels=16, out_channels=2, kernel_size=2)\n)", "description": "This neural network takes an input of shape [28, 90, 53] and produces an output of shape [2, 90, 104]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=89, out_features=238),\n    nn.LSTM(input_size=238, hidden_size=63, batch_first=True),\n    nn.GRU(input_size=63, hidden_size=66, batch_first=True),\n    nn.Conv2d(in_channels=81, out_channels=50, kernel_size=4),\n    nn.Conv2d(in_channels=50, out_channels=55, kernel_size=4),\n    nn.GRU(input_size=66, hidden_size=118, batch_first=True),\n    nn.LSTM(input_size=118, hidden_size=1, batch_first=True)\n)", "description": "This neural network takes an input of shape [81, 89] and produces an output of shape [55, 1]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=17, out_channels=1, kernel_size=5),\n    nn.Conv3d(in_channels=1, out_channels=4, kernel_size=1),\n    nn.Linear(in_features=5, out_features=48),\n    nn.Conv3d(in_channels=4, out_channels=9, kernel_size=3)\n)", "description": "This neural network takes an input of shape [17, 5] and produces an output of shape [9, 48]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=85, hidden_size=36, batch_first=True),\n    nn.GRU(input_size=36, hidden_size=78, batch_first=True),\n    nn.Conv1d(in_channels=192, out_channels=54, kernel_size=3),\n    nn.Conv2d(in_channels=54, out_channels=19, kernel_size=2),\n    nn.Linear(in_features=78, out_features=253)\n)", "description": "This neural network takes an input of shape [192, 85] and produces an output of shape [19, 253]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=79, out_channels=33, kernel_size=5),\n    nn.Linear(in_features=93, out_features=220)\n)", "description": "This neural network takes an input of shape [79, 93] and produces an output of shape [33, 220]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=223, out_features=14),\n    nn.LSTM(input_size=14, hidden_size=1, batch_first=True),\n    nn.Conv1d(in_channels=1, out_channels=36, kernel_size=4),\n    nn.GRU(input_size=36, hidden_size=46, batch_first=True),\n    nn.GRU(input_size=46, hidden_size=102, batch_first=True),\n    nn.Conv3d(in_channels=102, out_channels=27, kernel_size=3),\n    nn.GRU(input_size=27, hidden_size=100, batch_first=True),\n    nn.Conv3d(in_channels=100, out_channels=24, kernel_size=5)\n)", "description": "This neural network takes an input of shape [223] and produces an output of shape [24]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=181, out_channels=59, kernel_size=3),\n    nn.Conv3d(in_channels=59, out_channels=14, kernel_size=5),\n    nn.LSTM(input_size=182, hidden_size=16, batch_first=True),\n    nn.Conv3d(in_channels=14, out_channels=61, kernel_size=1)\n)", "description": "This neural network takes an input of shape [181, 182] and produces an output of shape [61, 16]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=163, out_features=169),\n    nn.Linear(in_features=169, out_features=145),\n    nn.Conv1d(in_channels=145, out_channels=25, kernel_size=2),\n    nn.Conv1d(in_channels=25, out_channels=59, kernel_size=1),\n    nn.Conv2d(in_channels=59, out_channels=22, kernel_size=1),\n    nn.LSTM(input_size=22, hidden_size=17, batch_first=True),\n    nn.LSTM(input_size=17, hidden_size=16, batch_first=True),\n    nn.Linear(in_features=16, out_features=13),\n    nn.GRU(input_size=13, hidden_size=11, batch_first=True),\n    nn.Conv3d(in_channels=11, out_channels=10, kernel_size=2)\n)", "description": "This neural network takes an input of shape [163] and produces an output of shape [10]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=111, hidden_size=70, batch_first=True),\n    nn.Conv3d(in_channels=158, out_channels=41, kernel_size=2),\n    nn.Linear(in_features=70, out_features=159),\n    nn.Linear(in_features=159, out_features=21),\n    nn.Conv1d(in_channels=41, out_channels=46, kernel_size=5),\n    nn.Conv1d(in_channels=46, out_channels=47, kernel_size=4)\n)", "description": "This neural network takes an input of shape [158, 220, 111] and produces an output of shape [47, 220, 21]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=118, hidden_size=63, batch_first=True),\n    nn.Conv3d(in_channels=15, out_channels=32, kernel_size=1),\n    nn.LSTM(input_size=63, hidden_size=112, batch_first=True),\n    nn.LSTM(input_size=112, hidden_size=54, batch_first=True),\n    nn.LSTM(input_size=54, hidden_size=122, batch_first=True),\n    nn.GRU(input_size=122, hidden_size=34, batch_first=True),\n    nn.Conv2d(in_channels=32, out_channels=25, kernel_size=3),\n    nn.LSTM(input_size=34, hidden_size=27, batch_first=True),\n    nn.Conv2d(in_channels=25, out_channels=58, kernel_size=5)\n)", "description": "This neural network takes an input of shape [15, 118] and produces an output of shape [58, 27]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=180, out_features=78),\n    nn.Conv3d(in_channels=1, out_channels=22, kernel_size=5),\n    nn.GRU(input_size=78, hidden_size=13, batch_first=True),\n    nn.Conv2d(in_channels=22, out_channels=15, kernel_size=1),\n    nn.GRU(input_size=13, hidden_size=113, batch_first=True)\n)", "description": "This neural network takes an input of shape [1, 180] and produces an output of shape [15, 113]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=130, out_channels=13, kernel_size=3),\n    nn.Conv1d(in_channels=13, out_channels=62, kernel_size=4),\n    nn.Conv3d(in_channels=62, out_channels=39, kernel_size=1),\n    nn.GRU(input_size=39, hidden_size=25, batch_first=True),\n    nn.Linear(in_features=25, out_features=159),\n    nn.Conv1d(in_channels=159, out_channels=9, kernel_size=3),\n    nn.Linear(in_features=9, out_features=24),\n    nn.Conv3d(in_channels=24, out_channels=54, kernel_size=4),\n    nn.Conv2d(in_channels=54, out_channels=30, kernel_size=4)\n)", "description": "This neural network takes an input of shape [130] and produces an output of shape [30]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=158, hidden_size=58, batch_first=True),\n    nn.Conv3d(in_channels=91, out_channels=64, kernel_size=2),\n    nn.Conv1d(in_channels=64, out_channels=61, kernel_size=3),\n    nn.Conv3d(in_channels=61, out_channels=47, kernel_size=2),\n    nn.Linear(in_features=58, out_features=178),\n    nn.Conv2d(in_channels=47, out_channels=15, kernel_size=3)\n)", "description": "This neural network takes an input of shape [91, 98, 158] and produces an output of shape [15, 98, 178]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=218, out_features=146),\n    nn.Conv1d(in_channels=3, out_channels=51, kernel_size=4),\n    nn.Conv2d(in_channels=51, out_channels=30, kernel_size=2),\n    nn.LSTM(input_size=146, hidden_size=87, batch_first=True)\n)", "description": "This neural network takes an input of shape [3, 218] and produces an output of shape [30, 87]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=202, out_channels=35, kernel_size=4),\n    nn.Conv1d(in_channels=35, out_channels=54, kernel_size=2),\n    nn.Conv3d(in_channels=54, out_channels=37, kernel_size=2),\n    nn.Conv3d(in_channels=37, out_channels=35, kernel_size=4),\n    nn.Linear(in_features=35, out_features=223),\n    nn.GRU(input_size=223, hidden_size=118, batch_first=True),\n    nn.Conv2d(in_channels=118, out_channels=39, kernel_size=3)\n)", "description": "This neural network takes an input of shape [202] and produces an output of shape [39]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=49, out_channels=42, kernel_size=1),\n    nn.Conv3d(in_channels=42, out_channels=20, kernel_size=2),\n    nn.Conv3d(in_channels=20, out_channels=2, kernel_size=4),\n    nn.GRU(input_size=2, hidden_size=19, batch_first=True),\n    nn.Conv3d(in_channels=19, out_channels=51, kernel_size=4),\n    nn.Conv3d(in_channels=51, out_channels=22, kernel_size=4),\n    nn.LSTM(input_size=22, hidden_size=45, batch_first=True),\n    nn.LSTM(input_size=45, hidden_size=36, batch_first=True),\n    nn.Linear(in_features=36, out_features=194)\n)", "description": "This neural network takes an input of shape [49] and produces an output of shape [194]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=233, out_channels=17, kernel_size=1),\n    nn.Conv1d(in_channels=17, out_channels=34, kernel_size=5),\n    nn.Conv2d(in_channels=34, out_channels=25, kernel_size=3),\n    nn.Conv3d(in_channels=25, out_channels=43, kernel_size=4),\n    nn.GRU(input_size=43, hidden_size=11, batch_first=True),\n    nn.Conv1d(in_channels=11, out_channels=19, kernel_size=2),\n    nn.Conv1d(in_channels=19, out_channels=45, kernel_size=2),\n    nn.Conv3d(in_channels=45, out_channels=43, kernel_size=4)\n)", "description": "This neural network takes an input of shape [233] and produces an output of shape [43]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=228, out_channels=5, kernel_size=5),\n    nn.GRU(input_size=34, hidden_size=83, batch_first=True),\n    nn.Linear(in_features=83, out_features=119),\n    nn.Conv1d(in_channels=5, out_channels=50, kernel_size=3),\n    nn.Linear(in_features=119, out_features=227),\n    nn.Linear(in_features=227, out_features=256)\n)", "description": "This neural network takes an input of shape [228, 223, 34] and produces an output of shape [50, 223, 256]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=73, out_features=92),\n    nn.Linear(in_features=92, out_features=1),\n    nn.Linear(in_features=1, out_features=236),\n    nn.GRU(input_size=236, hidden_size=55, batch_first=True),\n    nn.LSTM(input_size=55, hidden_size=74, batch_first=True),\n    nn.Linear(in_features=74, out_features=183),\n    nn.LSTM(input_size=183, hidden_size=120, batch_first=True),\n    nn.Conv1d(in_channels=94, out_channels=2, kernel_size=2),\n    nn.Conv3d(in_channels=2, out_channels=9, kernel_size=1)\n)", "description": "This neural network takes an input of shape [94, 73] and produces an output of shape [9, 120]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=238, out_channels=35, kernel_size=4),\n    nn.Conv2d(in_channels=35, out_channels=19, kernel_size=4),\n    nn.Conv2d(in_channels=19, out_channels=34, kernel_size=3),\n    nn.GRU(input_size=34, hidden_size=74, batch_first=True),\n    nn.Conv1d(in_channels=74, out_channels=14, kernel_size=3),\n    nn.GRU(input_size=14, hidden_size=22, batch_first=True),\n    nn.Conv1d(in_channels=22, out_channels=39, kernel_size=4),\n    nn.Conv3d(in_channels=39, out_channels=9, kernel_size=1),\n    nn.GRU(input_size=9, hidden_size=95, batch_first=True)\n)", "description": "This neural network takes an input of shape [238] and produces an output of shape [95]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=125, hidden_size=59, batch_first=True),\n    nn.Conv3d(in_channels=59, out_channels=17, kernel_size=5),\n    nn.Linear(in_features=17, out_features=192),\n    nn.Conv1d(in_channels=192, out_channels=44, kernel_size=1),\n    nn.Conv2d(in_channels=44, out_channels=8, kernel_size=4),\n    nn.LSTM(input_size=8, hidden_size=127, batch_first=True)\n)", "description": "This neural network takes an input of shape [125] and produces an output of shape [127]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=224, hidden_size=72, batch_first=True),\n    nn.Conv3d(in_channels=2, out_channels=33, kernel_size=4),\n    nn.Conv2d(in_channels=33, out_channels=31, kernel_size=5),\n    nn.LSTM(input_size=72, hidden_size=111, batch_first=True),\n    nn.Conv1d(in_channels=31, out_channels=59, kernel_size=2),\n    nn.Conv1d(in_channels=59, out_channels=9, kernel_size=2),\n    nn.Linear(in_features=111, out_features=239),\n    nn.Conv2d(in_channels=9, out_channels=31, kernel_size=3)\n)", "description": "This neural network takes an input of shape [2, 6, 224] and produces an output of shape [31, 6, 239]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=112, out_features=190),\n    nn.GRU(input_size=190, hidden_size=64, batch_first=True),\n    nn.Conv1d(in_channels=153, out_channels=17, kernel_size=2),\n    nn.Linear(in_features=64, out_features=121),\n    nn.Linear(in_features=121, out_features=100),\n    nn.Conv1d(in_channels=17, out_channels=11, kernel_size=1),\n    nn.LSTM(input_size=100, hidden_size=17, batch_first=True)\n)", "description": "This neural network takes an input of shape [153, 28, 112] and produces an output of shape [11, 28, 17]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=256, out_channels=21, kernel_size=5),\n    nn.Conv1d(in_channels=21, out_channels=7, kernel_size=4),\n    nn.LSTM(input_size=21, hidden_size=60, batch_first=True),\n    nn.LSTM(input_size=60, hidden_size=71, batch_first=True),\n    nn.GRU(input_size=71, hidden_size=26, batch_first=True),\n    nn.GRU(input_size=26, hidden_size=27, batch_first=True),\n    nn.Linear(in_features=27, out_features=156),\n    nn.Conv1d(in_channels=7, out_channels=10, kernel_size=2),\n    nn.LSTM(input_size=156, hidden_size=9, batch_first=True)\n)", "description": "This neural network takes an input of shape [256, 144, 21] and produces an output of shape [10, 144, 9]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=17, out_channels=55, kernel_size=4),\n    nn.LSTM(input_size=223, hidden_size=84, batch_first=True),\n    nn.Conv2d(in_channels=55, out_channels=3, kernel_size=4),\n    nn.GRU(input_size=84, hidden_size=66, batch_first=True),\n    nn.Conv3d(in_channels=3, out_channels=11, kernel_size=1),\n    nn.GRU(input_size=66, hidden_size=92, batch_first=True),\n    nn.Conv3d(in_channels=11, out_channels=24, kernel_size=2),\n    nn.Conv3d(in_channels=24, out_channels=60, kernel_size=2),\n    nn.Conv3d(in_channels=60, out_channels=32, kernel_size=2)\n)", "description": "This neural network takes an input of shape [17, 223] and produces an output of shape [32, 92]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=85, out_channels=15, kernel_size=5)\n)", "description": "This neural network takes an input of shape [85, 15, 184] and produces an output of shape [15, 15, 184]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=62, out_channels=49, kernel_size=4),\n    nn.LSTM(input_size=49, hidden_size=42, batch_first=True),\n    nn.LSTM(input_size=42, hidden_size=39, batch_first=True),\n    nn.Conv2d(in_channels=39, out_channels=49, kernel_size=3),\n    nn.Conv3d(in_channels=49, out_channels=36, kernel_size=3),\n    nn.Conv2d(in_channels=36, out_channels=9, kernel_size=4)\n)", "description": "This neural network takes an input of shape [62] and produces an output of shape [9]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=84, out_channels=51, kernel_size=5),\n    nn.LSTM(input_size=51, hidden_size=91, batch_first=True),\n    nn.Conv3d(in_channels=91, out_channels=5, kernel_size=4),\n    nn.Conv1d(in_channels=5, out_channels=5, kernel_size=3),\n    nn.Conv2d(in_channels=5, out_channels=26, kernel_size=5),\n    nn.Conv3d(in_channels=26, out_channels=49, kernel_size=1),\n    nn.Conv3d(in_channels=49, out_channels=27, kernel_size=5),\n    nn.Conv2d(in_channels=27, out_channels=57, kernel_size=4)\n)", "description": "This neural network takes an input of shape [84] and produces an output of shape [57]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=117, out_channels=10, kernel_size=4),\n    nn.Conv2d(in_channels=10, out_channels=61, kernel_size=5),\n    nn.Linear(in_features=90, out_features=69),\n    nn.Conv2d(in_channels=61, out_channels=27, kernel_size=1),\n    nn.Conv2d(in_channels=27, out_channels=21, kernel_size=4),\n    nn.Conv1d(in_channels=21, out_channels=21, kernel_size=2),\n    nn.Conv3d(in_channels=21, out_channels=40, kernel_size=5),\n    nn.LSTM(input_size=69, hidden_size=86, batch_first=True)\n)", "description": "This neural network takes an input of shape [117, 35, 90] and produces an output of shape [40, 35, 86]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=77, hidden_size=73, batch_first=True),\n    nn.LSTM(input_size=73, hidden_size=113, batch_first=True),\n    nn.Linear(in_features=113, out_features=68)\n)", "description": "This neural network takes an input of shape [246, 193, 77] and produces an output of shape [246, 193, 68]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=181, hidden_size=13, batch_first=True),\n    nn.Linear(in_features=13, out_features=167),\n    nn.Conv2d(in_channels=167, out_channels=35, kernel_size=1),\n    nn.Conv1d(in_channels=35, out_channels=60, kernel_size=2)\n)", "description": "This neural network takes an input of shape [181] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=135, out_features=193),\n    nn.GRU(input_size=193, hidden_size=123, batch_first=True),\n    nn.Linear(in_features=123, out_features=2),\n    nn.Conv2d(in_channels=112, out_channels=64, kernel_size=5),\n    nn.Linear(in_features=2, out_features=21),\n    nn.GRU(input_size=21, hidden_size=86, batch_first=True),\n    nn.GRU(input_size=86, hidden_size=33, batch_first=True),\n    nn.LSTM(input_size=33, hidden_size=112, batch_first=True),\n    nn.LSTM(input_size=112, hidden_size=22, batch_first=True)\n)", "description": "This neural network takes an input of shape [112, 135] and produces an output of shape [64, 22]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=137, out_features=117),\n    nn.Conv3d(in_channels=117, out_channels=63, kernel_size=3),\n    nn.Conv2d(in_channels=63, out_channels=37, kernel_size=3),\n    nn.LSTM(input_size=37, hidden_size=17, batch_first=True),\n    nn.GRU(input_size=17, hidden_size=105, batch_first=True),\n    nn.Conv1d(in_channels=105, out_channels=19, kernel_size=3)\n)", "description": "This neural network takes an input of shape [137] and produces an output of shape [19]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=89, hidden_size=84, batch_first=True),\n    nn.GRU(input_size=84, hidden_size=8, batch_first=True),\n    nn.Conv1d(in_channels=8, out_channels=40, kernel_size=5),\n    nn.GRU(input_size=40, hidden_size=18, batch_first=True),\n    nn.LSTM(input_size=18, hidden_size=31, batch_first=True)\n)", "description": "This neural network takes an input of shape [89] and produces an output of shape [31]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=90, out_features=167),\n    nn.Conv1d(in_channels=129, out_channels=21, kernel_size=1)\n)", "description": "This neural network takes an input of shape [129, 31, 90] and produces an output of shape [21, 31, 167]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=242, hidden_size=91, batch_first=True),\n    nn.Conv1d(in_channels=119, out_channels=35, kernel_size=4),\n    nn.Linear(in_features=91, out_features=167),\n    nn.Linear(in_features=167, out_features=50),\n    nn.Conv1d(in_channels=35, out_channels=1, kernel_size=3),\n    nn.GRU(input_size=50, hidden_size=16, batch_first=True),\n    nn.Conv1d(in_channels=1, out_channels=24, kernel_size=3),\n    nn.Conv3d(in_channels=24, out_channels=4, kernel_size=3),\n    nn.Conv3d(in_channels=4, out_channels=35, kernel_size=2)\n)", "description": "This neural network takes an input of shape [119, 242] and produces an output of shape [35, 16]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=147, out_features=189),\n    nn.GRU(input_size=189, hidden_size=74, batch_first=True),\n    nn.Linear(in_features=74, out_features=149),\n    nn.Linear(in_features=149, out_features=170),\n    nn.Conv3d(in_channels=214, out_channels=46, kernel_size=1),\n    nn.Conv1d(in_channels=46, out_channels=44, kernel_size=5)\n)", "description": "This neural network takes an input of shape [214, 205, 147] and produces an output of shape [44, 205, 170]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=88, out_channels=60, kernel_size=5),\n    nn.Conv2d(in_channels=60, out_channels=16, kernel_size=5),\n    nn.LSTM(input_size=16, hidden_size=65, batch_first=True)\n)", "description": "This neural network takes an input of shape [88] and produces an output of shape [65]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=202, out_features=151),\n    nn.Conv1d(in_channels=151, out_channels=42, kernel_size=2)\n)", "description": "This neural network takes an input of shape [202] and produces an output of shape [42]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=104, out_channels=14, kernel_size=3),\n    nn.LSTM(input_size=95, hidden_size=121, batch_first=True),\n    nn.Conv1d(in_channels=14, out_channels=1, kernel_size=4),\n    nn.LSTM(input_size=121, hidden_size=66, batch_first=True),\n    nn.Linear(in_features=66, out_features=159),\n    nn.Conv2d(in_channels=1, out_channels=18, kernel_size=2),\n    nn.GRU(input_size=159, hidden_size=17, batch_first=True),\n    nn.Conv3d(in_channels=18, out_channels=36, kernel_size=2)\n)", "description": "This neural network takes an input of shape [104, 122, 95] and produces an output of shape [36, 122, 17]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=238, hidden_size=73, batch_first=True),\n    nn.Conv3d(in_channels=73, out_channels=20, kernel_size=3),\n    nn.Linear(in_features=20, out_features=145),\n    nn.Conv2d(in_channels=145, out_channels=14, kernel_size=3),\n    nn.Conv2d(in_channels=14, out_channels=30, kernel_size=2),\n    nn.Conv2d(in_channels=30, out_channels=48, kernel_size=5),\n    nn.Linear(in_features=48, out_features=35),\n    nn.LSTM(input_size=35, hidden_size=109, batch_first=True)\n)", "description": "This neural network takes an input of shape [238] and produces an output of shape [109]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=2, hidden_size=98, batch_first=True),\n    nn.Conv1d(in_channels=112, out_channels=6, kernel_size=1),\n    nn.LSTM(input_size=98, hidden_size=3, batch_first=True),\n    nn.LSTM(input_size=3, hidden_size=100, batch_first=True),\n    nn.Linear(in_features=100, out_features=58),\n    nn.LSTM(input_size=58, hidden_size=99, batch_first=True),\n    nn.Conv3d(in_channels=6, out_channels=25, kernel_size=5),\n    nn.GRU(input_size=99, hidden_size=93, batch_first=True),\n    nn.GRU(input_size=93, hidden_size=12, batch_first=True),\n    nn.Conv2d(in_channels=25, out_channels=33, kernel_size=5)\n)", "description": "This neural network takes an input of shape [112, 150, 2] and produces an output of shape [33, 150, 12]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=177, out_channels=54, kernel_size=3),\n    nn.LSTM(input_size=127, hidden_size=16, batch_first=True),\n    nn.GRU(input_size=16, hidden_size=86, batch_first=True),\n    nn.Conv3d(in_channels=54, out_channels=4, kernel_size=4),\n    nn.Conv3d(in_channels=4, out_channels=39, kernel_size=5),\n    nn.Linear(in_features=86, out_features=80),\n    nn.Conv1d(in_channels=39, out_channels=42, kernel_size=4),\n    nn.GRU(input_size=80, hidden_size=113, batch_first=True),\n    nn.Linear(in_features=113, out_features=102)\n)", "description": "This neural network takes an input of shape [177, 127] and produces an output of shape [42, 102]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=163, out_channels=31, kernel_size=5),\n    nn.Conv2d(in_channels=31, out_channels=8, kernel_size=3),\n    nn.Linear(in_features=238, out_features=10),\n    nn.Conv3d(in_channels=8, out_channels=46, kernel_size=4),\n    nn.GRU(input_size=10, hidden_size=52, batch_first=True),\n    nn.LSTM(input_size=52, hidden_size=63, batch_first=True),\n    nn.Linear(in_features=63, out_features=216)\n)", "description": "This neural network takes an input of shape [163, 238] and produces an output of shape [46, 216]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=254, hidden_size=90, batch_first=True),\n    nn.GRU(input_size=90, hidden_size=68, batch_first=True),\n    nn.GRU(input_size=68, hidden_size=80, batch_first=True),\n    nn.Conv3d(in_channels=80, out_channels=42, kernel_size=2),\n    nn.Conv1d(in_channels=42, out_channels=16, kernel_size=5),\n    nn.Linear(in_features=16, out_features=191),\n    nn.GRU(input_size=191, hidden_size=95, batch_first=True),\n    nn.GRU(input_size=95, hidden_size=91, batch_first=True),\n    nn.GRU(input_size=91, hidden_size=125, batch_first=True)\n)", "description": "This neural network takes an input of shape [254] and produces an output of shape [125]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=227, out_channels=30, kernel_size=5),\n    nn.Conv3d(in_channels=30, out_channels=18, kernel_size=5),\n    nn.LSTM(input_size=233, hidden_size=53, batch_first=True),\n    nn.Linear(in_features=53, out_features=65),\n    nn.Conv2d(in_channels=18, out_channels=23, kernel_size=1),\n    nn.Conv3d(in_channels=23, out_channels=13, kernel_size=3),\n    nn.GRU(input_size=65, hidden_size=18, batch_first=True),\n    nn.GRU(input_size=18, hidden_size=31, batch_first=True)\n)", "description": "This neural network takes an input of shape [227, 233] and produces an output of shape [13, 31]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=124, hidden_size=6, batch_first=True),\n    nn.GRU(input_size=6, hidden_size=89, batch_first=True),\n    nn.Conv1d(in_channels=89, out_channels=34, kernel_size=3),\n    nn.Linear(in_features=34, out_features=170),\n    nn.GRU(input_size=170, hidden_size=51, batch_first=True),\n    nn.GRU(input_size=51, hidden_size=30, batch_first=True),\n    nn.GRU(input_size=30, hidden_size=72, batch_first=True)\n)", "description": "This neural network takes an input of shape [124] and produces an output of shape [72]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=197, out_features=76),\n    nn.GRU(input_size=76, hidden_size=5, batch_first=True),\n    nn.Conv1d(in_channels=5, out_channels=31, kernel_size=1),\n    nn.LSTM(input_size=31, hidden_size=2, batch_first=True),\n    nn.Conv1d(in_channels=2, out_channels=50, kernel_size=5),\n    nn.Conv2d(in_channels=50, out_channels=48, kernel_size=2),\n    nn.Conv1d(in_channels=48, out_channels=28, kernel_size=1),\n    nn.GRU(input_size=28, hidden_size=126, batch_first=True),\n    nn.Conv2d(in_channels=126, out_channels=18, kernel_size=3)\n)", "description": "This neural network takes an input of shape [197] and produces an output of shape [18]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=31, hidden_size=72, batch_first=True),\n    nn.Linear(in_features=72, out_features=192),\n    nn.Conv2d(in_channels=192, out_channels=48, kernel_size=2),\n    nn.Linear(in_features=48, out_features=239),\n    nn.Conv2d(in_channels=239, out_channels=20, kernel_size=3),\n    nn.Linear(in_features=20, out_features=149),\n    nn.Conv2d(in_channels=149, out_channels=24, kernel_size=3),\n    nn.GRU(input_size=24, hidden_size=80, batch_first=True)\n)", "description": "This neural network takes an input of shape [31] and produces an output of shape [80]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=182, hidden_size=99, batch_first=True),\n    nn.Conv1d(in_channels=128, out_channels=63, kernel_size=1)\n)", "description": "This neural network takes an input of shape [128, 121, 182] and produces an output of shape [63, 121, 99]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=208, hidden_size=106, batch_first=True),\n    nn.GRU(input_size=106, hidden_size=47, batch_first=True),\n    nn.Conv3d(in_channels=28, out_channels=18, kernel_size=2),\n    nn.GRU(input_size=47, hidden_size=122, batch_first=True),\n    nn.Conv1d(in_channels=18, out_channels=61, kernel_size=3),\n    nn.Linear(in_features=122, out_features=210)\n)", "description": "This neural network takes an input of shape [28, 208] and produces an output of shape [61, 210]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=208, hidden_size=62, batch_first=True),\n    nn.LSTM(input_size=62, hidden_size=115, batch_first=True),\n    nn.LSTM(input_size=115, hidden_size=71, batch_first=True),\n    nn.Conv2d(in_channels=71, out_channels=14, kernel_size=2),\n    nn.LSTM(input_size=14, hidden_size=77, batch_first=True),\n    nn.Linear(in_features=77, out_features=107),\n    nn.Conv1d(in_channels=107, out_channels=36, kernel_size=2),\n    nn.Conv2d(in_channels=36, out_channels=38, kernel_size=5),\n    nn.GRU(input_size=38, hidden_size=19, batch_first=True)\n)", "description": "This neural network takes an input of shape [208] and produces an output of shape [19]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=122, out_features=128),\n    nn.Linear(in_features=128, out_features=43),\n    nn.Linear(in_features=43, out_features=186),\n    nn.Linear(in_features=186, out_features=246),\n    nn.LSTM(input_size=246, hidden_size=20, batch_first=True),\n    nn.GRU(input_size=20, hidden_size=110, batch_first=True),\n    nn.Linear(in_features=110, out_features=250),\n    nn.Conv3d(in_channels=63, out_channels=61, kernel_size=2),\n    nn.Conv1d(in_channels=61, out_channels=15, kernel_size=2),\n    nn.Conv2d(in_channels=15, out_channels=21, kernel_size=4)\n)", "description": "This neural network takes an input of shape [63, 122] and produces an output of shape [21, 250]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=230, out_channels=10, kernel_size=1),\n    nn.GRU(input_size=185, hidden_size=2, batch_first=True),\n    nn.Conv2d(in_channels=10, out_channels=57, kernel_size=4)\n)", "description": "This neural network takes an input of shape [230, 185] and produces an output of shape [57, 2]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=68, hidden_size=27, batch_first=True),\n    nn.Linear(in_features=27, out_features=253),\n    nn.Conv1d(in_channels=43, out_channels=21, kernel_size=2)\n)", "description": "This neural network takes an input of shape [43, 68] and produces an output of shape [21, 253]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=185, out_channels=14, kernel_size=3),\n    nn.Conv1d(in_channels=14, out_channels=28, kernel_size=2),\n    nn.Conv1d(in_channels=28, out_channels=28, kernel_size=2),\n    nn.GRU(input_size=246, hidden_size=93, batch_first=True),\n    nn.Conv1d(in_channels=28, out_channels=9, kernel_size=4),\n    nn.Linear(in_features=93, out_features=184),\n    nn.Linear(in_features=184, out_features=74)\n)", "description": "This neural network takes an input of shape [185, 22, 246] and produces an output of shape [9, 22, 74]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=195, hidden_size=22, batch_first=True),\n    nn.GRU(input_size=22, hidden_size=2, batch_first=True),\n    nn.Conv1d(in_channels=2, out_channels=51, kernel_size=5),\n    nn.Conv1d(in_channels=51, out_channels=38, kernel_size=3),\n    nn.Conv1d(in_channels=38, out_channels=4, kernel_size=1),\n    nn.Conv2d(in_channels=4, out_channels=27, kernel_size=2)\n)", "description": "This neural network takes an input of shape [195] and produces an output of shape [27]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=31, out_channels=3, kernel_size=1),\n    nn.Conv3d(in_channels=3, out_channels=58, kernel_size=5),\n    nn.LSTM(input_size=58, hidden_size=55, batch_first=True),\n    nn.Conv2d(in_channels=55, out_channels=5, kernel_size=1),\n    nn.Linear(in_features=5, out_features=251),\n    nn.Linear(in_features=251, out_features=222),\n    nn.Linear(in_features=222, out_features=35),\n    nn.Conv2d(in_channels=35, out_channels=8, kernel_size=2)\n)", "description": "This neural network takes an input of shape [31] and produces an output of shape [8]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=212, hidden_size=68, batch_first=True),\n    nn.GRU(input_size=68, hidden_size=43, batch_first=True)\n)", "description": "This neural network takes an input of shape [212] and produces an output of shape [43]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=108, out_channels=25, kernel_size=5),\n    nn.Linear(in_features=58, out_features=37),\n    nn.LSTM(input_size=37, hidden_size=104, batch_first=True),\n    nn.Conv3d(in_channels=25, out_channels=20, kernel_size=1),\n    nn.Linear(in_features=104, out_features=211),\n    nn.Conv3d(in_channels=20, out_channels=2, kernel_size=1)\n)", "description": "This neural network takes an input of shape [108, 242, 58] and produces an output of shape [2, 242, 211]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=100, hidden_size=75, batch_first=True),\n    nn.Linear(in_features=75, out_features=188),\n    nn.LSTM(input_size=188, hidden_size=122, batch_first=True),\n    nn.LSTM(input_size=122, hidden_size=52, batch_first=True),\n    nn.Conv2d(in_channels=19, out_channels=57, kernel_size=4)\n)", "description": "This neural network takes an input of shape [19, 8, 100] and produces an output of shape [57, 8, 52]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=31, out_channels=62, kernel_size=2),\n    nn.Conv3d(in_channels=62, out_channels=26, kernel_size=4)\n)", "description": "This neural network takes an input of shape [31, 43] and produces an output of shape [26, 43]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=138, out_channels=48, kernel_size=2),\n    nn.Conv3d(in_channels=48, out_channels=10, kernel_size=1),\n    nn.Conv3d(in_channels=10, out_channels=59, kernel_size=2),\n    nn.Conv3d(in_channels=59, out_channels=23, kernel_size=1),\n    nn.GRU(input_size=171, hidden_size=38, batch_first=True),\n    nn.GRU(input_size=38, hidden_size=124, batch_first=True),\n    nn.GRU(input_size=124, hidden_size=123, batch_first=True),\n    nn.Conv2d(in_channels=23, out_channels=1, kernel_size=1),\n    nn.Linear(in_features=123, out_features=79),\n    nn.LSTM(input_size=79, hidden_size=44, batch_first=True)\n)", "description": "This neural network takes an input of shape [138, 188, 171] and produces an output of shape [1, 188, 44]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=17, hidden_size=84, batch_first=True),\n    nn.Conv2d(in_channels=124, out_channels=14, kernel_size=1)\n)", "description": "This neural network takes an input of shape [124, 17] and produces an output of shape [14, 84]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=102, out_features=138),\n    nn.Conv1d(in_channels=138, out_channels=63, kernel_size=5),\n    nn.Conv3d(in_channels=63, out_channels=34, kernel_size=5),\n    nn.LSTM(input_size=34, hidden_size=125, batch_first=True),\n    nn.Linear(in_features=125, out_features=154),\n    nn.Conv2d(in_channels=154, out_channels=60, kernel_size=5),\n    nn.Linear(in_features=60, out_features=32)\n)", "description": "This neural network takes an input of shape [102] and produces an output of shape [32]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=93, hidden_size=39, batch_first=True)\n)", "description": "This neural network takes an input of shape [90, 221, 93] and produces an output of shape [90, 221, 39]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=123, hidden_size=122, batch_first=True)\n)", "description": "This neural network takes an input of shape [153, 123] and produces an output of shape [153, 122]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=14, out_channels=26, kernel_size=3),\n    nn.GRU(input_size=254, hidden_size=120, batch_first=True),\n    nn.Conv3d(in_channels=26, out_channels=62, kernel_size=4),\n    nn.GRU(input_size=120, hidden_size=128, batch_first=True),\n    nn.Linear(in_features=128, out_features=187),\n    nn.Linear(in_features=187, out_features=22),\n    nn.Linear(in_features=22, out_features=121)\n)", "description": "This neural network takes an input of shape [14, 37, 254] and produces an output of shape [62, 37, 121]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=1, out_channels=9, kernel_size=2),\n    nn.GRU(input_size=112, hidden_size=90, batch_first=True),\n    nn.Linear(in_features=90, out_features=96),\n    nn.LSTM(input_size=96, hidden_size=121, batch_first=True),\n    nn.Conv1d(in_channels=9, out_channels=7, kernel_size=2),\n    nn.LSTM(input_size=121, hidden_size=43, batch_first=True),\n    nn.Conv3d(in_channels=7, out_channels=33, kernel_size=2)\n)", "description": "This neural network takes an input of shape [1, 231, 112] and produces an output of shape [33, 231, 43]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=145, out_channels=33, kernel_size=4),\n    nn.Conv3d(in_channels=33, out_channels=34, kernel_size=5)\n)", "description": "This neural network takes an input of shape [145, 18, 202] and produces an output of shape [34, 18, 202]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=166, out_channels=25, kernel_size=4),\n    nn.Conv2d(in_channels=25, out_channels=42, kernel_size=1),\n    nn.LSTM(input_size=229, hidden_size=118, batch_first=True),\n    nn.Conv3d(in_channels=42, out_channels=32, kernel_size=1),\n    nn.Conv3d(in_channels=32, out_channels=25, kernel_size=3),\n    nn.LSTM(input_size=118, hidden_size=58, batch_first=True)\n)", "description": "This neural network takes an input of shape [166, 229] and produces an output of shape [25, 58]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=140, out_channels=56, kernel_size=3),\n    nn.Conv2d(in_channels=56, out_channels=17, kernel_size=1),\n    nn.Linear(in_features=113, out_features=241)\n)", "description": "This neural network takes an input of shape [140, 113] and produces an output of shape [17, 241]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=141, out_channels=4, kernel_size=1),\n    nn.GRU(input_size=18, hidden_size=15, batch_first=True),\n    nn.Conv2d(in_channels=4, out_channels=59, kernel_size=4),\n    nn.Linear(in_features=15, out_features=59),\n    nn.Conv3d(in_channels=59, out_channels=7, kernel_size=2)\n)", "description": "This neural network takes an input of shape [141, 28, 18] and produces an output of shape [7, 28, 59]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=238, out_channels=29, kernel_size=4),\n    nn.Linear(in_features=59, out_features=204),\n    nn.GRU(input_size=204, hidden_size=54, batch_first=True)\n)", "description": "This neural network takes an input of shape [238, 218, 59] and produces an output of shape [29, 218, 54]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=169, hidden_size=98, batch_first=True),\n    nn.Conv3d(in_channels=139, out_channels=44, kernel_size=5)\n)", "description": "This neural network takes an input of shape [139, 178, 169] and produces an output of shape [44, 178, 98]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=33, out_features=149),\n    nn.Conv2d(in_channels=55, out_channels=50, kernel_size=4),\n    nn.GRU(input_size=149, hidden_size=93, batch_first=True),\n    nn.Conv3d(in_channels=50, out_channels=33, kernel_size=5),\n    nn.Conv2d(in_channels=33, out_channels=55, kernel_size=3),\n    nn.LSTM(input_size=93, hidden_size=92, batch_first=True),\n    nn.GRU(input_size=92, hidden_size=33, batch_first=True),\n    nn.LSTM(input_size=33, hidden_size=72, batch_first=True),\n    nn.Conv1d(in_channels=55, out_channels=52, kernel_size=5),\n    nn.LSTM(input_size=72, hidden_size=5, batch_first=True)\n)", "description": "This neural network takes an input of shape [55, 184, 33] and produces an output of shape [52, 184, 5]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=98, out_channels=39, kernel_size=3),\n    nn.LSTM(input_size=185, hidden_size=9, batch_first=True),\n    nn.Conv2d(in_channels=39, out_channels=40, kernel_size=2),\n    nn.Linear(in_features=9, out_features=9),\n    nn.Conv2d(in_channels=40, out_channels=51, kernel_size=1),\n    nn.Linear(in_features=9, out_features=126),\n    nn.Conv3d(in_channels=51, out_channels=10, kernel_size=2),\n    nn.Conv3d(in_channels=10, out_channels=39, kernel_size=2),\n    nn.LSTM(input_size=126, hidden_size=47, batch_first=True),\n    nn.Conv2d(in_channels=39, out_channels=43, kernel_size=5)\n)", "description": "This neural network takes an input of shape [98, 185] and produces an output of shape [43, 47]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=60, hidden_size=14, batch_first=True)\n)", "description": "This neural network takes an input of shape [60] and produces an output of shape [14]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=48, hidden_size=32, batch_first=True),\n    nn.Conv1d(in_channels=63, out_channels=26, kernel_size=1),\n    nn.Conv1d(in_channels=26, out_channels=56, kernel_size=1),\n    nn.Conv3d(in_channels=56, out_channels=19, kernel_size=3)\n)", "description": "This neural network takes an input of shape [63, 48] and produces an output of shape [19, 32]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=196, out_channels=4, kernel_size=1),\n    nn.Conv3d(in_channels=4, out_channels=33, kernel_size=2),\n    nn.GRU(input_size=33, hidden_size=3, batch_first=True)\n)", "description": "This neural network takes an input of shape [196] and produces an output of shape [3]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=227, hidden_size=47, batch_first=True),\n    nn.Conv2d(in_channels=12, out_channels=30, kernel_size=2),\n    nn.Conv1d(in_channels=30, out_channels=20, kernel_size=1),\n    nn.Linear(in_features=47, out_features=75),\n    nn.GRU(input_size=75, hidden_size=127, batch_first=True),\n    nn.Conv3d(in_channels=20, out_channels=32, kernel_size=1),\n    nn.Conv3d(in_channels=32, out_channels=19, kernel_size=5),\n    nn.LSTM(input_size=127, hidden_size=32, batch_first=True),\n    nn.LSTM(input_size=32, hidden_size=2, batch_first=True)\n)", "description": "This neural network takes an input of shape [12, 6, 227] and produces an output of shape [19, 6, 2]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=158, out_channels=14, kernel_size=4),\n    nn.Conv3d(in_channels=14, out_channels=60, kernel_size=5),\n    nn.GRU(input_size=60, hidden_size=41, batch_first=True),\n    nn.Linear(in_features=41, out_features=137),\n    nn.Conv1d(in_channels=137, out_channels=55, kernel_size=1),\n    nn.Conv2d(in_channels=55, out_channels=49, kernel_size=5),\n    nn.Conv1d(in_channels=49, out_channels=44, kernel_size=3)\n)", "description": "This neural network takes an input of shape [158] and produces an output of shape [44]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=30, hidden_size=63, batch_first=True),\n    nn.Conv3d(in_channels=11, out_channels=29, kernel_size=1)\n)", "description": "This neural network takes an input of shape [11, 30] and produces an output of shape [29, 63]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=28, hidden_size=97, batch_first=True),\n    nn.Conv2d(in_channels=182, out_channels=18, kernel_size=2),\n    nn.LSTM(input_size=97, hidden_size=50, batch_first=True),\n    nn.Conv1d(in_channels=18, out_channels=30, kernel_size=5),\n    nn.Conv3d(in_channels=30, out_channels=61, kernel_size=1),\n    nn.Conv3d(in_channels=61, out_channels=20, kernel_size=5),\n    nn.Linear(in_features=50, out_features=97)\n)", "description": "This neural network takes an input of shape [182, 28] and produces an output of shape [20, 97]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=19, hidden_size=4, batch_first=True),\n    nn.LSTM(input_size=4, hidden_size=61, batch_first=True),\n    nn.GRU(input_size=61, hidden_size=60, batch_first=True)\n)", "description": "This neural network takes an input of shape [111, 19] and produces an output of shape [111, 60]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=245, out_channels=10, kernel_size=4),\n    nn.Conv2d(in_channels=10, out_channels=35, kernel_size=5),\n    nn.Conv2d(in_channels=35, out_channels=38, kernel_size=2),\n    nn.Conv3d(in_channels=38, out_channels=43, kernel_size=1)\n)", "description": "This neural network takes an input of shape [245, 220, 134] and produces an output of shape [43, 220, 134]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=232, hidden_size=56, batch_first=True),\n    nn.Conv1d(in_channels=56, out_channels=27, kernel_size=1),\n    nn.Linear(in_features=27, out_features=2),\n    nn.Conv2d(in_channels=2, out_channels=20, kernel_size=1)\n)", "description": "This neural network takes an input of shape [232] and produces an output of shape [20]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=146, hidden_size=92, batch_first=True),\n    nn.Conv3d(in_channels=87, out_channels=5, kernel_size=4),\n    nn.Conv1d(in_channels=5, out_channels=9, kernel_size=5),\n    nn.Conv2d(in_channels=9, out_channels=29, kernel_size=5),\n    nn.LSTM(input_size=92, hidden_size=63, batch_first=True),\n    nn.Conv3d(in_channels=29, out_channels=63, kernel_size=4),\n    nn.LSTM(input_size=63, hidden_size=103, batch_first=True),\n    nn.Linear(in_features=103, out_features=55),\n    nn.Conv3d(in_channels=63, out_channels=19, kernel_size=3),\n    nn.LSTM(input_size=55, hidden_size=42, batch_first=True)\n)", "description": "This neural network takes an input of shape [87, 146] and produces an output of shape [19, 42]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=52, out_channels=64, kernel_size=5)\n)", "description": "This neural network takes an input of shape [52, 242, 118] and produces an output of shape [64, 242, 118]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=107, out_channels=60, kernel_size=3),\n    nn.Conv3d(in_channels=60, out_channels=42, kernel_size=1),\n    nn.Conv3d(in_channels=42, out_channels=39, kernel_size=5),\n    nn.Conv3d(in_channels=39, out_channels=42, kernel_size=5),\n    nn.Conv2d(in_channels=42, out_channels=49, kernel_size=5),\n    nn.GRU(input_size=49, hidden_size=126, batch_first=True),\n    nn.LSTM(input_size=126, hidden_size=37, batch_first=True)\n)", "description": "This neural network takes an input of shape [107] and produces an output of shape [37]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=200, out_channels=18, kernel_size=1),\n    nn.LSTM(input_size=233, hidden_size=47, batch_first=True),\n    nn.Conv3d(in_channels=18, out_channels=22, kernel_size=4),\n    nn.Conv1d(in_channels=22, out_channels=46, kernel_size=1),\n    nn.GRU(input_size=47, hidden_size=107, batch_first=True),\n    nn.Conv2d(in_channels=46, out_channels=58, kernel_size=3),\n    nn.Conv1d(in_channels=58, out_channels=20, kernel_size=2),\n    nn.Conv1d(in_channels=20, out_channels=25, kernel_size=1),\n    nn.Conv1d(in_channels=25, out_channels=25, kernel_size=5)\n)", "description": "This neural network takes an input of shape [200, 105, 233] and produces an output of shape [25, 105, 107]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=87, out_channels=37, kernel_size=3),\n    nn.GRU(input_size=33, hidden_size=100, batch_first=True),\n    nn.GRU(input_size=100, hidden_size=47, batch_first=True),\n    nn.Linear(in_features=47, out_features=183)\n)", "description": "This neural network takes an input of shape [87, 33] and produces an output of shape [37, 183]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=13, hidden_size=53, batch_first=True),\n    nn.Conv3d(in_channels=198, out_channels=2, kernel_size=1),\n    nn.LSTM(input_size=53, hidden_size=17, batch_first=True),\n    nn.Conv1d(in_channels=2, out_channels=47, kernel_size=1),\n    nn.Linear(in_features=17, out_features=27),\n    nn.Linear(in_features=27, out_features=25),\n    nn.LSTM(input_size=25, hidden_size=83, batch_first=True),\n    nn.Conv1d(in_channels=47, out_channels=9, kernel_size=2)\n)", "description": "This neural network takes an input of shape [198, 212, 13] and produces an output of shape [9, 212, 83]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=158, hidden_size=75, batch_first=True),\n    nn.Conv2d(in_channels=75, out_channels=30, kernel_size=4),\n    nn.Conv2d(in_channels=30, out_channels=26, kernel_size=5),\n    nn.Linear(in_features=26, out_features=177),\n    nn.LSTM(input_size=177, hidden_size=123, batch_first=True)\n)", "description": "This neural network takes an input of shape [158] and produces an output of shape [123]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=82, out_features=46),\n    nn.Conv1d(in_channels=183, out_channels=51, kernel_size=1),\n    nn.GRU(input_size=46, hidden_size=40, batch_first=True),\n    nn.Conv3d(in_channels=51, out_channels=55, kernel_size=3),\n    nn.Conv3d(in_channels=55, out_channels=7, kernel_size=1),\n    nn.LSTM(input_size=40, hidden_size=29, batch_first=True)\n)", "description": "This neural network takes an input of shape [183, 29, 82] and produces an output of shape [7, 29, 29]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=118, out_features=158),\n    nn.LSTM(input_size=158, hidden_size=107, batch_first=True),\n    nn.Conv3d(in_channels=39, out_channels=58, kernel_size=5),\n    nn.LSTM(input_size=107, hidden_size=127, batch_first=True),\n    nn.LSTM(input_size=127, hidden_size=15, batch_first=True),\n    nn.Conv3d(in_channels=58, out_channels=19, kernel_size=3),\n    nn.Conv1d(in_channels=19, out_channels=38, kernel_size=4)\n)", "description": "This neural network takes an input of shape [39, 118] and produces an output of shape [38, 15]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=21, hidden_size=54, batch_first=True),\n    nn.Conv3d(in_channels=147, out_channels=9, kernel_size=3),\n    nn.LSTM(input_size=54, hidden_size=1, batch_first=True),\n    nn.Conv3d(in_channels=9, out_channels=24, kernel_size=1),\n    nn.Conv2d(in_channels=24, out_channels=5, kernel_size=4),\n    nn.Conv1d(in_channels=5, out_channels=53, kernel_size=4),\n    nn.Conv3d(in_channels=53, out_channels=54, kernel_size=4),\n    nn.Conv2d(in_channels=54, out_channels=33, kernel_size=5)\n)", "description": "This neural network takes an input of shape [147, 21] and produces an output of shape [33, 1]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=149, hidden_size=113, batch_first=True),\n    nn.Conv2d(in_channels=113, out_channels=27, kernel_size=5),\n    nn.Conv3d(in_channels=27, out_channels=30, kernel_size=2),\n    nn.Conv2d(in_channels=30, out_channels=39, kernel_size=5),\n    nn.Conv2d(in_channels=39, out_channels=47, kernel_size=1),\n    nn.Linear(in_features=47, out_features=136)\n)", "description": "This neural network takes an input of shape [149] and produces an output of shape [136]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=41, out_channels=39, kernel_size=5),\n    nn.Linear(in_features=39, out_features=255)\n)", "description": "This neural network takes an input of shape [41] and produces an output of shape [255]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=147, out_channels=57, kernel_size=3),\n    nn.Linear(in_features=57, out_features=236),\n    nn.Conv3d(in_channels=236, out_channels=27, kernel_size=4),\n    nn.Conv2d(in_channels=27, out_channels=19, kernel_size=2),\n    nn.Conv1d(in_channels=19, out_channels=33, kernel_size=4),\n    nn.GRU(input_size=33, hidden_size=128, batch_first=True)\n)", "description": "This neural network takes an input of shape [147] and produces an output of shape [128]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=23, out_channels=52, kernel_size=4),\n    nn.Linear(in_features=150, out_features=15),\n    nn.Conv1d(in_channels=52, out_channels=38, kernel_size=5),\n    nn.GRU(input_size=15, hidden_size=44, batch_first=True),\n    nn.Conv1d(in_channels=38, out_channels=9, kernel_size=3),\n    nn.Conv2d(in_channels=9, out_channels=31, kernel_size=2),\n    nn.LSTM(input_size=44, hidden_size=94, batch_first=True),\n    nn.Conv1d(in_channels=31, out_channels=45, kernel_size=5),\n    nn.Linear(in_features=94, out_features=213),\n    nn.Conv3d(in_channels=45, out_channels=33, kernel_size=3)\n)", "description": "This neural network takes an input of shape [23, 150] and produces an output of shape [33, 213]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=41, hidden_size=117, batch_first=True),\n    nn.GRU(input_size=117, hidden_size=125, batch_first=True),\n    nn.Conv3d(in_channels=141, out_channels=36, kernel_size=5),\n    nn.GRU(input_size=125, hidden_size=63, batch_first=True),\n    nn.LSTM(input_size=63, hidden_size=108, batch_first=True),\n    nn.LSTM(input_size=108, hidden_size=82, batch_first=True),\n    nn.GRU(input_size=82, hidden_size=10, batch_first=True),\n    nn.Conv1d(in_channels=36, out_channels=52, kernel_size=1)\n)", "description": "This neural network takes an input of shape [141, 19, 41] and produces an output of shape [52, 19, 10]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=72, out_channels=58, kernel_size=3),\n    nn.Conv2d(in_channels=58, out_channels=46, kernel_size=2),\n    nn.Linear(in_features=64, out_features=126),\n    nn.LSTM(input_size=126, hidden_size=103, batch_first=True),\n    nn.Conv1d(in_channels=46, out_channels=24, kernel_size=2),\n    nn.Conv1d(in_channels=24, out_channels=25, kernel_size=4)\n)", "description": "This neural network takes an input of shape [72, 203, 64] and produces an output of shape [25, 203, 103]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=85, out_channels=3, kernel_size=2),\n    nn.Conv1d(in_channels=3, out_channels=51, kernel_size=5),\n    nn.LSTM(input_size=137, hidden_size=29, batch_first=True),\n    nn.Conv3d(in_channels=51, out_channels=39, kernel_size=1),\n    nn.Conv2d(in_channels=39, out_channels=21, kernel_size=1),\n    nn.Conv1d(in_channels=21, out_channels=45, kernel_size=4)\n)", "description": "This neural network takes an input of shape [85, 90, 137] and produces an output of shape [45, 90, 29]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=231, out_features=12),\n    nn.Conv2d(in_channels=155, out_channels=47, kernel_size=3),\n    nn.GRU(input_size=12, hidden_size=71, batch_first=True),\n    nn.Conv2d(in_channels=47, out_channels=26, kernel_size=3),\n    nn.Conv3d(in_channels=26, out_channels=47, kernel_size=3),\n    nn.GRU(input_size=71, hidden_size=93, batch_first=True)\n)", "description": "This neural network takes an input of shape [155, 231] and produces an output of shape [47, 93]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=163, out_channels=23, kernel_size=1)\n)", "description": "This neural network takes an input of shape [163, 41] and produces an output of shape [23, 41]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=84, hidden_size=60, batch_first=True),\n    nn.GRU(input_size=60, hidden_size=9, batch_first=True),\n    nn.LSTM(input_size=9, hidden_size=127, batch_first=True),\n    nn.Conv3d(in_channels=34, out_channels=45, kernel_size=4),\n    nn.Conv1d(in_channels=45, out_channels=50, kernel_size=2),\n    nn.Conv1d(in_channels=50, out_channels=45, kernel_size=4),\n    nn.Linear(in_features=127, out_features=74),\n    nn.LSTM(input_size=74, hidden_size=17, batch_first=True),\n    nn.LSTM(input_size=17, hidden_size=18, batch_first=True)\n)", "description": "This neural network takes an input of shape [34, 84] and produces an output of shape [45, 18]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=18, hidden_size=81, batch_first=True),\n    nn.LSTM(input_size=81, hidden_size=105, batch_first=True),\n    nn.Conv2d(in_channels=114, out_channels=5, kernel_size=3),\n    nn.Conv1d(in_channels=5, out_channels=31, kernel_size=3),\n    nn.LSTM(input_size=105, hidden_size=5, batch_first=True),\n    nn.Linear(in_features=5, out_features=138),\n    nn.GRU(input_size=138, hidden_size=68, batch_first=True)\n)", "description": "This neural network takes an input of shape [114, 40, 18] and produces an output of shape [31, 40, 68]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=32, out_features=209),\n    nn.Conv2d(in_channels=9, out_channels=28, kernel_size=4),\n    nn.LSTM(input_size=209, hidden_size=124, batch_first=True),\n    nn.Conv3d(in_channels=28, out_channels=27, kernel_size=3),\n    nn.LSTM(input_size=124, hidden_size=85, batch_first=True),\n    nn.LSTM(input_size=85, hidden_size=110, batch_first=True),\n    nn.LSTM(input_size=110, hidden_size=98, batch_first=True),\n    nn.Conv2d(in_channels=27, out_channels=3, kernel_size=3),\n    nn.Conv3d(in_channels=3, out_channels=52, kernel_size=4),\n    nn.LSTM(input_size=98, hidden_size=104, batch_first=True)\n)", "description": "This neural network takes an input of shape [9, 32] and produces an output of shape [52, 104]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=227, out_channels=59, kernel_size=4),\n    nn.GRU(input_size=59, hidden_size=68, batch_first=True),\n    nn.GRU(input_size=68, hidden_size=8, batch_first=True),\n    nn.GRU(input_size=8, hidden_size=14, batch_first=True),\n    nn.Linear(in_features=14, out_features=93),\n    nn.GRU(input_size=93, hidden_size=10, batch_first=True),\n    nn.Conv3d(in_channels=10, out_channels=29, kernel_size=1)\n)", "description": "This neural network takes an input of shape [227] and produces an output of shape [29]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=130, out_channels=25, kernel_size=3),\n    nn.Conv1d(in_channels=25, out_channels=11, kernel_size=3),\n    nn.Conv2d(in_channels=11, out_channels=60, kernel_size=3),\n    nn.LSTM(input_size=80, hidden_size=65, batch_first=True),\n    nn.Conv2d(in_channels=60, out_channels=4, kernel_size=4),\n    nn.Conv1d(in_channels=4, out_channels=60, kernel_size=1),\n    nn.Conv2d(in_channels=60, out_channels=49, kernel_size=4)\n)", "description": "This neural network takes an input of shape [130, 77, 80] and produces an output of shape [49, 77, 65]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=177, hidden_size=105, batch_first=True),\n    nn.Conv3d(in_channels=65, out_channels=21, kernel_size=3),\n    nn.Conv2d(in_channels=21, out_channels=50, kernel_size=5),\n    nn.Conv1d(in_channels=50, out_channels=39, kernel_size=4),\n    nn.Conv3d(in_channels=39, out_channels=54, kernel_size=3),\n    nn.Conv3d(in_channels=54, out_channels=22, kernel_size=1)\n)", "description": "This neural network takes an input of shape [65, 51, 177] and produces an output of shape [22, 51, 105]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=256, hidden_size=94, batch_first=True),\n    nn.LSTM(input_size=94, hidden_size=20, batch_first=True),\n    nn.Conv2d(in_channels=205, out_channels=35, kernel_size=5),\n    nn.LSTM(input_size=20, hidden_size=33, batch_first=True),\n    nn.Conv1d(in_channels=35, out_channels=8, kernel_size=5),\n    nn.LSTM(input_size=33, hidden_size=115, batch_first=True),\n    nn.GRU(input_size=115, hidden_size=114, batch_first=True)\n)", "description": "This neural network takes an input of shape [205, 256] and produces an output of shape [8, 114]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=248, out_channels=59, kernel_size=5),\n    nn.Linear(in_features=59, out_features=3),\n    nn.Conv3d(in_channels=3, out_channels=16, kernel_size=1),\n    nn.Conv1d(in_channels=16, out_channels=35, kernel_size=4),\n    nn.GRU(input_size=35, hidden_size=101, batch_first=True),\n    nn.GRU(input_size=101, hidden_size=50, batch_first=True),\n    nn.Conv1d(in_channels=50, out_channels=39, kernel_size=4),\n    nn.Conv3d(in_channels=39, out_channels=38, kernel_size=4)\n)", "description": "This neural network takes an input of shape [248] and produces an output of shape [38]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=151, out_channels=12, kernel_size=1)\n)", "description": "This neural network takes an input of shape [151] and produces an output of shape [12]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=176, out_channels=43, kernel_size=5),\n    nn.LSTM(input_size=242, hidden_size=36, batch_first=True),\n    nn.Linear(in_features=36, out_features=94),\n    nn.Conv1d(in_channels=43, out_channels=51, kernel_size=3)\n)", "description": "This neural network takes an input of shape [176, 242] and produces an output of shape [51, 94]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=67, out_channels=4, kernel_size=3),\n    nn.Conv2d(in_channels=4, out_channels=52, kernel_size=5),\n    nn.LSTM(input_size=36, hidden_size=115, batch_first=True),\n    nn.Conv2d(in_channels=52, out_channels=58, kernel_size=3),\n    nn.LSTM(input_size=115, hidden_size=86, batch_first=True)\n)", "description": "This neural network takes an input of shape [67, 34, 36] and produces an output of shape [58, 34, 86]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=64, out_channels=55, kernel_size=5),\n    nn.GRU(input_size=208, hidden_size=81, batch_first=True)\n)", "description": "This neural network takes an input of shape [64, 208] and produces an output of shape [55, 81]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=100, out_features=108),\n    nn.LSTM(input_size=108, hidden_size=62, batch_first=True),\n    nn.GRU(input_size=62, hidden_size=84, batch_first=True)\n)", "description": "This neural network takes an input of shape [119, 237, 100] and produces an output of shape [119, 237, 84]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=142, hidden_size=41, batch_first=True),\n    nn.Conv2d(in_channels=137, out_channels=46, kernel_size=2),\n    nn.Conv3d(in_channels=46, out_channels=9, kernel_size=1),\n    nn.Conv3d(in_channels=9, out_channels=7, kernel_size=2),\n    nn.LSTM(input_size=41, hidden_size=10, batch_first=True)\n)", "description": "This neural network takes an input of shape [137, 142] and produces an output of shape [7, 10]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=99, out_channels=21, kernel_size=2),\n    nn.LSTM(input_size=130, hidden_size=46, batch_first=True),\n    nn.Conv3d(in_channels=21, out_channels=2, kernel_size=1),\n    nn.GRU(input_size=46, hidden_size=55, batch_first=True)\n)", "description": "This neural network takes an input of shape [99, 178, 130] and produces an output of shape [2, 178, 55]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=12, out_channels=17, kernel_size=1),\n    nn.Conv2d(in_channels=17, out_channels=56, kernel_size=5),\n    nn.LSTM(input_size=56, hidden_size=43, batch_first=True),\n    nn.LSTM(input_size=43, hidden_size=58, batch_first=True),\n    nn.Conv3d(in_channels=58, out_channels=32, kernel_size=1),\n    nn.Linear(in_features=32, out_features=136),\n    nn.Conv3d(in_channels=136, out_channels=25, kernel_size=4)\n)", "description": "This neural network takes an input of shape [12] and produces an output of shape [25]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=168, out_channels=11, kernel_size=4),\n    nn.Conv2d(in_channels=11, out_channels=40, kernel_size=2),\n    nn.LSTM(input_size=240, hidden_size=52, batch_first=True),\n    nn.LSTM(input_size=52, hidden_size=1, batch_first=True),\n    nn.Conv2d(in_channels=40, out_channels=26, kernel_size=3),\n    nn.Conv1d(in_channels=26, out_channels=18, kernel_size=4),\n    nn.Linear(in_features=1, out_features=81),\n    nn.Conv3d(in_channels=18, out_channels=49, kernel_size=5),\n    nn.Conv1d(in_channels=49, out_channels=14, kernel_size=5)\n)", "description": "This neural network takes an input of shape [168, 240] and produces an output of shape [14, 81]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=252, out_channels=20, kernel_size=5),\n    nn.Conv2d(in_channels=20, out_channels=11, kernel_size=1),\n    nn.LSTM(input_size=118, hidden_size=36, batch_first=True),\n    nn.Linear(in_features=36, out_features=174),\n    nn.Conv3d(in_channels=11, out_channels=33, kernel_size=5),\n    nn.Conv2d(in_channels=33, out_channels=47, kernel_size=2),\n    nn.LSTM(input_size=174, hidden_size=28, batch_first=True),\n    nn.Conv3d(in_channels=47, out_channels=5, kernel_size=5),\n    nn.Conv2d(in_channels=5, out_channels=50, kernel_size=3),\n    nn.GRU(input_size=28, hidden_size=109, batch_first=True)\n)", "description": "This neural network takes an input of shape [252, 118] and produces an output of shape [50, 109]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=37, hidden_size=88, batch_first=True),\n    nn.Linear(in_features=88, out_features=233),\n    nn.LSTM(input_size=233, hidden_size=7, batch_first=True),\n    nn.Linear(in_features=7, out_features=113),\n    nn.GRU(input_size=113, hidden_size=7, batch_first=True)\n)", "description": "This neural network takes an input of shape [37] and produces an output of shape [7]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=147, out_features=249),\n    nn.Linear(in_features=249, out_features=161),\n    nn.GRU(input_size=161, hidden_size=8, batch_first=True),\n    nn.GRU(input_size=8, hidden_size=115, batch_first=True),\n    nn.LSTM(input_size=115, hidden_size=75, batch_first=True),\n    nn.Conv2d(in_channels=75, out_channels=52, kernel_size=1),\n    nn.Linear(in_features=52, out_features=93)\n)", "description": "This neural network takes an input of shape [147] and produces an output of shape [93]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=199, out_features=95),\n    nn.GRU(input_size=95, hidden_size=66, batch_first=True),\n    nn.GRU(input_size=66, hidden_size=104, batch_first=True)\n)", "description": "This neural network takes an input of shape [190, 199] and produces an output of shape [190, 104]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=142, out_features=118),\n    nn.Conv2d(in_channels=112, out_channels=55, kernel_size=4),\n    nn.LSTM(input_size=118, hidden_size=44, batch_first=True),\n    nn.Linear(in_features=44, out_features=184),\n    nn.Conv2d(in_channels=55, out_channels=19, kernel_size=5),\n    nn.GRU(input_size=184, hidden_size=111, batch_first=True),\n    nn.Conv3d(in_channels=19, out_channels=24, kernel_size=3)\n)", "description": "This neural network takes an input of shape [112, 188, 142] and produces an output of shape [24, 188, 111]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=53, out_features=11),\n    nn.LSTM(input_size=11, hidden_size=10, batch_first=True),\n    nn.LSTM(input_size=10, hidden_size=106, batch_first=True),\n    nn.GRU(input_size=106, hidden_size=116, batch_first=True),\n    nn.Conv2d(in_channels=113, out_channels=9, kernel_size=1),\n    nn.Conv2d(in_channels=9, out_channels=2, kernel_size=1),\n    nn.LSTM(input_size=116, hidden_size=26, batch_first=True),\n    nn.Conv3d(in_channels=2, out_channels=3, kernel_size=3),\n    nn.Conv1d(in_channels=3, out_channels=14, kernel_size=4)\n)", "description": "This neural network takes an input of shape [113, 53] and produces an output of shape [14, 26]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=226, hidden_size=37, batch_first=True),\n    nn.Conv1d(in_channels=219, out_channels=35, kernel_size=5),\n    nn.Conv1d(in_channels=35, out_channels=47, kernel_size=5),\n    nn.GRU(input_size=37, hidden_size=20, batch_first=True),\n    nn.LSTM(input_size=20, hidden_size=12, batch_first=True)\n)", "description": "This neural network takes an input of shape [219, 226] and produces an output of shape [47, 12]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=37, out_features=167),\n    nn.GRU(input_size=167, hidden_size=116, batch_first=True),\n    nn.Linear(in_features=116, out_features=20),\n    nn.Conv2d(in_channels=232, out_channels=15, kernel_size=2),\n    nn.Conv3d(in_channels=15, out_channels=17, kernel_size=5),\n    nn.Conv2d(in_channels=17, out_channels=34, kernel_size=5)\n)", "description": "This neural network takes an input of shape [232, 32, 37] and produces an output of shape [34, 32, 20]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=204, out_channels=17, kernel_size=3),\n    nn.Conv1d(in_channels=17, out_channels=49, kernel_size=5)\n)", "description": "This neural network takes an input of shape [204, 16] and produces an output of shape [49, 16]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=9, out_channels=56, kernel_size=4),\n    nn.GRU(input_size=56, hidden_size=113, batch_first=True),\n    nn.Conv3d(in_channels=113, out_channels=46, kernel_size=1)\n)", "description": "This neural network takes an input of shape [9] and produces an output of shape [46]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=86, out_channels=12, kernel_size=2),\n    nn.Conv3d(in_channels=12, out_channels=21, kernel_size=2)\n)", "description": "This neural network takes an input of shape [86] and produces an output of shape [21]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=46, out_channels=1, kernel_size=4),\n    nn.Conv1d(in_channels=1, out_channels=14, kernel_size=2)\n)", "description": "This neural network takes an input of shape [46] and produces an output of shape [14]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=111, hidden_size=69, batch_first=True),\n    nn.Conv3d(in_channels=212, out_channels=3, kernel_size=5),\n    nn.Conv1d(in_channels=3, out_channels=45, kernel_size=2),\n    nn.Conv1d(in_channels=45, out_channels=33, kernel_size=4)\n)", "description": "This neural network takes an input of shape [212, 136, 111] and produces an output of shape [33, 136, 69]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=99, hidden_size=42, batch_first=True)\n)", "description": "This neural network takes an input of shape [129, 225, 99] and produces an output of shape [129, 225, 42]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=154, out_channels=5, kernel_size=3),\n    nn.LSTM(input_size=5, hidden_size=108, batch_first=True),\n    nn.LSTM(input_size=108, hidden_size=25, batch_first=True)\n)", "description": "This neural network takes an input of shape [154] and produces an output of shape [25]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=151, hidden_size=33, batch_first=True),\n    nn.Conv2d(in_channels=153, out_channels=15, kernel_size=3)\n)", "description": "This neural network takes an input of shape [153, 124, 151] and produces an output of shape [15, 124, 33]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=242, out_features=88),\n    nn.Conv2d(in_channels=192, out_channels=57, kernel_size=5),\n    nn.Conv1d(in_channels=57, out_channels=32, kernel_size=3),\n    nn.Conv2d(in_channels=32, out_channels=52, kernel_size=3),\n    nn.Conv2d(in_channels=52, out_channels=32, kernel_size=5),\n    nn.Linear(in_features=88, out_features=157),\n    nn.Linear(in_features=157, out_features=239),\n    nn.Linear(in_features=239, out_features=219),\n    nn.Conv1d(in_channels=32, out_channels=50, kernel_size=2),\n    nn.Conv2d(in_channels=50, out_channels=44, kernel_size=4)\n)", "description": "This neural network takes an input of shape [192, 39, 242] and produces an output of shape [44, 39, 219]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=149, out_channels=13, kernel_size=2),\n    nn.Conv1d(in_channels=13, out_channels=29, kernel_size=5),\n    nn.Conv2d(in_channels=29, out_channels=21, kernel_size=3)\n)", "description": "This neural network takes an input of shape [149, 48] and produces an output of shape [21, 48]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=114, out_channels=46, kernel_size=2),\n    nn.GRU(input_size=228, hidden_size=73, batch_first=True),\n    nn.Linear(in_features=73, out_features=43),\n    nn.Linear(in_features=43, out_features=95),\n    nn.Conv3d(in_channels=46, out_channels=35, kernel_size=1),\n    nn.LSTM(input_size=95, hidden_size=12, batch_first=True),\n    nn.Conv1d(in_channels=35, out_channels=63, kernel_size=3),\n    nn.Conv3d(in_channels=63, out_channels=41, kernel_size=4),\n    nn.Conv1d(in_channels=41, out_channels=20, kernel_size=1),\n    nn.Conv3d(in_channels=20, out_channels=38, kernel_size=5)\n)", "description": "This neural network takes an input of shape [114, 228] and produces an output of shape [38, 12]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=39, out_channels=61, kernel_size=4),\n    nn.GRU(input_size=61, hidden_size=115, batch_first=True),\n    nn.Conv3d(in_channels=115, out_channels=13, kernel_size=5),\n    nn.Conv1d(in_channels=13, out_channels=27, kernel_size=2),\n    nn.GRU(input_size=27, hidden_size=14, batch_first=True),\n    nn.Linear(in_features=14, out_features=113),\n    nn.LSTM(input_size=113, hidden_size=7, batch_first=True),\n    nn.Linear(in_features=7, out_features=7),\n    nn.Conv1d(in_channels=7, out_channels=44, kernel_size=4),\n    nn.Conv3d(in_channels=44, out_channels=56, kernel_size=1)\n)", "description": "This neural network takes an input of shape [39] and produces an output of shape [56]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=62, hidden_size=96, batch_first=True)\n)", "description": "This neural network takes an input of shape [72, 179, 62] and produces an output of shape [72, 179, 96]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=138, out_channels=9, kernel_size=1),\n    nn.Conv1d(in_channels=9, out_channels=5, kernel_size=4),\n    nn.GRU(input_size=162, hidden_size=117, batch_first=True),\n    nn.Conv3d(in_channels=5, out_channels=55, kernel_size=5),\n    nn.Conv3d(in_channels=55, out_channels=37, kernel_size=2),\n    nn.Conv1d(in_channels=37, out_channels=36, kernel_size=2),\n    nn.LSTM(input_size=117, hidden_size=62, batch_first=True)\n)", "description": "This neural network takes an input of shape [138, 33, 162] and produces an output of shape [36, 33, 62]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=21, hidden_size=29, batch_first=True),\n    nn.Conv2d(in_channels=226, out_channels=44, kernel_size=3),\n    nn.Conv1d(in_channels=44, out_channels=11, kernel_size=4),\n    nn.LSTM(input_size=29, hidden_size=97, batch_first=True),\n    nn.Conv3d(in_channels=11, out_channels=42, kernel_size=3)\n)", "description": "This neural network takes an input of shape [226, 21] and produces an output of shape [42, 97]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=139, out_channels=32, kernel_size=1),\n    nn.LSTM(input_size=162, hidden_size=25, batch_first=True),\n    nn.GRU(input_size=25, hidden_size=53, batch_first=True)\n)", "description": "This neural network takes an input of shape [139, 162] and produces an output of shape [32, 53]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=250, out_channels=21, kernel_size=2),\n    nn.Conv2d(in_channels=21, out_channels=62, kernel_size=2),\n    nn.Conv1d(in_channels=62, out_channels=22, kernel_size=1),\n    nn.Conv2d(in_channels=22, out_channels=35, kernel_size=2),\n    nn.Conv1d(in_channels=35, out_channels=5, kernel_size=1),\n    nn.Conv3d(in_channels=5, out_channels=27, kernel_size=4),\n    nn.Linear(in_features=233, out_features=164)\n)", "description": "This neural network takes an input of shape [250, 233] and produces an output of shape [27, 164]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=176, out_channels=45, kernel_size=5),\n    nn.GRU(input_size=165, hidden_size=9, batch_first=True),\n    nn.Conv3d(in_channels=45, out_channels=15, kernel_size=1),\n    nn.Conv1d(in_channels=15, out_channels=19, kernel_size=4)\n)", "description": "This neural network takes an input of shape [176, 165] and produces an output of shape [19, 9]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=232, out_features=54),\n    nn.GRU(input_size=54, hidden_size=98, batch_first=True),\n    nn.GRU(input_size=98, hidden_size=56, batch_first=True)\n)", "description": "This neural network takes an input of shape [2, 232] and produces an output of shape [2, 56]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=137, out_channels=47, kernel_size=5)\n)", "description": "This neural network takes an input of shape [137] and produces an output of shape [47]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=247, out_channels=34, kernel_size=1),\n    nn.GRU(input_size=34, hidden_size=110, batch_first=True),\n    nn.LSTM(input_size=110, hidden_size=68, batch_first=True),\n    nn.Conv1d(in_channels=68, out_channels=35, kernel_size=1),\n    nn.GRU(input_size=35, hidden_size=30, batch_first=True),\n    nn.Conv2d(in_channels=30, out_channels=26, kernel_size=4),\n    nn.Conv1d(in_channels=26, out_channels=10, kernel_size=2)\n)", "description": "This neural network takes an input of shape [247] and produces an output of shape [10]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=246, out_channels=25, kernel_size=3),\n    nn.LSTM(input_size=25, hidden_size=27, batch_first=True),\n    nn.GRU(input_size=27, hidden_size=26, batch_first=True),\n    nn.Linear(in_features=26, out_features=142),\n    nn.Linear(in_features=142, out_features=3),\n    nn.GRU(input_size=3, hidden_size=12, batch_first=True),\n    nn.Conv3d(in_channels=12, out_channels=47, kernel_size=2),\n    nn.Conv1d(in_channels=47, out_channels=16, kernel_size=4)\n)", "description": "This neural network takes an input of shape [246] and produces an output of shape [16]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=139, hidden_size=106, batch_first=True),\n    nn.Conv3d(in_channels=76, out_channels=5, kernel_size=3),\n    nn.Conv2d(in_channels=5, out_channels=58, kernel_size=4)\n)", "description": "This neural network takes an input of shape [76, 112, 139] and produces an output of shape [58, 112, 106]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=171, out_channels=46, kernel_size=1),\n    nn.Conv2d(in_channels=46, out_channels=61, kernel_size=5),\n    nn.Conv2d(in_channels=61, out_channels=60, kernel_size=5),\n    nn.Conv1d(in_channels=60, out_channels=52, kernel_size=5),\n    nn.GRU(input_size=43, hidden_size=124, batch_first=True),\n    nn.Linear(in_features=124, out_features=39),\n    nn.Conv1d(in_channels=52, out_channels=28, kernel_size=4),\n    nn.Conv1d(in_channels=28, out_channels=14, kernel_size=4),\n    nn.Conv3d(in_channels=14, out_channels=4, kernel_size=4),\n    nn.Conv2d(in_channels=4, out_channels=27, kernel_size=2)\n)", "description": "This neural network takes an input of shape [171, 43] and produces an output of shape [27, 39]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=128, hidden_size=82, batch_first=True),\n    nn.LSTM(input_size=82, hidden_size=9, batch_first=True)\n)", "description": "This neural network takes an input of shape [126, 128] and produces an output of shape [126, 9]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=16, out_channels=55, kernel_size=1),\n    nn.Linear(in_features=55, out_features=190),\n    nn.Conv1d(in_channels=190, out_channels=25, kernel_size=3),\n    nn.Conv3d(in_channels=25, out_channels=57, kernel_size=3),\n    nn.Conv1d(in_channels=57, out_channels=1, kernel_size=3),\n    nn.Conv1d(in_channels=1, out_channels=2, kernel_size=2),\n    nn.Conv1d(in_channels=2, out_channels=18, kernel_size=4)\n)", "description": "This neural network takes an input of shape [16] and produces an output of shape [18]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=243, out_channels=11, kernel_size=5),\n    nn.Linear(in_features=11, out_features=108),\n    nn.GRU(input_size=108, hidden_size=64, batch_first=True),\n    nn.GRU(input_size=64, hidden_size=125, batch_first=True),\n    nn.GRU(input_size=125, hidden_size=23, batch_first=True),\n    nn.Conv2d(in_channels=23, out_channels=64, kernel_size=4),\n    nn.GRU(input_size=64, hidden_size=24, batch_first=True),\n    nn.GRU(input_size=24, hidden_size=64, batch_first=True),\n    nn.Conv2d(in_channels=64, out_channels=1, kernel_size=4)\n)", "description": "This neural network takes an input of shape [243] and produces an output of shape [1]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=155, out_channels=25, kernel_size=4),\n    nn.Conv2d(in_channels=25, out_channels=48, kernel_size=3),\n    nn.GRU(input_size=30, hidden_size=120, batch_first=True),\n    nn.Conv3d(in_channels=48, out_channels=35, kernel_size=2),\n    nn.LSTM(input_size=120, hidden_size=40, batch_first=True),\n    nn.LSTM(input_size=40, hidden_size=32, batch_first=True)\n)", "description": "This neural network takes an input of shape [155, 127, 30] and produces an output of shape [35, 127, 32]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=178, out_channels=57, kernel_size=4),\n    nn.LSTM(input_size=57, hidden_size=109, batch_first=True),\n    nn.Conv3d(in_channels=109, out_channels=3, kernel_size=4)\n)", "description": "This neural network takes an input of shape [178] and produces an output of shape [3]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=168, out_channels=64, kernel_size=4),\n    nn.GRU(input_size=115, hidden_size=58, batch_first=True),\n    nn.Conv2d(in_channels=64, out_channels=37, kernel_size=2),\n    nn.GRU(input_size=58, hidden_size=89, batch_first=True),\n    nn.Conv3d(in_channels=37, out_channels=30, kernel_size=1)\n)", "description": "This neural network takes an input of shape [168, 115] and produces an output of shape [30, 89]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=241, out_channels=40, kernel_size=2),\n    nn.LSTM(input_size=24, hidden_size=73, batch_first=True),\n    nn.GRU(input_size=73, hidden_size=85, batch_first=True),\n    nn.Conv3d(in_channels=40, out_channels=8, kernel_size=3),\n    nn.GRU(input_size=85, hidden_size=38, batch_first=True)\n)", "description": "This neural network takes an input of shape [241, 101, 24] and produces an output of shape [8, 101, 38]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=23, out_features=101),\n    nn.Conv1d(in_channels=228, out_channels=26, kernel_size=3),\n    nn.GRU(input_size=101, hidden_size=55, batch_first=True),\n    nn.Conv2d(in_channels=26, out_channels=26, kernel_size=3)\n)", "description": "This neural network takes an input of shape [228, 150, 23] and produces an output of shape [26, 150, 55]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=106, out_channels=28, kernel_size=5),\n    nn.Conv3d(in_channels=28, out_channels=63, kernel_size=1),\n    nn.Conv3d(in_channels=63, out_channels=12, kernel_size=3),\n    nn.Conv2d(in_channels=12, out_channels=30, kernel_size=3)\n)", "description": "This neural network takes an input of shape [106, 133] and produces an output of shape [30, 133]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=3, out_channels=25, kernel_size=2),\n    nn.GRU(input_size=25, hidden_size=20, batch_first=True),\n    nn.Conv1d(in_channels=20, out_channels=7, kernel_size=4)\n)", "description": "This neural network takes an input of shape [3] and produces an output of shape [7]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=120, out_channels=45, kernel_size=4)\n)", "description": "This neural network takes an input of shape [120, 191, 175] and produces an output of shape [45, 191, 175]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=237, out_channels=29, kernel_size=5),\n    nn.GRU(input_size=29, hidden_size=112, batch_first=True),\n    nn.Linear(in_features=112, out_features=63),\n    nn.Conv3d(in_channels=63, out_channels=19, kernel_size=3),\n    nn.LSTM(input_size=19, hidden_size=39, batch_first=True),\n    nn.Conv2d(in_channels=39, out_channels=55, kernel_size=2),\n    nn.Conv1d(in_channels=55, out_channels=45, kernel_size=2),\n    nn.Linear(in_features=45, out_features=5),\n    nn.Linear(in_features=5, out_features=229),\n    nn.Conv1d(in_channels=229, out_channels=23, kernel_size=2)\n)", "description": "This neural network takes an input of shape [237] and produces an output of shape [23]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=85, out_channels=55, kernel_size=1),\n    nn.Conv2d(in_channels=55, out_channels=9, kernel_size=2),\n    nn.GRU(input_size=9, hidden_size=39, batch_first=True),\n    nn.LSTM(input_size=39, hidden_size=19, batch_first=True),\n    nn.Conv3d(in_channels=19, out_channels=17, kernel_size=1),\n    nn.Conv3d(in_channels=17, out_channels=11, kernel_size=2)\n)", "description": "This neural network takes an input of shape [85] and produces an output of shape [11]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=191, hidden_size=51, batch_first=True),\n    nn.Conv1d(in_channels=87, out_channels=35, kernel_size=2)\n)", "description": "This neural network takes an input of shape [87, 191] and produces an output of shape [35, 51]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=57, out_features=224),\n    nn.LSTM(input_size=224, hidden_size=63, batch_first=True),\n    nn.Conv1d(in_channels=44, out_channels=2, kernel_size=2),\n    nn.Conv3d(in_channels=2, out_channels=35, kernel_size=4),\n    nn.Conv3d(in_channels=35, out_channels=49, kernel_size=4),\n    nn.GRU(input_size=63, hidden_size=116, batch_first=True),\n    nn.Conv3d(in_channels=49, out_channels=16, kernel_size=3),\n    nn.GRU(input_size=116, hidden_size=98, batch_first=True),\n    nn.LSTM(input_size=98, hidden_size=86, batch_first=True),\n    nn.Linear(in_features=86, out_features=142)\n)", "description": "This neural network takes an input of shape [44, 57] and produces an output of shape [16, 142]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=7, out_channels=46, kernel_size=1),\n    nn.Conv1d(in_channels=46, out_channels=46, kernel_size=1),\n    nn.Linear(in_features=46, out_features=142),\n    nn.GRU(input_size=142, hidden_size=108, batch_first=True),\n    nn.LSTM(input_size=108, hidden_size=25, batch_first=True),\n    nn.Conv1d(in_channels=25, out_channels=50, kernel_size=3),\n    nn.Conv1d(in_channels=50, out_channels=16, kernel_size=1),\n    nn.GRU(input_size=16, hidden_size=62, batch_first=True),\n    nn.Conv2d(in_channels=62, out_channels=19, kernel_size=4)\n)", "description": "This neural network takes an input of shape [7] and produces an output of shape [19]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=79, out_channels=34, kernel_size=2),\n    nn.Linear(in_features=13, out_features=7),\n    nn.Conv3d(in_channels=34, out_channels=41, kernel_size=4),\n    nn.Conv3d(in_channels=41, out_channels=19, kernel_size=3),\n    nn.Conv3d(in_channels=19, out_channels=22, kernel_size=1),\n    nn.GRU(input_size=7, hidden_size=42, batch_first=True),\n    nn.Conv2d(in_channels=22, out_channels=46, kernel_size=2),\n    nn.Linear(in_features=42, out_features=229),\n    nn.LSTM(input_size=229, hidden_size=24, batch_first=True),\n    nn.Linear(in_features=24, out_features=27)\n)", "description": "This neural network takes an input of shape [79, 213, 13] and produces an output of shape [46, 213, 27]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=18, hidden_size=43, batch_first=True),\n    nn.Linear(in_features=43, out_features=120),\n    nn.Conv2d(in_channels=235, out_channels=23, kernel_size=4),\n    nn.Conv3d(in_channels=23, out_channels=9, kernel_size=5)\n)", "description": "This neural network takes an input of shape [235, 148, 18] and produces an output of shape [9, 148, 120]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=180, out_features=245),\n    nn.Conv3d(in_channels=245, out_channels=16, kernel_size=2),\n    nn.GRU(input_size=16, hidden_size=102, batch_first=True),\n    nn.LSTM(input_size=102, hidden_size=77, batch_first=True),\n    nn.Linear(in_features=77, out_features=151),\n    nn.GRU(input_size=151, hidden_size=62, batch_first=True)\n)", "description": "This neural network takes an input of shape [180] and produces an output of shape [62]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=54, out_channels=16, kernel_size=1),\n    nn.Linear(in_features=54, out_features=193)\n)", "description": "This neural network takes an input of shape [54, 54] and produces an output of shape [16, 193]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=76, out_channels=54, kernel_size=4),\n    nn.Conv2d(in_channels=54, out_channels=46, kernel_size=5),\n    nn.LSTM(input_size=251, hidden_size=67, batch_first=True),\n    nn.Conv3d(in_channels=46, out_channels=11, kernel_size=1),\n    nn.Linear(in_features=67, out_features=252),\n    nn.Conv1d(in_channels=11, out_channels=28, kernel_size=5),\n    nn.LSTM(input_size=252, hidden_size=49, batch_first=True),\n    nn.Conv2d(in_channels=28, out_channels=36, kernel_size=2),\n    nn.Linear(in_features=49, out_features=107)\n)", "description": "This neural network takes an input of shape [76, 251] and produces an output of shape [36, 107]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=73, hidden_size=32, batch_first=True),\n    nn.GRU(input_size=32, hidden_size=13, batch_first=True),\n    nn.Linear(in_features=13, out_features=150),\n    nn.Conv1d(in_channels=35, out_channels=2, kernel_size=4),\n    nn.LSTM(input_size=150, hidden_size=33, batch_first=True),\n    nn.GRU(input_size=33, hidden_size=68, batch_first=True)\n)", "description": "This neural network takes an input of shape [35, 73] and produces an output of shape [2, 68]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=86, out_channels=62, kernel_size=2),\n    nn.Linear(in_features=62, out_features=107),\n    nn.Conv1d(in_channels=107, out_channels=30, kernel_size=1),\n    nn.LSTM(input_size=30, hidden_size=106, batch_first=True),\n    nn.Conv3d(in_channels=106, out_channels=36, kernel_size=5),\n    nn.GRU(input_size=36, hidden_size=5, batch_first=True),\n    nn.Conv1d(in_channels=5, out_channels=10, kernel_size=3)\n)", "description": "This neural network takes an input of shape [86] and produces an output of shape [10]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=112, out_features=158),\n    nn.Conv2d(in_channels=251, out_channels=51, kernel_size=4),\n    nn.GRU(input_size=158, hidden_size=78, batch_first=True),\n    nn.Conv3d(in_channels=51, out_channels=17, kernel_size=1),\n    nn.Conv3d(in_channels=17, out_channels=32, kernel_size=3)\n)", "description": "This neural network takes an input of shape [251, 75, 112] and produces an output of shape [32, 75, 78]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=10, hidden_size=117, batch_first=True),\n    nn.LSTM(input_size=117, hidden_size=11, batch_first=True),\n    nn.Conv1d(in_channels=11, out_channels=6, kernel_size=3),\n    nn.Conv1d(in_channels=6, out_channels=14, kernel_size=3),\n    nn.Conv2d(in_channels=14, out_channels=58, kernel_size=2),\n    nn.Conv1d(in_channels=58, out_channels=22, kernel_size=5),\n    nn.Conv1d(in_channels=22, out_channels=35, kernel_size=1),\n    nn.LSTM(input_size=35, hidden_size=68, batch_first=True),\n    nn.Conv3d(in_channels=68, out_channels=63, kernel_size=4),\n    nn.Conv2d(in_channels=63, out_channels=52, kernel_size=2)\n)", "description": "This neural network takes an input of shape [10] and produces an output of shape [52]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=103, hidden_size=59, batch_first=True),\n    nn.GRU(input_size=59, hidden_size=97, batch_first=True),\n    nn.Conv1d(in_channels=254, out_channels=48, kernel_size=2),\n    nn.Linear(in_features=97, out_features=188),\n    nn.Conv1d(in_channels=48, out_channels=64, kernel_size=2)\n)", "description": "This neural network takes an input of shape [254, 103] and produces an output of shape [64, 188]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=30, out_channels=34, kernel_size=4),\n    nn.Linear(in_features=174, out_features=74),\n    nn.Conv2d(in_channels=34, out_channels=35, kernel_size=3),\n    nn.Conv3d(in_channels=35, out_channels=61, kernel_size=2),\n    nn.Conv2d(in_channels=61, out_channels=48, kernel_size=2),\n    nn.Conv2d(in_channels=48, out_channels=3, kernel_size=3),\n    nn.Conv1d(in_channels=3, out_channels=10, kernel_size=5),\n    nn.GRU(input_size=74, hidden_size=14, batch_first=True)\n)", "description": "This neural network takes an input of shape [30, 3, 174] and produces an output of shape [10, 3, 14]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=99, out_channels=1, kernel_size=3),\n    nn.Linear(in_features=56, out_features=201),\n    nn.Conv1d(in_channels=1, out_channels=52, kernel_size=3),\n    nn.Conv2d(in_channels=52, out_channels=43, kernel_size=5),\n    nn.GRU(input_size=201, hidden_size=45, batch_first=True),\n    nn.LSTM(input_size=45, hidden_size=80, batch_first=True),\n    nn.Conv1d(in_channels=43, out_channels=21, kernel_size=1),\n    nn.Conv1d(in_channels=21, out_channels=41, kernel_size=2),\n    nn.Conv1d(in_channels=41, out_channels=57, kernel_size=1),\n    nn.Conv2d(in_channels=57, out_channels=50, kernel_size=3)\n)", "description": "This neural network takes an input of shape [99, 56] and produces an output of shape [50, 80]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=76, out_channels=51, kernel_size=3),\n    nn.Linear(in_features=230, out_features=56),\n    nn.Conv3d(in_channels=51, out_channels=50, kernel_size=3),\n    nn.Conv2d(in_channels=50, out_channels=11, kernel_size=4),\n    nn.LSTM(input_size=56, hidden_size=93, batch_first=True),\n    nn.Conv1d(in_channels=11, out_channels=31, kernel_size=3),\n    nn.Conv3d(in_channels=31, out_channels=36, kernel_size=4),\n    nn.Conv2d(in_channels=36, out_channels=41, kernel_size=4),\n    nn.LSTM(input_size=93, hidden_size=13, batch_first=True)\n)", "description": "This neural network takes an input of shape [76, 185, 230] and produces an output of shape [41, 185, 13]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=31, hidden_size=64, batch_first=True),\n    nn.GRU(input_size=64, hidden_size=104, batch_first=True),\n    nn.Conv1d(in_channels=225, out_channels=46, kernel_size=3),\n    nn.GRU(input_size=104, hidden_size=51, batch_first=True),\n    nn.LSTM(input_size=51, hidden_size=68, batch_first=True),\n    nn.Conv3d(in_channels=46, out_channels=14, kernel_size=5),\n    nn.Conv3d(in_channels=14, out_channels=54, kernel_size=5),\n    nn.Conv3d(in_channels=54, out_channels=50, kernel_size=2)\n)", "description": "This neural network takes an input of shape [225, 31] and produces an output of shape [50, 68]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=124, out_channels=31, kernel_size=2),\n    nn.Linear(in_features=136, out_features=116),\n    nn.Linear(in_features=116, out_features=38),\n    nn.GRU(input_size=38, hidden_size=68, batch_first=True),\n    nn.LSTM(input_size=68, hidden_size=120, batch_first=True)\n)", "description": "This neural network takes an input of shape [124, 136] and produces an output of shape [31, 120]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=110, hidden_size=96, batch_first=True),\n    nn.GRU(input_size=96, hidden_size=48, batch_first=True),\n    nn.Conv3d(in_channels=48, out_channels=38, kernel_size=3),\n    nn.Conv3d(in_channels=38, out_channels=23, kernel_size=4),\n    nn.LSTM(input_size=23, hidden_size=67, batch_first=True)\n)", "description": "This neural network takes an input of shape [110] and produces an output of shape [67]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=252, hidden_size=61, batch_first=True),\n    nn.Conv2d(in_channels=65, out_channels=17, kernel_size=4),\n    nn.Conv2d(in_channels=17, out_channels=31, kernel_size=2),\n    nn.Conv2d(in_channels=31, out_channels=44, kernel_size=4),\n    nn.Conv2d(in_channels=44, out_channels=2, kernel_size=2),\n    nn.Linear(in_features=61, out_features=6)\n)", "description": "This neural network takes an input of shape [65, 252] and produces an output of shape [2, 6]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=63, out_channels=16, kernel_size=5),\n    nn.Conv1d(in_channels=16, out_channels=50, kernel_size=3),\n    nn.LSTM(input_size=62, hidden_size=112, batch_first=True),\n    nn.GRU(input_size=112, hidden_size=30, batch_first=True),\n    nn.Conv1d(in_channels=50, out_channels=23, kernel_size=4),\n    nn.GRU(input_size=30, hidden_size=113, batch_first=True),\n    nn.Conv2d(in_channels=23, out_channels=52, kernel_size=4),\n    nn.Linear(in_features=113, out_features=36),\n    nn.Conv3d(in_channels=52, out_channels=17, kernel_size=4),\n    nn.Conv2d(in_channels=17, out_channels=36, kernel_size=5)\n)", "description": "This neural network takes an input of shape [63, 62] and produces an output of shape [36, 36]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=34, out_channels=39, kernel_size=2)\n)", "description": "This neural network takes an input of shape [34] and produces an output of shape [39]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=212, out_channels=45, kernel_size=4),\n    nn.GRU(input_size=224, hidden_size=96, batch_first=True),\n    nn.Conv3d(in_channels=45, out_channels=55, kernel_size=5),\n    nn.GRU(input_size=96, hidden_size=90, batch_first=True),\n    nn.Conv2d(in_channels=55, out_channels=64, kernel_size=3),\n    nn.Conv2d(in_channels=64, out_channels=35, kernel_size=1),\n    nn.GRU(input_size=90, hidden_size=39, batch_first=True),\n    nn.Linear(in_features=39, out_features=126),\n    nn.LSTM(input_size=126, hidden_size=45, batch_first=True),\n    nn.Linear(in_features=45, out_features=124)\n)", "description": "This neural network takes an input of shape [212, 224] and produces an output of shape [35, 124]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=135, out_channels=52, kernel_size=2),\n    nn.Conv3d(in_channels=52, out_channels=18, kernel_size=2),\n    nn.GRU(input_size=18, hidden_size=59, batch_first=True),\n    nn.LSTM(input_size=59, hidden_size=40, batch_first=True),\n    nn.GRU(input_size=40, hidden_size=50, batch_first=True),\n    nn.Conv2d(in_channels=50, out_channels=34, kernel_size=2),\n    nn.LSTM(input_size=34, hidden_size=33, batch_first=True),\n    nn.Linear(in_features=33, out_features=61),\n    nn.Linear(in_features=61, out_features=219)\n)", "description": "This neural network takes an input of shape [135] and produces an output of shape [219]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=33, out_channels=51, kernel_size=4)\n)", "description": "This neural network takes an input of shape [33, 183, 176] and produces an output of shape [51, 183, 176]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=132, out_channels=31, kernel_size=3),\n    nn.GRU(input_size=117, hidden_size=121, batch_first=True),\n    nn.LSTM(input_size=121, hidden_size=112, batch_first=True),\n    nn.Conv2d(in_channels=31, out_channels=38, kernel_size=1),\n    nn.Conv3d(in_channels=38, out_channels=2, kernel_size=3),\n    nn.Linear(in_features=112, out_features=96),\n    nn.Conv3d(in_channels=2, out_channels=48, kernel_size=1)\n)", "description": "This neural network takes an input of shape [132, 117] and produces an output of shape [48, 96]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=219, out_channels=56, kernel_size=2),\n    nn.Conv3d(in_channels=56, out_channels=16, kernel_size=5),\n    nn.Conv2d(in_channels=16, out_channels=27, kernel_size=2)\n)", "description": "This neural network takes an input of shape [219, 251, 246] and produces an output of shape [27, 251, 246]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=34, out_channels=7, kernel_size=3),\n    nn.Conv1d(in_channels=7, out_channels=18, kernel_size=4),\n    nn.GRU(input_size=7, hidden_size=70, batch_first=True),\n    nn.LSTM(input_size=70, hidden_size=109, batch_first=True)\n)", "description": "This neural network takes an input of shape [34, 55, 7] and produces an output of shape [18, 55, 109]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=129, hidden_size=120, batch_first=True),\n    nn.Conv1d(in_channels=200, out_channels=57, kernel_size=3),\n    nn.Conv1d(in_channels=57, out_channels=58, kernel_size=3)\n)", "description": "This neural network takes an input of shape [200, 129] and produces an output of shape [58, 120]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=169, out_channels=20, kernel_size=3),\n    nn.Conv2d(in_channels=20, out_channels=6, kernel_size=4),\n    nn.LSTM(input_size=93, hidden_size=34, batch_first=True),\n    nn.Conv1d(in_channels=6, out_channels=49, kernel_size=3),\n    nn.Conv1d(in_channels=49, out_channels=5, kernel_size=3),\n    nn.Conv1d(in_channels=5, out_channels=39, kernel_size=4),\n    nn.GRU(input_size=34, hidden_size=53, batch_first=True),\n    nn.LSTM(input_size=53, hidden_size=128, batch_first=True),\n    nn.Conv2d(in_channels=39, out_channels=27, kernel_size=3)\n)", "description": "This neural network takes an input of shape [169, 93] and produces an output of shape [27, 128]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=43, out_channels=60, kernel_size=5)\n)", "description": "This neural network takes an input of shape [43] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=26, out_channels=7, kernel_size=5),\n    nn.GRU(input_size=186, hidden_size=68, batch_first=True),\n    nn.Conv2d(in_channels=7, out_channels=17, kernel_size=3),\n    nn.Conv1d(in_channels=17, out_channels=25, kernel_size=1),\n    nn.LSTM(input_size=68, hidden_size=122, batch_first=True),\n    nn.Conv2d(in_channels=25, out_channels=37, kernel_size=2),\n    nn.Conv2d(in_channels=37, out_channels=29, kernel_size=2),\n    nn.Conv3d(in_channels=29, out_channels=51, kernel_size=3),\n    nn.Conv2d(in_channels=51, out_channels=12, kernel_size=4)\n)", "description": "This neural network takes an input of shape [26, 129, 186] and produces an output of shape [12, 129, 122]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=132, out_channels=23, kernel_size=3),\n    nn.Conv3d(in_channels=23, out_channels=44, kernel_size=5),\n    nn.GRU(input_size=52, hidden_size=96, batch_first=True),\n    nn.Conv2d(in_channels=44, out_channels=17, kernel_size=1)\n)", "description": "This neural network takes an input of shape [132, 52] and produces an output of shape [17, 96]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=235, out_features=70),\n    nn.Linear(in_features=70, out_features=29),\n    nn.LSTM(input_size=29, hidden_size=126, batch_first=True),\n    nn.Conv1d(in_channels=103, out_channels=11, kernel_size=1),\n    nn.LSTM(input_size=126, hidden_size=101, batch_first=True),\n    nn.GRU(input_size=101, hidden_size=128, batch_first=True)\n)", "description": "This neural network takes an input of shape [103, 235] and produces an output of shape [11, 128]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=238, out_features=194),\n    nn.Conv2d(in_channels=81, out_channels=58, kernel_size=5),\n    nn.Conv1d(in_channels=58, out_channels=17, kernel_size=5),\n    nn.Linear(in_features=194, out_features=97),\n    nn.Conv3d(in_channels=17, out_channels=45, kernel_size=1),\n    nn.Conv2d(in_channels=45, out_channels=23, kernel_size=1),\n    nn.Conv2d(in_channels=23, out_channels=40, kernel_size=3),\n    nn.Conv2d(in_channels=40, out_channels=33, kernel_size=2),\n    nn.Conv2d(in_channels=33, out_channels=60, kernel_size=1),\n    nn.Conv1d(in_channels=60, out_channels=29, kernel_size=4)\n)", "description": "This neural network takes an input of shape [81, 16, 238] and produces an output of shape [29, 16, 97]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=113, out_features=229),\n    nn.Conv2d(in_channels=229, out_channels=41, kernel_size=1),\n    nn.Conv3d(in_channels=41, out_channels=24, kernel_size=4)\n)", "description": "This neural network takes an input of shape [113] and produces an output of shape [24]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=10, out_channels=60, kernel_size=4),\n    nn.Conv2d(in_channels=60, out_channels=38, kernel_size=1),\n    nn.Linear(in_features=211, out_features=47),\n    nn.Linear(in_features=47, out_features=227),\n    nn.Conv2d(in_channels=38, out_channels=29, kernel_size=1)\n)", "description": "This neural network takes an input of shape [10, 37, 211] and produces an output of shape [29, 37, 227]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=198, hidden_size=124, batch_first=True),\n    nn.LSTM(input_size=124, hidden_size=108, batch_first=True),\n    nn.Conv3d(in_channels=176, out_channels=64, kernel_size=3),\n    nn.Conv2d(in_channels=64, out_channels=58, kernel_size=5),\n    nn.Conv3d(in_channels=58, out_channels=13, kernel_size=3),\n    nn.Conv3d(in_channels=13, out_channels=4, kernel_size=4),\n    nn.Conv1d(in_channels=4, out_channels=7, kernel_size=4),\n    nn.Conv2d(in_channels=7, out_channels=26, kernel_size=3)\n)", "description": "This neural network takes an input of shape [176, 198] and produces an output of shape [26, 108]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=114, hidden_size=25, batch_first=True),\n    nn.Linear(in_features=25, out_features=94),\n    nn.Conv2d(in_channels=42, out_channels=62, kernel_size=1),\n    nn.Conv3d(in_channels=62, out_channels=14, kernel_size=5)\n)", "description": "This neural network takes an input of shape [42, 1, 114] and produces an output of shape [14, 1, 94]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=149, out_channels=40, kernel_size=3),\n    nn.Conv3d(in_channels=40, out_channels=17, kernel_size=2),\n    nn.Conv1d(in_channels=17, out_channels=47, kernel_size=3),\n    nn.Conv2d(in_channels=47, out_channels=38, kernel_size=5),\n    nn.Conv1d(in_channels=38, out_channels=56, kernel_size=1),\n    nn.Linear(in_features=8, out_features=225),\n    nn.GRU(input_size=225, hidden_size=62, batch_first=True)\n)", "description": "This neural network takes an input of shape [149, 8] and produces an output of shape [56, 62]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=86, out_features=116),\n    nn.LSTM(input_size=116, hidden_size=49, batch_first=True),\n    nn.GRU(input_size=49, hidden_size=94, batch_first=True),\n    nn.Conv2d(in_channels=94, out_channels=6, kernel_size=5),\n    nn.GRU(input_size=6, hidden_size=63, batch_first=True),\n    nn.Linear(in_features=63, out_features=28)\n)", "description": "This neural network takes an input of shape [86] and produces an output of shape [28]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=168, out_channels=13, kernel_size=5),\n    nn.Linear(in_features=250, out_features=177)\n)", "description": "This neural network takes an input of shape [168, 172, 250] and produces an output of shape [13, 172, 177]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=52, hidden_size=58, batch_first=True),\n    nn.LSTM(input_size=58, hidden_size=82, batch_first=True)\n)", "description": "This neural network takes an input of shape [52] and produces an output of shape [82]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=46, out_channels=30, kernel_size=2),\n    nn.Linear(in_features=30, out_features=57),\n    nn.Conv2d(in_channels=57, out_channels=5, kernel_size=2)\n)", "description": "This neural network takes an input of shape [46] and produces an output of shape [5]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=233, out_channels=52, kernel_size=1),\n    nn.Linear(in_features=187, out_features=159)\n)", "description": "This neural network takes an input of shape [233, 115, 187] and produces an output of shape [52, 115, 159]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=251, out_channels=30, kernel_size=1),\n    nn.LSTM(input_size=30, hidden_size=31, batch_first=True),\n    nn.LSTM(input_size=31, hidden_size=22, batch_first=True),\n    nn.Conv3d(in_channels=22, out_channels=55, kernel_size=5),\n    nn.Linear(in_features=55, out_features=59),\n    nn.GRU(input_size=59, hidden_size=60, batch_first=True)\n)", "description": "This neural network takes an input of shape [251] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=15, out_channels=7, kernel_size=2),\n    nn.Conv1d(in_channels=7, out_channels=5, kernel_size=3),\n    nn.Conv2d(in_channels=5, out_channels=39, kernel_size=5),\n    nn.Conv2d(in_channels=39, out_channels=59, kernel_size=2),\n    nn.Linear(in_features=51, out_features=99),\n    nn.Conv3d(in_channels=59, out_channels=20, kernel_size=5),\n    nn.Conv1d(in_channels=20, out_channels=15, kernel_size=5)\n)", "description": "This neural network takes an input of shape [15, 51] and produces an output of shape [15, 99]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=78, out_features=56),\n    nn.Conv1d(in_channels=56, out_channels=21, kernel_size=1)\n)", "description": "This neural network takes an input of shape [78] and produces an output of shape [21]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=213, out_channels=11, kernel_size=3),\n    nn.LSTM(input_size=230, hidden_size=106, batch_first=True),\n    nn.Conv2d(in_channels=11, out_channels=52, kernel_size=3),\n    nn.GRU(input_size=106, hidden_size=114, batch_first=True),\n    nn.Conv3d(in_channels=52, out_channels=50, kernel_size=2)\n)", "description": "This neural network takes an input of shape [213, 230] and produces an output of shape [50, 114]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=194, hidden_size=128, batch_first=True),\n    nn.LSTM(input_size=128, hidden_size=48, batch_first=True),\n    nn.LSTM(input_size=48, hidden_size=116, batch_first=True),\n    nn.Linear(in_features=116, out_features=65),\n    nn.Conv2d(in_channels=221, out_channels=48, kernel_size=2),\n    nn.Conv3d(in_channels=48, out_channels=21, kernel_size=5)\n)", "description": "This neural network takes an input of shape [221, 194] and produces an output of shape [21, 65]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=129, out_channels=6, kernel_size=2),\n    nn.LSTM(input_size=6, hidden_size=95, batch_first=True),\n    nn.Conv2d(in_channels=95, out_channels=21, kernel_size=5)\n)", "description": "This neural network takes an input of shape [129] and produces an output of shape [21]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=229, out_features=94),\n    nn.Conv2d(in_channels=94, out_channels=40, kernel_size=3)\n)", "description": "This neural network takes an input of shape [229] and produces an output of shape [40]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=87, out_channels=48, kernel_size=4),\n    nn.Conv1d(in_channels=48, out_channels=43, kernel_size=4),\n    nn.GRU(input_size=43, hidden_size=52, batch_first=True),\n    nn.Conv1d(in_channels=52, out_channels=27, kernel_size=1),\n    nn.LSTM(input_size=27, hidden_size=87, batch_first=True)\n)", "description": "This neural network takes an input of shape [87] and produces an output of shape [87]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=35, out_channels=11, kernel_size=5),\n    nn.Linear(in_features=71, out_features=99),\n    nn.LSTM(input_size=99, hidden_size=52, batch_first=True),\n    nn.Conv3d(in_channels=11, out_channels=45, kernel_size=3)\n)", "description": "This neural network takes an input of shape [35, 208, 71] and produces an output of shape [45, 208, 52]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=41, hidden_size=88, batch_first=True),\n    nn.LSTM(input_size=88, hidden_size=29, batch_first=True),\n    nn.Linear(in_features=29, out_features=7),\n    nn.Linear(in_features=7, out_features=52)\n)", "description": "This neural network takes an input of shape [41] and produces an output of shape [52]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=131, out_channels=6, kernel_size=3),\n    nn.Conv3d(in_channels=6, out_channels=28, kernel_size=1),\n    nn.LSTM(input_size=28, hidden_size=70, batch_first=True),\n    nn.GRU(input_size=70, hidden_size=59, batch_first=True),\n    nn.Linear(in_features=59, out_features=2),\n    nn.Linear(in_features=2, out_features=98),\n    nn.Linear(in_features=98, out_features=60),\n    nn.Conv3d(in_channels=60, out_channels=1, kernel_size=5)\n)", "description": "This neural network takes an input of shape [131] and produces an output of shape [1]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=108, out_channels=30, kernel_size=2)\n)", "description": "This neural network takes an input of shape [108, 57, 145] and produces an output of shape [30, 57, 145]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=47, out_features=10),\n    nn.Conv1d(in_channels=162, out_channels=22, kernel_size=4),\n    nn.Conv2d(in_channels=22, out_channels=60, kernel_size=1),\n    nn.GRU(input_size=10, hidden_size=108, batch_first=True)\n)", "description": "This neural network takes an input of shape [162, 47] and produces an output of shape [60, 108]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=95, out_channels=1, kernel_size=5)\n)", "description": "This neural network takes an input of shape [95, 171] and produces an output of shape [1, 171]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=131, hidden_size=112, batch_first=True),\n    nn.Linear(in_features=112, out_features=57),\n    nn.Conv3d(in_channels=92, out_channels=24, kernel_size=3),\n    nn.Conv1d(in_channels=24, out_channels=47, kernel_size=4)\n)", "description": "This neural network takes an input of shape [92, 131] and produces an output of shape [47, 57]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=168, out_features=63),\n    nn.Conv1d(in_channels=63, out_channels=3, kernel_size=4),\n    nn.Linear(in_features=3, out_features=180),\n    nn.Conv3d(in_channels=180, out_channels=41, kernel_size=5),\n    nn.Conv1d(in_channels=41, out_channels=18, kernel_size=4),\n    nn.Conv2d(in_channels=18, out_channels=22, kernel_size=1)\n)", "description": "This neural network takes an input of shape [168] and produces an output of shape [22]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=145, out_channels=13, kernel_size=4),\n    nn.LSTM(input_size=223, hidden_size=68, batch_first=True),\n    nn.Conv2d(in_channels=13, out_channels=52, kernel_size=5)\n)", "description": "This neural network takes an input of shape [145, 178, 223] and produces an output of shape [52, 178, 68]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=235, out_channels=15, kernel_size=5),\n    nn.Conv1d(in_channels=15, out_channels=60, kernel_size=2),\n    nn.Conv3d(in_channels=60, out_channels=41, kernel_size=2)\n)", "description": "This neural network takes an input of shape [235, 46] and produces an output of shape [41, 46]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=15, hidden_size=35, batch_first=True),\n    nn.Conv2d(in_channels=147, out_channels=46, kernel_size=5),\n    nn.Linear(in_features=35, out_features=139)\n)", "description": "This neural network takes an input of shape [147, 15] and produces an output of shape [46, 139]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=98, out_channels=36, kernel_size=3),\n    nn.LSTM(input_size=36, hidden_size=119, batch_first=True),\n    nn.Conv2d(in_channels=119, out_channels=33, kernel_size=5)\n)", "description": "This neural network takes an input of shape [98] and produces an output of shape [33]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=191, hidden_size=123, batch_first=True),\n    nn.Conv2d(in_channels=10, out_channels=27, kernel_size=5)\n)", "description": "This neural network takes an input of shape [10, 191] and produces an output of shape [27, 123]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=89, out_channels=43, kernel_size=1),\n    nn.Conv2d(in_channels=43, out_channels=64, kernel_size=2),\n    nn.Linear(in_features=77, out_features=13)\n)", "description": "This neural network takes an input of shape [89, 77] and produces an output of shape [64, 13]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=101, out_features=213),\n    nn.Conv2d(in_channels=11, out_channels=32, kernel_size=2),\n    nn.Conv2d(in_channels=32, out_channels=27, kernel_size=3),\n    nn.Conv3d(in_channels=27, out_channels=60, kernel_size=4),\n    nn.Conv2d(in_channels=60, out_channels=29, kernel_size=5),\n    nn.GRU(input_size=213, hidden_size=94, batch_first=True),\n    nn.Conv3d(in_channels=29, out_channels=4, kernel_size=3),\n    nn.Conv1d(in_channels=4, out_channels=33, kernel_size=5)\n)", "description": "This neural network takes an input of shape [11, 178, 101] and produces an output of shape [33, 178, 94]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=247, out_features=29),\n    nn.Conv3d(in_channels=174, out_channels=51, kernel_size=5),\n    nn.Linear(in_features=29, out_features=232),\n    nn.Conv1d(in_channels=51, out_channels=10, kernel_size=1)\n)", "description": "This neural network takes an input of shape [174, 247] and produces an output of shape [10, 232]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=89, hidden_size=118, batch_first=True),\n    nn.GRU(input_size=118, hidden_size=88, batch_first=True),\n    nn.Conv1d(in_channels=40, out_channels=25, kernel_size=2),\n    nn.Linear(in_features=88, out_features=2),\n    nn.Conv3d(in_channels=25, out_channels=40, kernel_size=5),\n    nn.Conv3d(in_channels=40, out_channels=27, kernel_size=5),\n    nn.GRU(input_size=2, hidden_size=54, batch_first=True),\n    nn.Linear(in_features=54, out_features=251),\n    nn.Conv1d(in_channels=27, out_channels=9, kernel_size=2),\n    nn.GRU(input_size=251, hidden_size=15, batch_first=True)\n)", "description": "This neural network takes an input of shape [40, 220, 89] and produces an output of shape [9, 220, 15]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=225, hidden_size=14, batch_first=True),\n    nn.Conv3d(in_channels=14, out_channels=11, kernel_size=3),\n    nn.Conv2d(in_channels=11, out_channels=32, kernel_size=4),\n    nn.Conv1d(in_channels=32, out_channels=41, kernel_size=5),\n    nn.LSTM(input_size=41, hidden_size=71, batch_first=True),\n    nn.Conv2d(in_channels=71, out_channels=60, kernel_size=5)\n)", "description": "This neural network takes an input of shape [225] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=161, out_channels=15, kernel_size=1),\n    nn.Linear(in_features=218, out_features=102),\n    nn.Linear(in_features=102, out_features=176),\n    nn.LSTM(input_size=176, hidden_size=27, batch_first=True),\n    nn.Conv2d(in_channels=15, out_channels=46, kernel_size=3),\n    nn.Conv2d(in_channels=46, out_channels=48, kernel_size=3),\n    nn.GRU(input_size=27, hidden_size=33, batch_first=True),\n    nn.GRU(input_size=33, hidden_size=11, batch_first=True),\n    nn.Conv3d(in_channels=48, out_channels=2, kernel_size=3),\n    nn.Conv3d(in_channels=2, out_channels=64, kernel_size=1)\n)", "description": "This neural network takes an input of shape [161, 247, 218] and produces an output of shape [64, 247, 11]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=80, out_features=165),\n    nn.Linear(in_features=165, out_features=161),\n    nn.LSTM(input_size=161, hidden_size=101, batch_first=True),\n    nn.Linear(in_features=101, out_features=116),\n    nn.Linear(in_features=116, out_features=124),\n    nn.Linear(in_features=124, out_features=236)\n)", "description": "This neural network takes an input of shape [168, 181, 80] and produces an output of shape [168, 181, 236]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=37, out_channels=29, kernel_size=3),\n    nn.GRU(input_size=161, hidden_size=93, batch_first=True),\n    nn.Linear(in_features=93, out_features=94),\n    nn.Conv1d(in_channels=29, out_channels=62, kernel_size=2),\n    nn.Conv1d(in_channels=62, out_channels=50, kernel_size=1)\n)", "description": "This neural network takes an input of shape [37, 74, 161] and produces an output of shape [50, 74, 94]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=45, hidden_size=61, batch_first=True),\n    nn.Linear(in_features=61, out_features=39),\n    nn.Conv2d(in_channels=250, out_channels=32, kernel_size=5),\n    nn.Conv3d(in_channels=32, out_channels=56, kernel_size=3),\n    nn.Conv3d(in_channels=56, out_channels=56, kernel_size=5),\n    nn.Linear(in_features=39, out_features=174),\n    nn.Conv3d(in_channels=56, out_channels=40, kernel_size=4),\n    nn.GRU(input_size=174, hidden_size=89, batch_first=True),\n    nn.Conv1d(in_channels=40, out_channels=37, kernel_size=4)\n)", "description": "This neural network takes an input of shape [250, 45] and produces an output of shape [37, 89]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=95, out_channels=36, kernel_size=5),\n    nn.Linear(in_features=76, out_features=84),\n    nn.Conv1d(in_channels=36, out_channels=57, kernel_size=1),\n    nn.Conv1d(in_channels=57, out_channels=41, kernel_size=2),\n    nn.Linear(in_features=84, out_features=57),\n    nn.Conv3d(in_channels=41, out_channels=47, kernel_size=2),\n    nn.GRU(input_size=57, hidden_size=111, batch_first=True),\n    nn.Conv1d(in_channels=47, out_channels=1, kernel_size=1),\n    nn.Linear(in_features=111, out_features=172),\n    nn.Conv2d(in_channels=1, out_channels=53, kernel_size=5)\n)", "description": "This neural network takes an input of shape [95, 201, 76] and produces an output of shape [53, 201, 172]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=51, out_channels=60, kernel_size=1),\n    nn.GRU(input_size=60, hidden_size=5, batch_first=True),\n    nn.Conv1d(in_channels=5, out_channels=3, kernel_size=4),\n    nn.Conv2d(in_channels=3, out_channels=21, kernel_size=4),\n    nn.Conv1d(in_channels=21, out_channels=51, kernel_size=1),\n    nn.Conv2d(in_channels=51, out_channels=45, kernel_size=4),\n    nn.Conv2d(in_channels=45, out_channels=60, kernel_size=2),\n    nn.Linear(in_features=60, out_features=5)\n)", "description": "This neural network takes an input of shape [51] and produces an output of shape [5]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=162, out_features=74),\n    nn.Conv2d(in_channels=74, out_channels=53, kernel_size=5),\n    nn.LSTM(input_size=53, hidden_size=28, batch_first=True),\n    nn.GRU(input_size=28, hidden_size=109, batch_first=True),\n    nn.Linear(in_features=109, out_features=207),\n    nn.Conv1d(in_channels=207, out_channels=7, kernel_size=2),\n    nn.Conv2d(in_channels=7, out_channels=21, kernel_size=1),\n    nn.Conv3d(in_channels=21, out_channels=3, kernel_size=4)\n)", "description": "This neural network takes an input of shape [162] and produces an output of shape [3]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=150, out_channels=31, kernel_size=3),\n    nn.Conv2d(in_channels=31, out_channels=19, kernel_size=3),\n    nn.LSTM(input_size=19, hidden_size=7, batch_first=True),\n    nn.Conv3d(in_channels=7, out_channels=5, kernel_size=4),\n    nn.Conv2d(in_channels=5, out_channels=43, kernel_size=4),\n    nn.Linear(in_features=43, out_features=41),\n    nn.Linear(in_features=41, out_features=165)\n)", "description": "This neural network takes an input of shape [150] and produces an output of shape [165]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=171, out_channels=38, kernel_size=1),\n    nn.Conv1d(in_channels=38, out_channels=63, kernel_size=4),\n    nn.LSTM(input_size=28, hidden_size=32, batch_first=True),\n    nn.Conv3d(in_channels=63, out_channels=22, kernel_size=4),\n    nn.GRU(input_size=32, hidden_size=6, batch_first=True),\n    nn.Conv2d(in_channels=22, out_channels=40, kernel_size=2),\n    nn.Conv3d(in_channels=40, out_channels=25, kernel_size=5),\n    nn.Linear(in_features=6, out_features=15)\n)", "description": "This neural network takes an input of shape [171, 28] and produces an output of shape [25, 15]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=102, hidden_size=72, batch_first=True),\n    nn.Conv1d(in_channels=57, out_channels=3, kernel_size=2),\n    nn.Conv2d(in_channels=3, out_channels=36, kernel_size=5),\n    nn.GRU(input_size=72, hidden_size=102, batch_first=True),\n    nn.GRU(input_size=102, hidden_size=65, batch_first=True),\n    nn.LSTM(input_size=65, hidden_size=48, batch_first=True),\n    nn.Conv1d(in_channels=36, out_channels=5, kernel_size=1)\n)", "description": "This neural network takes an input of shape [57, 102] and produces an output of shape [5, 48]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=90, hidden_size=35, batch_first=True)\n)", "description": "This neural network takes an input of shape [34, 101, 90] and produces an output of shape [34, 101, 35]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=44, hidden_size=84, batch_first=True),\n    nn.Conv2d(in_channels=84, out_channels=14, kernel_size=4),\n    nn.Conv3d(in_channels=14, out_channels=5, kernel_size=3),\n    nn.Conv2d(in_channels=5, out_channels=9, kernel_size=4),\n    nn.Conv2d(in_channels=9, out_channels=30, kernel_size=2),\n    nn.LSTM(input_size=30, hidden_size=50, batch_first=True),\n    nn.Linear(in_features=50, out_features=239),\n    nn.Linear(in_features=239, out_features=32),\n    nn.Conv2d(in_channels=32, out_channels=33, kernel_size=5),\n    nn.LSTM(input_size=33, hidden_size=114, batch_first=True)\n)", "description": "This neural network takes an input of shape [44] and produces an output of shape [114]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=226, hidden_size=58, batch_first=True),\n    nn.LSTM(input_size=58, hidden_size=20, batch_first=True),\n    nn.Conv1d(in_channels=20, out_channels=22, kernel_size=5),\n    nn.Conv2d(in_channels=22, out_channels=18, kernel_size=5),\n    nn.LSTM(input_size=18, hidden_size=88, batch_first=True),\n    nn.LSTM(input_size=88, hidden_size=106, batch_first=True),\n    nn.Conv3d(in_channels=106, out_channels=45, kernel_size=3)\n)", "description": "This neural network takes an input of shape [226] and produces an output of shape [45]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=241, hidden_size=123, batch_first=True),\n    nn.Linear(in_features=123, out_features=52),\n    nn.Conv3d(in_channels=52, out_channels=46, kernel_size=4)\n)", "description": "This neural network takes an input of shape [241] and produces an output of shape [46]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=193, out_channels=55, kernel_size=2),\n    nn.GRU(input_size=55, hidden_size=116, batch_first=True)\n)", "description": "This neural network takes an input of shape [193] and produces an output of shape [116]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=205, out_channels=21, kernel_size=4),\n    nn.Linear(in_features=21, out_features=148),\n    nn.GRU(input_size=148, hidden_size=39, batch_first=True),\n    nn.Linear(in_features=39, out_features=177),\n    nn.Conv2d(in_channels=177, out_channels=63, kernel_size=1),\n    nn.LSTM(input_size=63, hidden_size=100, batch_first=True),\n    nn.GRU(input_size=100, hidden_size=58, batch_first=True),\n    nn.Conv2d(in_channels=58, out_channels=26, kernel_size=4),\n    nn.Conv1d(in_channels=26, out_channels=61, kernel_size=1)\n)", "description": "This neural network takes an input of shape [205] and produces an output of shape [61]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=7, hidden_size=73, batch_first=True),\n    nn.Conv1d(in_channels=76, out_channels=26, kernel_size=2),\n    nn.Conv1d(in_channels=26, out_channels=33, kernel_size=2),\n    nn.Conv2d(in_channels=33, out_channels=42, kernel_size=1),\n    nn.Conv3d(in_channels=42, out_channels=31, kernel_size=3),\n    nn.Conv2d(in_channels=31, out_channels=29, kernel_size=3),\n    nn.GRU(input_size=73, hidden_size=19, batch_first=True),\n    nn.Linear(in_features=19, out_features=211),\n    nn.GRU(input_size=211, hidden_size=25, batch_first=True)\n)", "description": "This neural network takes an input of shape [76, 35, 7] and produces an output of shape [29, 35, 25]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=2, out_channels=45, kernel_size=5),\n    nn.Conv3d(in_channels=45, out_channels=34, kernel_size=3),\n    nn.Linear(in_features=34, out_features=41),\n    nn.LSTM(input_size=41, hidden_size=54, batch_first=True),\n    nn.Conv2d(in_channels=54, out_channels=41, kernel_size=4),\n    nn.Conv1d(in_channels=41, out_channels=56, kernel_size=5),\n    nn.Linear(in_features=56, out_features=82)\n)", "description": "This neural network takes an input of shape [2] and produces an output of shape [82]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=65, hidden_size=81, batch_first=True),\n    nn.Linear(in_features=81, out_features=169),\n    nn.GRU(input_size=169, hidden_size=11, batch_first=True),\n    nn.GRU(input_size=11, hidden_size=18, batch_first=True),\n    nn.Linear(in_features=18, out_features=114),\n    nn.LSTM(input_size=114, hidden_size=83, batch_first=True),\n    nn.GRU(input_size=83, hidden_size=18, batch_first=True),\n    nn.GRU(input_size=18, hidden_size=21, batch_first=True)\n)", "description": "This neural network takes an input of shape [65] and produces an output of shape [21]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=235, out_channels=38, kernel_size=5),\n    nn.Conv2d(in_channels=38, out_channels=1, kernel_size=4),\n    nn.Conv2d(in_channels=1, out_channels=3, kernel_size=2),\n    nn.Conv1d(in_channels=3, out_channels=33, kernel_size=2)\n)", "description": "This neural network takes an input of shape [235] and produces an output of shape [33]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=42, out_features=116),\n    nn.Conv3d(in_channels=170, out_channels=8, kernel_size=2),\n    nn.Linear(in_features=116, out_features=203),\n    nn.LSTM(input_size=203, hidden_size=67, batch_first=True),\n    nn.Conv3d(in_channels=8, out_channels=60, kernel_size=3),\n    nn.Linear(in_features=67, out_features=135),\n    nn.Conv2d(in_channels=60, out_channels=61, kernel_size=3),\n    nn.LSTM(input_size=135, hidden_size=63, batch_first=True),\n    nn.Linear(in_features=63, out_features=135),\n    nn.Conv2d(in_channels=61, out_channels=46, kernel_size=4)\n)", "description": "This neural network takes an input of shape [170, 248, 42] and produces an output of shape [46, 248, 135]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=51, out_features=146),\n    nn.LSTM(input_size=146, hidden_size=34, batch_first=True),\n    nn.LSTM(input_size=34, hidden_size=35, batch_first=True),\n    nn.LSTM(input_size=35, hidden_size=82, batch_first=True),\n    nn.Conv1d(in_channels=82, out_channels=10, kernel_size=2)\n)", "description": "This neural network takes an input of shape [82, 218, 51] and produces an output of shape [10, 218, 82]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=31, hidden_size=79, batch_first=True),\n    nn.Conv2d(in_channels=60, out_channels=40, kernel_size=5),\n    nn.LSTM(input_size=79, hidden_size=32, batch_first=True),\n    nn.GRU(input_size=32, hidden_size=34, batch_first=True),\n    nn.Linear(in_features=34, out_features=172),\n    nn.Conv2d(in_channels=40, out_channels=22, kernel_size=1),\n    nn.LSTM(input_size=172, hidden_size=65, batch_first=True)\n)", "description": "This neural network takes an input of shape [60, 31] and produces an output of shape [22, 65]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=204, out_channels=18, kernel_size=2),\n    nn.Conv2d(in_channels=18, out_channels=17, kernel_size=1),\n    nn.Conv2d(in_channels=17, out_channels=39, kernel_size=4),\n    nn.Linear(in_features=120, out_features=162)\n)", "description": "This neural network takes an input of shape [204, 120] and produces an output of shape [39, 162]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=221, out_channels=2, kernel_size=3),\n    nn.Conv3d(in_channels=2, out_channels=13, kernel_size=1),\n    nn.GRU(input_size=37, hidden_size=127, batch_first=True),\n    nn.Conv3d(in_channels=13, out_channels=56, kernel_size=4),\n    nn.Conv1d(in_channels=56, out_channels=10, kernel_size=5),\n    nn.Conv1d(in_channels=10, out_channels=50, kernel_size=5)\n)", "description": "This neural network takes an input of shape [221, 37] and produces an output of shape [50, 127]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=118, hidden_size=38, batch_first=True),\n    nn.LSTM(input_size=38, hidden_size=90, batch_first=True),\n    nn.GRU(input_size=90, hidden_size=67, batch_first=True),\n    nn.Linear(in_features=67, out_features=101),\n    nn.Conv3d(in_channels=101, out_channels=4, kernel_size=2),\n    nn.Conv2d(in_channels=4, out_channels=61, kernel_size=2),\n    nn.Linear(in_features=61, out_features=49)\n)", "description": "This neural network takes an input of shape [118] and produces an output of shape [49]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=215, out_features=94),\n    nn.Linear(in_features=94, out_features=145),\n    nn.Linear(in_features=145, out_features=1),\n    nn.Linear(in_features=1, out_features=165),\n    nn.Conv2d(in_channels=165, out_channels=53, kernel_size=1),\n    nn.GRU(input_size=53, hidden_size=114, batch_first=True),\n    nn.Linear(in_features=114, out_features=70),\n    nn.Linear(in_features=70, out_features=255),\n    nn.Conv3d(in_channels=255, out_channels=55, kernel_size=5),\n    nn.Linear(in_features=55, out_features=89)\n)", "description": "This neural network takes an input of shape [215] and produces an output of shape [89]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=155, out_channels=62, kernel_size=4)\n)", "description": "This neural network takes an input of shape [155, 228] and produces an output of shape [62, 228]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=56, hidden_size=20, batch_first=True),\n    nn.Conv1d(in_channels=34, out_channels=27, kernel_size=4),\n    nn.LSTM(input_size=20, hidden_size=77, batch_first=True),\n    nn.GRU(input_size=77, hidden_size=75, batch_first=True),\n    nn.Linear(in_features=75, out_features=203),\n    nn.Linear(in_features=203, out_features=28),\n    nn.LSTM(input_size=28, hidden_size=66, batch_first=True)\n)", "description": "This neural network takes an input of shape [34, 56] and produces an output of shape [27, 66]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=95, out_channels=23, kernel_size=4),\n    nn.GRU(input_size=102, hidden_size=103, batch_first=True),\n    nn.LSTM(input_size=103, hidden_size=82, batch_first=True),\n    nn.Conv2d(in_channels=23, out_channels=31, kernel_size=4),\n    nn.Conv2d(in_channels=31, out_channels=47, kernel_size=2),\n    nn.Conv3d(in_channels=47, out_channels=47, kernel_size=2),\n    nn.Conv2d(in_channels=47, out_channels=32, kernel_size=1),\n    nn.Conv3d(in_channels=32, out_channels=36, kernel_size=1),\n    nn.Conv2d(in_channels=36, out_channels=36, kernel_size=1),\n    nn.Conv1d(in_channels=36, out_channels=45, kernel_size=4)\n)", "description": "This neural network takes an input of shape [95, 199, 102] and produces an output of shape [45, 199, 82]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=10, out_channels=58, kernel_size=4),\n    nn.Linear(in_features=58, out_features=26),\n    nn.Conv2d(in_channels=26, out_channels=11, kernel_size=1),\n    nn.LSTM(input_size=11, hidden_size=56, batch_first=True),\n    nn.GRU(input_size=56, hidden_size=104, batch_first=True),\n    nn.Conv3d(in_channels=104, out_channels=21, kernel_size=5),\n    nn.Conv2d(in_channels=21, out_channels=14, kernel_size=3),\n    nn.GRU(input_size=14, hidden_size=50, batch_first=True)\n)", "description": "This neural network takes an input of shape [10] and produces an output of shape [50]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=10, out_channels=16, kernel_size=1)\n)", "description": "This neural network takes an input of shape [10, 170, 182] and produces an output of shape [16, 170, 182]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=172, hidden_size=91, batch_first=True),\n    nn.LSTM(input_size=91, hidden_size=100, batch_first=True),\n    nn.LSTM(input_size=100, hidden_size=26, batch_first=True),\n    nn.Conv2d(in_channels=26, out_channels=22, kernel_size=1),\n    nn.Linear(in_features=22, out_features=233),\n    nn.Conv3d(in_channels=233, out_channels=48, kernel_size=4)\n)", "description": "This neural network takes an input of shape [172] and produces an output of shape [48]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=56, hidden_size=13, batch_first=True),\n    nn.Conv3d(in_channels=13, out_channels=8, kernel_size=3),\n    nn.Conv2d(in_channels=8, out_channels=9, kernel_size=1),\n    nn.Linear(in_features=9, out_features=59)\n)", "description": "This neural network takes an input of shape [56] and produces an output of shape [59]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=216, out_features=106),\n    nn.Conv3d(in_channels=243, out_channels=54, kernel_size=5),\n    nn.Linear(in_features=106, out_features=96),\n    nn.LSTM(input_size=96, hidden_size=61, batch_first=True),\n    nn.LSTM(input_size=61, hidden_size=123, batch_first=True)\n)", "description": "This neural network takes an input of shape [243, 216] and produces an output of shape [54, 123]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=19, out_channels=46, kernel_size=4),\n    nn.Linear(in_features=15, out_features=4)\n)", "description": "This neural network takes an input of shape [19, 218, 15] and produces an output of shape [46, 218, 4]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=49, out_channels=38, kernel_size=5),\n    nn.LSTM(input_size=102, hidden_size=93, batch_first=True)\n)", "description": "This neural network takes an input of shape [49, 102] and produces an output of shape [38, 93]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=130, out_features=211),\n    nn.Linear(in_features=211, out_features=192),\n    nn.Conv2d(in_channels=192, out_channels=58, kernel_size=3)\n)", "description": "This neural network takes an input of shape [130] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=93, out_channels=56, kernel_size=1),\n    nn.Conv2d(in_channels=56, out_channels=59, kernel_size=4),\n    nn.Conv2d(in_channels=59, out_channels=39, kernel_size=5)\n)", "description": "This neural network takes an input of shape [93] and produces an output of shape [39]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=140, out_channels=20, kernel_size=2),\n    nn.Conv2d(in_channels=20, out_channels=64, kernel_size=1),\n    nn.GRU(input_size=64, hidden_size=93, batch_first=True),\n    nn.Conv2d(in_channels=93, out_channels=26, kernel_size=2)\n)", "description": "This neural network takes an input of shape [140] and produces an output of shape [26]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=236, out_channels=58, kernel_size=3),\n    nn.Conv3d(in_channels=58, out_channels=47, kernel_size=1),\n    nn.Conv3d(in_channels=47, out_channels=40, kernel_size=3),\n    nn.Conv1d(in_channels=40, out_channels=7, kernel_size=3)\n)", "description": "This neural network takes an input of shape [236] and produces an output of shape [7]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=74, hidden_size=73, batch_first=True),\n    nn.LSTM(input_size=73, hidden_size=128, batch_first=True),\n    nn.Linear(in_features=128, out_features=123),\n    nn.Conv1d(in_channels=192, out_channels=15, kernel_size=5),\n    nn.LSTM(input_size=123, hidden_size=32, batch_first=True),\n    nn.Conv2d(in_channels=15, out_channels=46, kernel_size=2)\n)", "description": "This neural network takes an input of shape [192, 99, 74] and produces an output of shape [46, 99, 32]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=145, out_channels=61, kernel_size=2),\n    nn.Linear(in_features=61, out_features=129),\n    nn.LSTM(input_size=129, hidden_size=4, batch_first=True),\n    nn.Conv1d(in_channels=4, out_channels=52, kernel_size=3),\n    nn.Conv1d(in_channels=52, out_channels=36, kernel_size=5),\n    nn.GRU(input_size=36, hidden_size=21, batch_first=True),\n    nn.Linear(in_features=21, out_features=109),\n    nn.Conv3d(in_channels=109, out_channels=62, kernel_size=2)\n)", "description": "This neural network takes an input of shape [145] and produces an output of shape [62]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=135, hidden_size=88, batch_first=True),\n    nn.GRU(input_size=88, hidden_size=99, batch_first=True),\n    nn.Conv2d(in_channels=99, out_channels=38, kernel_size=5),\n    nn.GRU(input_size=38, hidden_size=27, batch_first=True),\n    nn.GRU(input_size=27, hidden_size=82, batch_first=True),\n    nn.Conv3d(in_channels=82, out_channels=56, kernel_size=5)\n)", "description": "This neural network takes an input of shape [135] and produces an output of shape [56]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=8, hidden_size=124, batch_first=True),\n    nn.LSTM(input_size=124, hidden_size=119, batch_first=True),\n    nn.Linear(in_features=119, out_features=253),\n    nn.Conv1d(in_channels=66, out_channels=51, kernel_size=3),\n    nn.Conv3d(in_channels=51, out_channels=45, kernel_size=4),\n    nn.Linear(in_features=253, out_features=187),\n    nn.Conv2d(in_channels=45, out_channels=40, kernel_size=4),\n    nn.Conv2d(in_channels=40, out_channels=60, kernel_size=5)\n)", "description": "This neural network takes an input of shape [66, 8] and produces an output of shape [60, 187]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=176, out_channels=61, kernel_size=2),\n    nn.Linear(in_features=171, out_features=194),\n    nn.Conv1d(in_channels=61, out_channels=52, kernel_size=2),\n    nn.GRU(input_size=194, hidden_size=7, batch_first=True),\n    nn.Conv1d(in_channels=52, out_channels=15, kernel_size=2),\n    nn.GRU(input_size=7, hidden_size=99, batch_first=True),\n    nn.LSTM(input_size=99, hidden_size=127, batch_first=True),\n    nn.Linear(in_features=127, out_features=48),\n    nn.Conv3d(in_channels=15, out_channels=51, kernel_size=1)\n)", "description": "This neural network takes an input of shape [176, 171] and produces an output of shape [51, 48]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=233, hidden_size=113, batch_first=True),\n    nn.Conv1d(in_channels=113, out_channels=3, kernel_size=1),\n    nn.LSTM(input_size=3, hidden_size=62, batch_first=True),\n    nn.Conv3d(in_channels=62, out_channels=44, kernel_size=4),\n    nn.Conv2d(in_channels=44, out_channels=31, kernel_size=4),\n    nn.Linear(in_features=31, out_features=24),\n    nn.Conv3d(in_channels=24, out_channels=60, kernel_size=1),\n    nn.LSTM(input_size=60, hidden_size=18, batch_first=True),\n    nn.LSTM(input_size=18, hidden_size=113, batch_first=True),\n    nn.LSTM(input_size=113, hidden_size=49, batch_first=True)\n)", "description": "This neural network takes an input of shape [233] and produces an output of shape [49]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=243, out_channels=2, kernel_size=3),\n    nn.Conv2d(in_channels=2, out_channels=48, kernel_size=5),\n    nn.Conv1d(in_channels=48, out_channels=38, kernel_size=4)\n)", "description": "This neural network takes an input of shape [243] and produces an output of shape [38]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=77, hidden_size=51, batch_first=True),\n    nn.Conv1d(in_channels=51, out_channels=2, kernel_size=2),\n    nn.Linear(in_features=2, out_features=237),\n    nn.Linear(in_features=237, out_features=184),\n    nn.Linear(in_features=184, out_features=75)\n)", "description": "This neural network takes an input of shape [77] and produces an output of shape [75]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=196, out_channels=64, kernel_size=5),\n    nn.Linear(in_features=234, out_features=168),\n    nn.Conv2d(in_channels=64, out_channels=1, kernel_size=3),\n    nn.Conv1d(in_channels=1, out_channels=26, kernel_size=5),\n    nn.GRU(input_size=168, hidden_size=76, batch_first=True)\n)", "description": "This neural network takes an input of shape [196, 234] and produces an output of shape [26, 76]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=199, out_channels=64, kernel_size=2),\n    nn.GRU(input_size=163, hidden_size=87, batch_first=True),\n    nn.GRU(input_size=87, hidden_size=7, batch_first=True)\n)", "description": "This neural network takes an input of shape [199, 32, 163] and produces an output of shape [64, 32, 7]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=111, out_channels=38, kernel_size=3),\n    nn.GRU(input_size=14, hidden_size=32, batch_first=True),\n    nn.Conv2d(in_channels=38, out_channels=2, kernel_size=2),\n    nn.Conv3d(in_channels=2, out_channels=18, kernel_size=2),\n    nn.Conv1d(in_channels=18, out_channels=41, kernel_size=3)\n)", "description": "This neural network takes an input of shape [111, 217, 14] and produces an output of shape [41, 217, 32]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=184, out_channels=25, kernel_size=3),\n    nn.Conv2d(in_channels=25, out_channels=52, kernel_size=1),\n    nn.Conv3d(in_channels=52, out_channels=52, kernel_size=1),\n    nn.Conv2d(in_channels=52, out_channels=26, kernel_size=4),\n    nn.LSTM(input_size=234, hidden_size=37, batch_first=True),\n    nn.Linear(in_features=37, out_features=194),\n    nn.GRU(input_size=194, hidden_size=14, batch_first=True),\n    nn.Linear(in_features=14, out_features=200),\n    nn.Conv1d(in_channels=26, out_channels=32, kernel_size=2)\n)", "description": "This neural network takes an input of shape [184, 234] and produces an output of shape [32, 200]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=94, out_features=155),\n    nn.Conv2d(in_channels=181, out_channels=58, kernel_size=4),\n    nn.Conv3d(in_channels=58, out_channels=34, kernel_size=4),\n    nn.Linear(in_features=155, out_features=121),\n    nn.Linear(in_features=121, out_features=141),\n    nn.Conv3d(in_channels=34, out_channels=54, kernel_size=3),\n    nn.LSTM(input_size=141, hidden_size=70, batch_first=True),\n    nn.GRU(input_size=70, hidden_size=56, batch_first=True)\n)", "description": "This neural network takes an input of shape [181, 94] and produces an output of shape [54, 56]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=231, hidden_size=119, batch_first=True),\n    nn.Conv2d(in_channels=3, out_channels=63, kernel_size=3),\n    nn.LSTM(input_size=119, hidden_size=17, batch_first=True),\n    nn.LSTM(input_size=17, hidden_size=115, batch_first=True),\n    nn.Conv2d(in_channels=63, out_channels=51, kernel_size=4),\n    nn.Conv3d(in_channels=51, out_channels=9, kernel_size=3)\n)", "description": "This neural network takes an input of shape [3, 231] and produces an output of shape [9, 115]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=211, hidden_size=59, batch_first=True)\n)", "description": "This neural network takes an input of shape [45, 92, 211] and produces an output of shape [45, 92, 59]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=164, out_channels=9, kernel_size=3),\n    nn.Conv2d(in_channels=9, out_channels=22, kernel_size=5),\n    nn.GRU(input_size=256, hidden_size=104, batch_first=True),\n    nn.Linear(in_features=104, out_features=38),\n    nn.LSTM(input_size=38, hidden_size=13, batch_first=True),\n    nn.GRU(input_size=13, hidden_size=122, batch_first=True)\n)", "description": "This neural network takes an input of shape [164, 201, 256] and produces an output of shape [22, 201, 122]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=114, out_channels=51, kernel_size=2),\n    nn.Conv3d(in_channels=51, out_channels=34, kernel_size=2),\n    nn.Conv1d(in_channels=34, out_channels=51, kernel_size=2),\n    nn.LSTM(input_size=51, hidden_size=110, batch_first=True),\n    nn.Linear(in_features=110, out_features=7),\n    nn.Conv3d(in_channels=7, out_channels=28, kernel_size=2),\n    nn.Conv3d(in_channels=28, out_channels=17, kernel_size=2),\n    nn.Linear(in_features=17, out_features=166),\n    nn.Conv3d(in_channels=166, out_channels=28, kernel_size=1),\n    nn.Conv3d(in_channels=28, out_channels=17, kernel_size=4)\n)", "description": "This neural network takes an input of shape [114] and produces an output of shape [17]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=243, out_features=201)\n)", "description": "This neural network takes an input of shape [252, 50, 243] and produces an output of shape [252, 50, 201]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=190, hidden_size=36, batch_first=True),\n    nn.Conv3d(in_channels=79, out_channels=13, kernel_size=3),\n    nn.Linear(in_features=36, out_features=86),\n    nn.LSTM(input_size=86, hidden_size=108, batch_first=True)\n)", "description": "This neural network takes an input of shape [79, 8, 190] and produces an output of shape [13, 8, 108]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=178, out_channels=45, kernel_size=2),\n    nn.LSTM(input_size=45, hidden_size=55, batch_first=True),\n    nn.Conv1d(in_channels=55, out_channels=30, kernel_size=1),\n    nn.Linear(in_features=30, out_features=186),\n    nn.LSTM(input_size=186, hidden_size=84, batch_first=True),\n    nn.Conv2d(in_channels=84, out_channels=32, kernel_size=5),\n    nn.Conv3d(in_channels=32, out_channels=51, kernel_size=4),\n    nn.Conv2d(in_channels=51, out_channels=10, kernel_size=3),\n    nn.Linear(in_features=10, out_features=207)\n)", "description": "This neural network takes an input of shape [178] and produces an output of shape [207]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=249, out_channels=38, kernel_size=5),\n    nn.Conv2d(in_channels=38, out_channels=1, kernel_size=1),\n    nn.Conv2d(in_channels=1, out_channels=29, kernel_size=4),\n    nn.Conv3d(in_channels=29, out_channels=24, kernel_size=2),\n    nn.Conv2d(in_channels=24, out_channels=14, kernel_size=5)\n)", "description": "This neural network takes an input of shape [249] and produces an output of shape [14]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=14, hidden_size=25, batch_first=True),\n    nn.Conv3d(in_channels=51, out_channels=25, kernel_size=3),\n    nn.Conv1d(in_channels=25, out_channels=63, kernel_size=3),\n    nn.Linear(in_features=25, out_features=174),\n    nn.GRU(input_size=174, hidden_size=73, batch_first=True),\n    nn.Linear(in_features=73, out_features=30)\n)", "description": "This neural network takes an input of shape [51, 14] and produces an output of shape [63, 30]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=141, hidden_size=45, batch_first=True),\n    nn.Conv2d(in_channels=88, out_channels=41, kernel_size=1),\n    nn.Conv3d(in_channels=41, out_channels=3, kernel_size=2),\n    nn.GRU(input_size=45, hidden_size=24, batch_first=True),\n    nn.Linear(in_features=24, out_features=60),\n    nn.GRU(input_size=60, hidden_size=114, batch_first=True),\n    nn.Conv3d(in_channels=3, out_channels=30, kernel_size=2)\n)", "description": "This neural network takes an input of shape [88, 141] and produces an output of shape [30, 114]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=189, out_features=122),\n    nn.GRU(input_size=122, hidden_size=90, batch_first=True),\n    nn.LSTM(input_size=90, hidden_size=64, batch_first=True),\n    nn.Conv1d(in_channels=235, out_channels=31, kernel_size=4),\n    nn.Conv2d(in_channels=31, out_channels=52, kernel_size=4),\n    nn.Conv1d(in_channels=52, out_channels=56, kernel_size=1),\n    nn.GRU(input_size=64, hidden_size=17, batch_first=True),\n    nn.Linear(in_features=17, out_features=88),\n    nn.Conv1d(in_channels=56, out_channels=18, kernel_size=4)\n)", "description": "This neural network takes an input of shape [235, 189] and produces an output of shape [18, 88]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=109, hidden_size=126, batch_first=True),\n    nn.GRU(input_size=126, hidden_size=58, batch_first=True),\n    nn.GRU(input_size=58, hidden_size=100, batch_first=True),\n    nn.LSTM(input_size=100, hidden_size=14, batch_first=True),\n    nn.Conv2d(in_channels=43, out_channels=35, kernel_size=4),\n    nn.Linear(in_features=14, out_features=234)\n)", "description": "This neural network takes an input of shape [43, 109] and produces an output of shape [35, 234]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=17, out_channels=14, kernel_size=2),\n    nn.Conv2d(in_channels=14, out_channels=64, kernel_size=5),\n    nn.Conv1d(in_channels=64, out_channels=40, kernel_size=3),\n    nn.Conv1d(in_channels=40, out_channels=50, kernel_size=1),\n    nn.GRU(input_size=96, hidden_size=94, batch_first=True),\n    nn.GRU(input_size=94, hidden_size=20, batch_first=True),\n    nn.LSTM(input_size=20, hidden_size=101, batch_first=True),\n    nn.Conv1d(in_channels=50, out_channels=6, kernel_size=5),\n    nn.Linear(in_features=101, out_features=170)\n)", "description": "This neural network takes an input of shape [17, 7, 96] and produces an output of shape [6, 7, 170]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=70, out_channels=31, kernel_size=3),\n    nn.Conv3d(in_channels=31, out_channels=54, kernel_size=5),\n    nn.LSTM(input_size=29, hidden_size=3, batch_first=True)\n)", "description": "This neural network takes an input of shape [70, 29] and produces an output of shape [54, 3]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=98, out_features=226),\n    nn.Linear(in_features=226, out_features=221),\n    nn.Linear(in_features=221, out_features=192)\n)", "description": "This neural network takes an input of shape [98] and produces an output of shape [192]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=158, out_channels=56, kernel_size=4),\n    nn.LSTM(input_size=142, hidden_size=1, batch_first=True),\n    nn.Conv2d(in_channels=56, out_channels=46, kernel_size=2),\n    nn.Linear(in_features=1, out_features=200),\n    nn.Linear(in_features=200, out_features=248),\n    nn.LSTM(input_size=248, hidden_size=125, batch_first=True),\n    nn.Conv1d(in_channels=46, out_channels=28, kernel_size=3),\n    nn.Linear(in_features=125, out_features=196),\n    nn.Linear(in_features=196, out_features=124)\n)", "description": "This neural network takes an input of shape [158, 142] and produces an output of shape [28, 124]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=215, hidden_size=97, batch_first=True),\n    nn.GRU(input_size=97, hidden_size=83, batch_first=True),\n    nn.GRU(input_size=83, hidden_size=35, batch_first=True),\n    nn.Conv3d(in_channels=35, out_channels=55, kernel_size=4)\n)", "description": "This neural network takes an input of shape [215] and produces an output of shape [55]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=43, out_features=60),\n    nn.Conv3d(in_channels=236, out_channels=63, kernel_size=1),\n    nn.LSTM(input_size=60, hidden_size=94, batch_first=True),\n    nn.Conv3d(in_channels=63, out_channels=40, kernel_size=5),\n    nn.LSTM(input_size=94, hidden_size=128, batch_first=True)\n)", "description": "This neural network takes an input of shape [236, 23, 43] and produces an output of shape [40, 23, 128]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=132, out_features=151),\n    nn.Conv3d(in_channels=202, out_channels=52, kernel_size=1),\n    nn.Conv3d(in_channels=52, out_channels=64, kernel_size=2),\n    nn.GRU(input_size=151, hidden_size=72, batch_first=True),\n    nn.GRU(input_size=72, hidden_size=124, batch_first=True)\n)", "description": "This neural network takes an input of shape [202, 132] and produces an output of shape [64, 124]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=197, out_channels=9, kernel_size=3),\n    nn.Conv3d(in_channels=9, out_channels=63, kernel_size=5),\n    nn.Conv3d(in_channels=63, out_channels=3, kernel_size=5),\n    nn.Conv1d(in_channels=3, out_channels=4, kernel_size=5),\n    nn.LSTM(input_size=94, hidden_size=75, batch_first=True),\n    nn.Conv3d(in_channels=4, out_channels=12, kernel_size=2),\n    nn.GRU(input_size=75, hidden_size=4, batch_first=True)\n)", "description": "This neural network takes an input of shape [197, 94] and produces an output of shape [12, 4]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=94, out_features=140),\n    nn.Conv1d(in_channels=68, out_channels=62, kernel_size=2),\n    nn.Conv3d(in_channels=62, out_channels=38, kernel_size=4),\n    nn.GRU(input_size=140, hidden_size=31, batch_first=True),\n    nn.LSTM(input_size=31, hidden_size=90, batch_first=True)\n)", "description": "This neural network takes an input of shape [68, 94] and produces an output of shape [38, 90]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=215, out_features=241),\n    nn.Linear(in_features=241, out_features=150),\n    nn.Conv1d(in_channels=29, out_channels=48, kernel_size=1),\n    nn.Conv2d(in_channels=48, out_channels=14, kernel_size=1),\n    nn.LSTM(input_size=150, hidden_size=111, batch_first=True),\n    nn.Linear(in_features=111, out_features=127)\n)", "description": "This neural network takes an input of shape [29, 215] and produces an output of shape [14, 127]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=89, out_features=224),\n    nn.Conv2d(in_channels=70, out_channels=3, kernel_size=1),\n    nn.Conv1d(in_channels=3, out_channels=2, kernel_size=2),\n    nn.LSTM(input_size=224, hidden_size=128, batch_first=True),\n    nn.Conv2d(in_channels=2, out_channels=12, kernel_size=1),\n    nn.Linear(in_features=128, out_features=189),\n    nn.Linear(in_features=189, out_features=181)\n)", "description": "This neural network takes an input of shape [70, 173, 89] and produces an output of shape [12, 173, 181]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=18, out_channels=48, kernel_size=5),\n    nn.Conv1d(in_channels=48, out_channels=40, kernel_size=4),\n    nn.Conv3d(in_channels=40, out_channels=33, kernel_size=4),\n    nn.GRU(input_size=33, hidden_size=114, batch_first=True),\n    nn.Conv3d(in_channels=114, out_channels=4, kernel_size=5),\n    nn.Linear(in_features=4, out_features=172),\n    nn.Linear(in_features=172, out_features=82),\n    nn.LSTM(input_size=82, hidden_size=64, batch_first=True),\n    nn.Conv3d(in_channels=64, out_channels=4, kernel_size=2)\n)", "description": "This neural network takes an input of shape [18] and produces an output of shape [4]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=35, out_channels=15, kernel_size=1),\n    nn.Conv1d(in_channels=15, out_channels=37, kernel_size=5),\n    nn.Conv3d(in_channels=37, out_channels=18, kernel_size=5),\n    nn.Conv1d(in_channels=18, out_channels=9, kernel_size=2),\n    nn.Linear(in_features=180, out_features=66),\n    nn.Conv1d(in_channels=9, out_channels=33, kernel_size=3),\n    nn.LSTM(input_size=66, hidden_size=62, batch_first=True),\n    nn.Linear(in_features=62, out_features=171)\n)", "description": "This neural network takes an input of shape [35, 180] and produces an output of shape [33, 171]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=139, out_features=5),\n    nn.Conv3d(in_channels=149, out_channels=42, kernel_size=4)\n)", "description": "This neural network takes an input of shape [149, 252, 139] and produces an output of shape [42, 252, 5]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=117, hidden_size=77, batch_first=True),\n    nn.Conv3d(in_channels=64, out_channels=22, kernel_size=2),\n    nn.GRU(input_size=77, hidden_size=94, batch_first=True),\n    nn.LSTM(input_size=94, hidden_size=24, batch_first=True)\n)", "description": "This neural network takes an input of shape [64, 178, 117] and produces an output of shape [22, 178, 24]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=140, out_channels=50, kernel_size=5),\n    nn.Conv2d(in_channels=50, out_channels=32, kernel_size=1),\n    nn.Linear(in_features=59, out_features=151),\n    nn.LSTM(input_size=151, hidden_size=69, batch_first=True),\n    nn.Conv1d(in_channels=32, out_channels=4, kernel_size=2),\n    nn.Conv1d(in_channels=4, out_channels=10, kernel_size=3)\n)", "description": "This neural network takes an input of shape [140, 59] and produces an output of shape [10, 69]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=17, hidden_size=115, batch_first=True),\n    nn.Linear(in_features=115, out_features=173),\n    nn.Conv2d(in_channels=107, out_channels=64, kernel_size=2),\n    nn.GRU(input_size=173, hidden_size=84, batch_first=True),\n    nn.Conv3d(in_channels=64, out_channels=8, kernel_size=1),\n    nn.Linear(in_features=84, out_features=43),\n    nn.GRU(input_size=43, hidden_size=94, batch_first=True),\n    nn.Conv2d(in_channels=8, out_channels=10, kernel_size=4)\n)", "description": "This neural network takes an input of shape [107, 222, 17] and produces an output of shape [10, 222, 94]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=211, hidden_size=30, batch_first=True),\n    nn.Conv1d(in_channels=68, out_channels=54, kernel_size=2),\n    nn.Conv2d(in_channels=54, out_channels=8, kernel_size=4)\n)", "description": "This neural network takes an input of shape [68, 219, 211] and produces an output of shape [8, 219, 30]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=247, out_features=243),\n    nn.GRU(input_size=243, hidden_size=80, batch_first=True)\n)", "description": "This neural network takes an input of shape [120, 39, 247] and produces an output of shape [120, 39, 80]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=55, hidden_size=12, batch_first=True),\n    nn.Linear(in_features=12, out_features=166)\n)", "description": "This neural network takes an input of shape [166, 55] and produces an output of shape [166, 166]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=137, out_channels=27, kernel_size=2),\n    nn.GRU(input_size=249, hidden_size=61, batch_first=True),\n    nn.Conv2d(in_channels=27, out_channels=8, kernel_size=4),\n    nn.LSTM(input_size=61, hidden_size=62, batch_first=True)\n)", "description": "This neural network takes an input of shape [137, 249] and produces an output of shape [8, 62]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=151, out_features=190),\n    nn.Linear(in_features=190, out_features=8),\n    nn.Linear(in_features=8, out_features=144),\n    nn.Conv3d(in_channels=133, out_channels=4, kernel_size=3),\n    nn.Linear(in_features=144, out_features=36)\n)", "description": "This neural network takes an input of shape [133, 151] and produces an output of shape [4, 36]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=135, hidden_size=93, batch_first=True)\n)", "description": "This neural network takes an input of shape [57, 135] and produces an output of shape [57, 93]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=245, out_features=227),\n    nn.Conv1d(in_channels=3, out_channels=6, kernel_size=2),\n    nn.Linear(in_features=227, out_features=230),\n    nn.LSTM(input_size=230, hidden_size=13, batch_first=True),\n    nn.Conv3d(in_channels=6, out_channels=57, kernel_size=4)\n)", "description": "This neural network takes an input of shape [3, 132, 245] and produces an output of shape [57, 132, 13]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=86, out_channels=57, kernel_size=5),\n    nn.GRU(input_size=50, hidden_size=71, batch_first=True),\n    nn.LSTM(input_size=71, hidden_size=43, batch_first=True),\n    nn.Conv1d(in_channels=57, out_channels=32, kernel_size=1),\n    nn.Conv1d(in_channels=32, out_channels=26, kernel_size=2)\n)", "description": "This neural network takes an input of shape [86, 253, 50] and produces an output of shape [26, 253, 43]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=238, out_channels=43, kernel_size=2),\n    nn.GRU(input_size=146, hidden_size=90, batch_first=True),\n    nn.Linear(in_features=90, out_features=7),\n    nn.Conv1d(in_channels=43, out_channels=12, kernel_size=4),\n    nn.Conv3d(in_channels=12, out_channels=35, kernel_size=3),\n    nn.Conv2d(in_channels=35, out_channels=47, kernel_size=5),\n    nn.Conv1d(in_channels=47, out_channels=3, kernel_size=4),\n    nn.Linear(in_features=7, out_features=234)\n)", "description": "This neural network takes an input of shape [238, 146] and produces an output of shape [3, 234]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=61, out_features=58),\n    nn.Conv3d(in_channels=107, out_channels=17, kernel_size=2),\n    nn.GRU(input_size=58, hidden_size=25, batch_first=True),\n    nn.Conv2d(in_channels=17, out_channels=43, kernel_size=5),\n    nn.GRU(input_size=25, hidden_size=79, batch_first=True),\n    nn.Conv3d(in_channels=43, out_channels=21, kernel_size=5),\n    nn.Conv1d(in_channels=21, out_channels=12, kernel_size=2),\n    nn.Conv3d(in_channels=12, out_channels=48, kernel_size=4)\n)", "description": "This neural network takes an input of shape [107, 143, 61] and produces an output of shape [48, 143, 79]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=207, out_features=29),\n    nn.Conv1d(in_channels=252, out_channels=61, kernel_size=5),\n    nn.LSTM(input_size=29, hidden_size=12, batch_first=True),\n    nn.Conv3d(in_channels=61, out_channels=8, kernel_size=4),\n    nn.GRU(input_size=12, hidden_size=52, batch_first=True),\n    nn.Conv3d(in_channels=8, out_channels=2, kernel_size=5),\n    nn.GRU(input_size=52, hidden_size=125, batch_first=True),\n    nn.GRU(input_size=125, hidden_size=33, batch_first=True)\n)", "description": "This neural network takes an input of shape [252, 36, 207] and produces an output of shape [2, 36, 33]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=95, out_channels=7, kernel_size=3),\n    nn.GRU(input_size=74, hidden_size=78, batch_first=True),\n    nn.Linear(in_features=78, out_features=135),\n    nn.Conv2d(in_channels=7, out_channels=50, kernel_size=5)\n)", "description": "This neural network takes an input of shape [95, 200, 74] and produces an output of shape [50, 200, 135]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=54, out_channels=64, kernel_size=3),\n    nn.Conv3d(in_channels=64, out_channels=51, kernel_size=2),\n    nn.GRU(input_size=183, hidden_size=127, batch_first=True),\n    nn.Conv3d(in_channels=51, out_channels=1, kernel_size=4),\n    nn.LSTM(input_size=127, hidden_size=98, batch_first=True),\n    nn.Linear(in_features=98, out_features=247),\n    nn.GRU(input_size=247, hidden_size=25, batch_first=True),\n    nn.Conv2d(in_channels=1, out_channels=3, kernel_size=2),\n    nn.Conv1d(in_channels=3, out_channels=26, kernel_size=5)\n)", "description": "This neural network takes an input of shape [54, 85, 183] and produces an output of shape [26, 85, 25]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=65, out_channels=38, kernel_size=3),\n    nn.Conv3d(in_channels=38, out_channels=20, kernel_size=1),\n    nn.Conv2d(in_channels=20, out_channels=26, kernel_size=3),\n    nn.Conv3d(in_channels=26, out_channels=51, kernel_size=4),\n    nn.Conv2d(in_channels=51, out_channels=50, kernel_size=3),\n    nn.Conv1d(in_channels=50, out_channels=18, kernel_size=1)\n)", "description": "This neural network takes an input of shape [65, 194, 15] and produces an output of shape [18, 194, 15]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=8, out_features=207),\n    nn.Conv1d(in_channels=50, out_channels=19, kernel_size=5),\n    nn.Conv1d(in_channels=19, out_channels=26, kernel_size=3),\n    nn.Conv2d(in_channels=26, out_channels=62, kernel_size=1),\n    nn.Linear(in_features=207, out_features=140)\n)", "description": "This neural network takes an input of shape [50, 8] and produces an output of shape [62, 140]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=144, out_channels=57, kernel_size=1),\n    nn.Linear(in_features=178, out_features=9),\n    nn.GRU(input_size=9, hidden_size=55, batch_first=True),\n    nn.Conv2d(in_channels=57, out_channels=2, kernel_size=2),\n    nn.Conv1d(in_channels=2, out_channels=24, kernel_size=4),\n    nn.GRU(input_size=55, hidden_size=78, batch_first=True),\n    nn.Conv1d(in_channels=24, out_channels=30, kernel_size=2),\n    nn.GRU(input_size=78, hidden_size=30, batch_first=True),\n    nn.GRU(input_size=30, hidden_size=30, batch_first=True)\n)", "description": "This neural network takes an input of shape [144, 178] and produces an output of shape [30, 30]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=12, hidden_size=84, batch_first=True),\n    nn.Conv1d(in_channels=117, out_channels=1, kernel_size=1)\n)", "description": "This neural network takes an input of shape [117, 12] and produces an output of shape [1, 84]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=62, out_channels=44, kernel_size=5),\n    nn.Conv2d(in_channels=44, out_channels=23, kernel_size=2),\n    nn.LSTM(input_size=23, hidden_size=86, batch_first=True),\n    nn.LSTM(input_size=86, hidden_size=114, batch_first=True),\n    nn.Conv1d(in_channels=114, out_channels=32, kernel_size=2),\n    nn.GRU(input_size=32, hidden_size=19, batch_first=True)\n)", "description": "This neural network takes an input of shape [62] and produces an output of shape [19]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=24, out_features=227),\n    nn.Conv1d(in_channels=227, out_channels=36, kernel_size=2),\n    nn.LSTM(input_size=36, hidden_size=57, batch_first=True),\n    nn.Linear(in_features=57, out_features=122),\n    nn.GRU(input_size=122, hidden_size=119, batch_first=True),\n    nn.Conv3d(in_channels=119, out_channels=49, kernel_size=4),\n    nn.Conv1d(in_channels=49, out_channels=45, kernel_size=2),\n    nn.Conv2d(in_channels=45, out_channels=26, kernel_size=2),\n    nn.Conv2d(in_channels=26, out_channels=33, kernel_size=5),\n    nn.LSTM(input_size=33, hidden_size=101, batch_first=True)\n)", "description": "This neural network takes an input of shape [24] and produces an output of shape [101]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=57, hidden_size=53, batch_first=True),\n    nn.Conv2d(in_channels=101, out_channels=60, kernel_size=2),\n    nn.Conv2d(in_channels=60, out_channels=28, kernel_size=1),\n    nn.Conv2d(in_channels=28, out_channels=2, kernel_size=5),\n    nn.Conv1d(in_channels=2, out_channels=7, kernel_size=4)\n)", "description": "This neural network takes an input of shape [101, 57] and produces an output of shape [7, 53]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=175, out_features=117),\n    nn.Conv3d(in_channels=5, out_channels=59, kernel_size=3),\n    nn.Linear(in_features=117, out_features=56),\n    nn.Conv1d(in_channels=59, out_channels=31, kernel_size=3)\n)", "description": "This neural network takes an input of shape [5, 195, 175] and produces an output of shape [31, 195, 56]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=116, out_channels=57, kernel_size=2),\n    nn.GRU(input_size=57, hidden_size=34, batch_first=True),\n    nn.GRU(input_size=34, hidden_size=75, batch_first=True),\n    nn.LSTM(input_size=75, hidden_size=30, batch_first=True)\n)", "description": "This neural network takes an input of shape [116] and produces an output of shape [30]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=99, hidden_size=15, batch_first=True)\n)", "description": "This neural network takes an input of shape [229, 181, 99] and produces an output of shape [229, 181, 15]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=175, out_channels=32, kernel_size=4),\n    nn.GRU(input_size=125, hidden_size=39, batch_first=True),\n    nn.Conv1d(in_channels=32, out_channels=46, kernel_size=5),\n    nn.Conv3d(in_channels=46, out_channels=6, kernel_size=5),\n    nn.Linear(in_features=39, out_features=254),\n    nn.LSTM(input_size=254, hidden_size=121, batch_first=True),\n    nn.GRU(input_size=121, hidden_size=73, batch_first=True),\n    nn.Conv1d(in_channels=6, out_channels=7, kernel_size=1)\n)", "description": "This neural network takes an input of shape [175, 137, 125] and produces an output of shape [7, 137, 73]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=52, out_channels=53, kernel_size=1),\n    nn.GRU(input_size=53, hidden_size=89, batch_first=True),\n    nn.Conv1d(in_channels=89, out_channels=56, kernel_size=4),\n    nn.LSTM(input_size=56, hidden_size=111, batch_first=True),\n    nn.Conv2d(in_channels=111, out_channels=16, kernel_size=4),\n    nn.Conv2d(in_channels=16, out_channels=7, kernel_size=4),\n    nn.Conv1d(in_channels=7, out_channels=35, kernel_size=4)\n)", "description": "This neural network takes an input of shape [52] and produces an output of shape [35]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=212, hidden_size=52, batch_first=True),\n    nn.LSTM(input_size=52, hidden_size=122, batch_first=True)\n)", "description": "This neural network takes an input of shape [235, 212] and produces an output of shape [235, 122]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=79, out_channels=64, kernel_size=4),\n    nn.Conv2d(in_channels=64, out_channels=28, kernel_size=4),\n    nn.LSTM(input_size=1, hidden_size=51, batch_first=True),\n    nn.Conv2d(in_channels=28, out_channels=48, kernel_size=3),\n    nn.Conv1d(in_channels=48, out_channels=11, kernel_size=3),\n    nn.GRU(input_size=51, hidden_size=107, batch_first=True),\n    nn.Linear(in_features=107, out_features=209),\n    nn.Conv3d(in_channels=11, out_channels=2, kernel_size=3)\n)", "description": "This neural network takes an input of shape [79, 227, 1] and produces an output of shape [2, 227, 209]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=36, hidden_size=7, batch_first=True),\n    nn.Linear(in_features=7, out_features=150),\n    nn.Linear(in_features=150, out_features=200),\n    nn.LSTM(input_size=200, hidden_size=53, batch_first=True),\n    nn.GRU(input_size=53, hidden_size=107, batch_first=True)\n)", "description": "This neural network takes an input of shape [36] and produces an output of shape [107]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=173, hidden_size=73, batch_first=True),\n    nn.Conv1d(in_channels=155, out_channels=61, kernel_size=4),\n    nn.Conv3d(in_channels=61, out_channels=27, kernel_size=3),\n    nn.Conv1d(in_channels=27, out_channels=51, kernel_size=4),\n    nn.GRU(input_size=73, hidden_size=28, batch_first=True),\n    nn.LSTM(input_size=28, hidden_size=71, batch_first=True)\n)", "description": "This neural network takes an input of shape [155, 238, 173] and produces an output of shape [51, 238, 71]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=21, out_features=56),\n    nn.Conv3d(in_channels=56, out_channels=9, kernel_size=5),\n    nn.Conv3d(in_channels=9, out_channels=13, kernel_size=4),\n    nn.Conv3d(in_channels=13, out_channels=17, kernel_size=5)\n)", "description": "This neural network takes an input of shape [21] and produces an output of shape [17]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=61, out_features=138),\n    nn.Conv3d(in_channels=240, out_channels=25, kernel_size=4),\n    nn.Conv1d(in_channels=25, out_channels=48, kernel_size=3),\n    nn.GRU(input_size=138, hidden_size=88, batch_first=True),\n    nn.Conv2d(in_channels=48, out_channels=30, kernel_size=4),\n    nn.Linear(in_features=88, out_features=20)\n)", "description": "This neural network takes an input of shape [240, 253, 61] and produces an output of shape [30, 253, 20]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=117, out_channels=39, kernel_size=5)\n)", "description": "This neural network takes an input of shape [117, 251, 15] and produces an output of shape [39, 251, 15]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=134, out_channels=37, kernel_size=2),\n    nn.Conv1d(in_channels=37, out_channels=39, kernel_size=4),\n    nn.Linear(in_features=177, out_features=190),\n    nn.Conv2d(in_channels=39, out_channels=13, kernel_size=3),\n    nn.Conv2d(in_channels=13, out_channels=2, kernel_size=5),\n    nn.Conv3d(in_channels=2, out_channels=25, kernel_size=2),\n    nn.Linear(in_features=190, out_features=213),\n    nn.GRU(input_size=213, hidden_size=108, batch_first=True),\n    nn.Conv2d(in_channels=25, out_channels=16, kernel_size=4),\n    nn.Conv2d(in_channels=16, out_channels=48, kernel_size=3)\n)", "description": "This neural network takes an input of shape [134, 143, 177] and produces an output of shape [48, 143, 108]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=125, hidden_size=4, batch_first=True),\n    nn.Conv1d(in_channels=10, out_channels=41, kernel_size=2),\n    nn.Conv3d(in_channels=41, out_channels=29, kernel_size=1),\n    nn.Conv1d(in_channels=29, out_channels=2, kernel_size=5),\n    nn.Conv1d(in_channels=2, out_channels=32, kernel_size=2)\n)", "description": "This neural network takes an input of shape [10, 247, 125] and produces an output of shape [32, 247, 4]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=31, out_features=76),\n    nn.GRU(input_size=76, hidden_size=31, batch_first=True),\n    nn.Conv2d(in_channels=154, out_channels=50, kernel_size=1),\n    nn.Conv3d(in_channels=50, out_channels=60, kernel_size=2),\n    nn.Conv1d(in_channels=60, out_channels=12, kernel_size=2),\n    nn.LSTM(input_size=31, hidden_size=29, batch_first=True),\n    nn.GRU(input_size=29, hidden_size=11, batch_first=True),\n    nn.GRU(input_size=11, hidden_size=70, batch_first=True),\n    nn.Conv3d(in_channels=12, out_channels=4, kernel_size=1)\n)", "description": "This neural network takes an input of shape [154, 212, 31] and produces an output of shape [4, 212, 70]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=149, hidden_size=3, batch_first=True),\n    nn.Conv2d(in_channels=243, out_channels=44, kernel_size=4),\n    nn.Linear(in_features=3, out_features=17),\n    nn.Conv3d(in_channels=44, out_channels=29, kernel_size=3)\n)", "description": "This neural network takes an input of shape [243, 17, 149] and produces an output of shape [29, 17, 17]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=224, out_channels=51, kernel_size=1),\n    nn.Linear(in_features=183, out_features=211),\n    nn.Conv2d(in_channels=51, out_channels=26, kernel_size=4)\n)", "description": "This neural network takes an input of shape [224, 183] and produces an output of shape [26, 211]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=179, hidden_size=5, batch_first=True),\n    nn.LSTM(input_size=5, hidden_size=115, batch_first=True),\n    nn.Conv3d(in_channels=115, out_channels=26, kernel_size=3)\n)", "description": "This neural network takes an input of shape [179] and produces an output of shape [26]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=13, hidden_size=117, batch_first=True),\n    nn.LSTM(input_size=117, hidden_size=90, batch_first=True),\n    nn.GRU(input_size=90, hidden_size=23, batch_first=True),\n    nn.Conv3d(in_channels=132, out_channels=52, kernel_size=2)\n)", "description": "This neural network takes an input of shape [132, 8, 13] and produces an output of shape [52, 8, 23]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=17, out_channels=52, kernel_size=1),\n    nn.LSTM(input_size=103, hidden_size=116, batch_first=True),\n    nn.Linear(in_features=116, out_features=183),\n    nn.GRU(input_size=183, hidden_size=106, batch_first=True),\n    nn.Conv3d(in_channels=52, out_channels=61, kernel_size=1),\n    nn.LSTM(input_size=106, hidden_size=124, batch_first=True)\n)", "description": "This neural network takes an input of shape [17, 123, 103] and produces an output of shape [61, 123, 124]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=92, out_features=195),\n    nn.Conv3d(in_channels=33, out_channels=54, kernel_size=3),\n    nn.Conv3d(in_channels=54, out_channels=32, kernel_size=2),\n    nn.Conv3d(in_channels=32, out_channels=54, kernel_size=5),\n    nn.LSTM(input_size=195, hidden_size=77, batch_first=True),\n    nn.Conv3d(in_channels=54, out_channels=53, kernel_size=5),\n    nn.GRU(input_size=77, hidden_size=107, batch_first=True),\n    nn.Conv1d(in_channels=53, out_channels=22, kernel_size=3)\n)", "description": "This neural network takes an input of shape [33, 84, 92] and produces an output of shape [22, 84, 107]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=255, out_features=105),\n    nn.Conv2d(in_channels=131, out_channels=34, kernel_size=5)\n)", "description": "This neural network takes an input of shape [131, 255] and produces an output of shape [34, 105]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=125, hidden_size=52, batch_first=True),\n    nn.LSTM(input_size=52, hidden_size=78, batch_first=True),\n    nn.Linear(in_features=78, out_features=177),\n    nn.LSTM(input_size=177, hidden_size=47, batch_first=True)\n)", "description": "This neural network takes an input of shape [125] and produces an output of shape [47]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=242, out_features=169)\n)", "description": "This neural network takes an input of shape [242] and produces an output of shape [169]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=241, out_channels=47, kernel_size=2),\n    nn.Linear(in_features=175, out_features=143),\n    nn.Conv2d(in_channels=47, out_channels=44, kernel_size=1),\n    nn.GRU(input_size=143, hidden_size=13, batch_first=True),\n    nn.GRU(input_size=13, hidden_size=110, batch_first=True),\n    nn.Linear(in_features=110, out_features=73),\n    nn.Conv3d(in_channels=44, out_channels=43, kernel_size=3),\n    nn.Conv3d(in_channels=43, out_channels=61, kernel_size=4),\n    nn.Conv3d(in_channels=61, out_channels=38, kernel_size=1),\n    nn.GRU(input_size=73, hidden_size=5, batch_first=True)\n)", "description": "This neural network takes an input of shape [241, 245, 175] and produces an output of shape [38, 245, 5]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=172, hidden_size=65, batch_first=True),\n    nn.LSTM(input_size=65, hidden_size=128, batch_first=True),\n    nn.Conv2d(in_channels=146, out_channels=57, kernel_size=2),\n    nn.GRU(input_size=128, hidden_size=1, batch_first=True),\n    nn.Conv3d(in_channels=57, out_channels=47, kernel_size=2),\n    nn.Conv1d(in_channels=47, out_channels=54, kernel_size=1),\n    nn.Conv1d(in_channels=54, out_channels=43, kernel_size=4),\n    nn.LSTM(input_size=1, hidden_size=74, batch_first=True),\n    nn.Conv3d(in_channels=43, out_channels=51, kernel_size=1)\n)", "description": "This neural network takes an input of shape [146, 172] and produces an output of shape [51, 74]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=255, out_channels=44, kernel_size=2),\n    nn.Conv2d(in_channels=44, out_channels=22, kernel_size=3),\n    nn.Conv2d(in_channels=22, out_channels=24, kernel_size=3),\n    nn.LSTM(input_size=42, hidden_size=112, batch_first=True),\n    nn.LSTM(input_size=112, hidden_size=125, batch_first=True),\n    nn.Linear(in_features=125, out_features=171)\n)", "description": "This neural network takes an input of shape [255, 42] and produces an output of shape [24, 171]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=227, out_channels=31, kernel_size=3),\n    nn.LSTM(input_size=135, hidden_size=116, batch_first=True),\n    nn.GRU(input_size=116, hidden_size=17, batch_first=True),\n    nn.Conv1d(in_channels=31, out_channels=40, kernel_size=5),\n    nn.Conv3d(in_channels=40, out_channels=46, kernel_size=3),\n    nn.Conv2d(in_channels=46, out_channels=26, kernel_size=1),\n    nn.Conv2d(in_channels=26, out_channels=28, kernel_size=3),\n    nn.LSTM(input_size=17, hidden_size=100, batch_first=True),\n    nn.GRU(input_size=100, hidden_size=80, batch_first=True),\n    nn.Conv2d(in_channels=28, out_channels=24, kernel_size=3)\n)", "description": "This neural network takes an input of shape [227, 135] and produces an output of shape [24, 80]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=105, hidden_size=41, batch_first=True),\n    nn.LSTM(input_size=41, hidden_size=127, batch_first=True),\n    nn.Conv1d(in_channels=191, out_channels=18, kernel_size=5),\n    nn.LSTM(input_size=127, hidden_size=110, batch_first=True),\n    nn.Conv1d(in_channels=18, out_channels=39, kernel_size=4)\n)", "description": "This neural network takes an input of shape [191, 105] and produces an output of shape [39, 110]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=30, hidden_size=28, batch_first=True)\n)", "description": "This neural network takes an input of shape [30] and produces an output of shape [28]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=44, out_features=74),\n    nn.Conv3d(in_channels=74, out_channels=13, kernel_size=1),\n    nn.GRU(input_size=13, hidden_size=69, batch_first=True),\n    nn.Linear(in_features=69, out_features=35)\n)", "description": "This neural network takes an input of shape [44] and produces an output of shape [35]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=220, out_channels=52, kernel_size=1),\n    nn.GRU(input_size=108, hidden_size=105, batch_first=True),\n    nn.Conv1d(in_channels=52, out_channels=57, kernel_size=1),\n    nn.LSTM(input_size=105, hidden_size=35, batch_first=True),\n    nn.GRU(input_size=35, hidden_size=97, batch_first=True),\n    nn.LSTM(input_size=97, hidden_size=90, batch_first=True),\n    nn.GRU(input_size=90, hidden_size=81, batch_first=True)\n)", "description": "This neural network takes an input of shape [220, 108] and produces an output of shape [57, 81]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=40, out_channels=11, kernel_size=4),\n    nn.GRU(input_size=206, hidden_size=96, batch_first=True)\n)", "description": "This neural network takes an input of shape [40, 124, 206] and produces an output of shape [11, 124, 96]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=151, out_channels=1, kernel_size=1),\n    nn.LSTM(input_size=1, hidden_size=112, batch_first=True),\n    nn.Conv2d(in_channels=112, out_channels=11, kernel_size=1),\n    nn.Conv3d(in_channels=11, out_channels=24, kernel_size=4),\n    nn.Conv3d(in_channels=24, out_channels=53, kernel_size=2),\n    nn.Conv3d(in_channels=53, out_channels=54, kernel_size=4),\n    nn.Conv3d(in_channels=54, out_channels=35, kernel_size=5),\n    nn.Conv2d(in_channels=35, out_channels=43, kernel_size=2),\n    nn.Linear(in_features=43, out_features=218)\n)", "description": "This neural network takes an input of shape [151] and produces an output of shape [218]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=41, hidden_size=110, batch_first=True),\n    nn.Conv3d(in_channels=110, out_channels=59, kernel_size=3),\n    nn.Conv3d(in_channels=59, out_channels=25, kernel_size=2),\n    nn.GRU(input_size=25, hidden_size=75, batch_first=True),\n    nn.Conv1d(in_channels=75, out_channels=37, kernel_size=3),\n    nn.LSTM(input_size=37, hidden_size=51, batch_first=True),\n    nn.LSTM(input_size=51, hidden_size=33, batch_first=True),\n    nn.Conv2d(in_channels=33, out_channels=33, kernel_size=5),\n    nn.Conv2d(in_channels=33, out_channels=30, kernel_size=4),\n    nn.GRU(input_size=30, hidden_size=88, batch_first=True)\n)", "description": "This neural network takes an input of shape [41] and produces an output of shape [88]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=104, out_features=150),\n    nn.LSTM(input_size=150, hidden_size=111, batch_first=True),\n    nn.Linear(in_features=111, out_features=206),\n    nn.Conv2d(in_channels=206, out_channels=7, kernel_size=5),\n    nn.Conv1d(in_channels=7, out_channels=30, kernel_size=1),\n    nn.Conv3d(in_channels=30, out_channels=3, kernel_size=1),\n    nn.LSTM(input_size=3, hidden_size=12, batch_first=True),\n    nn.Linear(in_features=12, out_features=70),\n    nn.Conv1d(in_channels=70, out_channels=3, kernel_size=1),\n    nn.Linear(in_features=3, out_features=205)\n)", "description": "This neural network takes an input of shape [104] and produces an output of shape [205]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=196, hidden_size=84, batch_first=True),\n    nn.GRU(input_size=84, hidden_size=104, batch_first=True),\n    nn.Conv3d(in_channels=48, out_channels=44, kernel_size=1),\n    nn.Conv1d(in_channels=44, out_channels=19, kernel_size=2),\n    nn.Conv2d(in_channels=19, out_channels=34, kernel_size=2),\n    nn.Conv1d(in_channels=34, out_channels=22, kernel_size=3),\n    nn.GRU(input_size=104, hidden_size=19, batch_first=True)\n)", "description": "This neural network takes an input of shape [48, 196] and produces an output of shape [22, 19]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=173, out_features=124),\n    nn.Conv2d(in_channels=252, out_channels=27, kernel_size=5),\n    nn.GRU(input_size=124, hidden_size=12, batch_first=True),\n    nn.GRU(input_size=12, hidden_size=117, batch_first=True),\n    nn.LSTM(input_size=117, hidden_size=123, batch_first=True),\n    nn.LSTM(input_size=123, hidden_size=119, batch_first=True)\n)", "description": "This neural network takes an input of shape [252, 173] and produces an output of shape [27, 119]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=39, out_channels=62, kernel_size=5),\n    nn.Linear(in_features=53, out_features=243),\n    nn.Linear(in_features=243, out_features=225)\n)", "description": "This neural network takes an input of shape [39, 36, 53] and produces an output of shape [62, 36, 225]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=151, out_channels=54, kernel_size=2),\n    nn.Linear(in_features=179, out_features=78),\n    nn.GRU(input_size=78, hidden_size=80, batch_first=True),\n    nn.Linear(in_features=80, out_features=91),\n    nn.GRU(input_size=91, hidden_size=17, batch_first=True),\n    nn.LSTM(input_size=17, hidden_size=111, batch_first=True),\n    nn.LSTM(input_size=111, hidden_size=78, batch_first=True),\n    nn.Conv3d(in_channels=54, out_channels=44, kernel_size=4),\n    nn.LSTM(input_size=78, hidden_size=34, batch_first=True),\n    nn.LSTM(input_size=34, hidden_size=6, batch_first=True)\n)", "description": "This neural network takes an input of shape [151, 179] and produces an output of shape [44, 6]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=145, out_channels=40, kernel_size=4),\n    nn.Conv2d(in_channels=40, out_channels=15, kernel_size=4),\n    nn.Conv1d(in_channels=15, out_channels=11, kernel_size=4),\n    nn.Conv3d(in_channels=11, out_channels=23, kernel_size=4),\n    nn.Conv1d(in_channels=23, out_channels=57, kernel_size=5),\n    nn.LSTM(input_size=57, hidden_size=96, batch_first=True),\n    nn.GRU(input_size=96, hidden_size=54, batch_first=True),\n    nn.GRU(input_size=54, hidden_size=3, batch_first=True),\n    nn.Conv1d(in_channels=3, out_channels=59, kernel_size=4)\n)", "description": "This neural network takes an input of shape [145] and produces an output of shape [59]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=233, out_channels=46, kernel_size=2)\n)", "description": "This neural network takes an input of shape [233] and produces an output of shape [46]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=206, hidden_size=113, batch_first=True),\n    nn.Linear(in_features=113, out_features=123),\n    nn.GRU(input_size=123, hidden_size=99, batch_first=True),\n    nn.LSTM(input_size=99, hidden_size=84, batch_first=True),\n    nn.Linear(in_features=84, out_features=90),\n    nn.LSTM(input_size=90, hidden_size=95, batch_first=True),\n    nn.Conv2d(in_channels=95, out_channels=12, kernel_size=5),\n    nn.GRU(input_size=12, hidden_size=14, batch_first=True),\n    nn.Linear(in_features=14, out_features=51),\n    nn.GRU(input_size=51, hidden_size=7, batch_first=True)\n)", "description": "This neural network takes an input of shape [206] and produces an output of shape [7]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=132, hidden_size=82, batch_first=True),\n    nn.Linear(in_features=82, out_features=98),\n    nn.Conv3d(in_channels=98, out_channels=20, kernel_size=1),\n    nn.Linear(in_features=20, out_features=210),\n    nn.Linear(in_features=210, out_features=120),\n    nn.Conv2d(in_channels=120, out_channels=14, kernel_size=2)\n)", "description": "This neural network takes an input of shape [132] and produces an output of shape [14]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=101, out_features=3),\n    nn.LSTM(input_size=3, hidden_size=66, batch_first=True),\n    nn.GRU(input_size=66, hidden_size=67, batch_first=True),\n    nn.Linear(in_features=67, out_features=229)\n)", "description": "This neural network takes an input of shape [252, 205, 101] and produces an output of shape [252, 205, 229]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=38, out_channels=20, kernel_size=4)\n)", "description": "This neural network takes an input of shape [38, 77, 18] and produces an output of shape [20, 77, 18]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=234, hidden_size=47, batch_first=True),\n    nn.Conv3d(in_channels=47, out_channels=36, kernel_size=2),\n    nn.Conv2d(in_channels=36, out_channels=62, kernel_size=4),\n    nn.Conv2d(in_channels=62, out_channels=35, kernel_size=4),\n    nn.Linear(in_features=35, out_features=145),\n    nn.GRU(input_size=145, hidden_size=97, batch_first=True),\n    nn.Conv2d(in_channels=97, out_channels=55, kernel_size=3)\n)", "description": "This neural network takes an input of shape [234] and produces an output of shape [55]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=238, out_channels=10, kernel_size=4),\n    nn.Conv1d(in_channels=10, out_channels=59, kernel_size=2),\n    nn.LSTM(input_size=27, hidden_size=51, batch_first=True),\n    nn.LSTM(input_size=51, hidden_size=4, batch_first=True),\n    nn.Conv2d(in_channels=59, out_channels=50, kernel_size=5),\n    nn.Conv3d(in_channels=50, out_channels=60, kernel_size=1),\n    nn.Conv1d(in_channels=60, out_channels=6, kernel_size=4),\n    nn.Conv1d(in_channels=6, out_channels=64, kernel_size=1),\n    nn.LSTM(input_size=4, hidden_size=102, batch_first=True)\n)", "description": "This neural network takes an input of shape [238, 27] and produces an output of shape [64, 102]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=21, out_channels=9, kernel_size=2),\n    nn.Conv2d(in_channels=9, out_channels=40, kernel_size=5),\n    nn.Conv3d(in_channels=40, out_channels=13, kernel_size=1),\n    nn.Linear(in_features=156, out_features=59),\n    nn.Conv3d(in_channels=13, out_channels=56, kernel_size=1),\n    nn.Conv3d(in_channels=56, out_channels=1, kernel_size=1),\n    nn.LSTM(input_size=59, hidden_size=36, batch_first=True),\n    nn.Conv1d(in_channels=1, out_channels=1, kernel_size=5)\n)", "description": "This neural network takes an input of shape [21, 156] and produces an output of shape [1, 36]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=24, hidden_size=27, batch_first=True)\n)", "description": "This neural network takes an input of shape [24] and produces an output of shape [27]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=205, out_channels=36, kernel_size=2),\n    nn.Conv1d(in_channels=36, out_channels=18, kernel_size=5),\n    nn.GRU(input_size=119, hidden_size=108, batch_first=True),\n    nn.Conv3d(in_channels=18, out_channels=55, kernel_size=3),\n    nn.GRU(input_size=108, hidden_size=43, batch_first=True),\n    nn.Conv3d(in_channels=55, out_channels=19, kernel_size=3),\n    nn.Conv1d(in_channels=19, out_channels=60, kernel_size=3),\n    nn.LSTM(input_size=43, hidden_size=84, batch_first=True),\n    nn.Conv1d(in_channels=60, out_channels=58, kernel_size=1),\n    nn.Conv2d(in_channels=58, out_channels=47, kernel_size=4)\n)", "description": "This neural network takes an input of shape [205, 19, 119] and produces an output of shape [47, 19, 84]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=86, out_channels=2, kernel_size=2),\n    nn.LSTM(input_size=166, hidden_size=105, batch_first=True),\n    nn.Conv1d(in_channels=2, out_channels=56, kernel_size=5),\n    nn.LSTM(input_size=105, hidden_size=108, batch_first=True),\n    nn.GRU(input_size=108, hidden_size=83, batch_first=True),\n    nn.Linear(in_features=83, out_features=17),\n    nn.LSTM(input_size=17, hidden_size=100, batch_first=True)\n)", "description": "This neural network takes an input of shape [86, 166] and produces an output of shape [56, 100]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=213, hidden_size=25, batch_first=True),\n    nn.LSTM(input_size=25, hidden_size=83, batch_first=True),\n    nn.Linear(in_features=83, out_features=231)\n)", "description": "This neural network takes an input of shape [213] and produces an output of shape [231]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=80, out_channels=35, kernel_size=4),\n    nn.Conv3d(in_channels=35, out_channels=2, kernel_size=5),\n    nn.Conv2d(in_channels=2, out_channels=38, kernel_size=3),\n    nn.Conv3d(in_channels=38, out_channels=9, kernel_size=5),\n    nn.Conv1d(in_channels=9, out_channels=44, kernel_size=4),\n    nn.Conv1d(in_channels=44, out_channels=42, kernel_size=2)\n)", "description": "This neural network takes an input of shape [80, 216, 211] and produces an output of shape [42, 216, 211]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=126, out_channels=31, kernel_size=3),\n    nn.GRU(input_size=26, hidden_size=116, batch_first=True),\n    nn.GRU(input_size=116, hidden_size=118, batch_first=True),\n    nn.Conv3d(in_channels=31, out_channels=15, kernel_size=1),\n    nn.Conv1d(in_channels=15, out_channels=64, kernel_size=2),\n    nn.Conv3d(in_channels=64, out_channels=44, kernel_size=2)\n)", "description": "This neural network takes an input of shape [126, 182, 26] and produces an output of shape [44, 182, 118]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=48, hidden_size=23, batch_first=True),\n    nn.Linear(in_features=23, out_features=53),\n    nn.Conv3d(in_channels=91, out_channels=63, kernel_size=2),\n    nn.GRU(input_size=53, hidden_size=95, batch_first=True),\n    nn.Conv1d(in_channels=63, out_channels=55, kernel_size=1),\n    nn.Conv1d(in_channels=55, out_channels=17, kernel_size=1),\n    nn.GRU(input_size=95, hidden_size=112, batch_first=True),\n    nn.Conv3d(in_channels=17, out_channels=61, kernel_size=4),\n    nn.Conv3d(in_channels=61, out_channels=11, kernel_size=1),\n    nn.Conv2d(in_channels=11, out_channels=35, kernel_size=3)\n)", "description": "This neural network takes an input of shape [91, 92, 48] and produces an output of shape [35, 92, 112]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=145, out_features=116),\n    nn.Conv2d(in_channels=102, out_channels=29, kernel_size=5),\n    nn.Conv1d(in_channels=29, out_channels=6, kernel_size=5),\n    nn.LSTM(input_size=116, hidden_size=64, batch_first=True),\n    nn.GRU(input_size=64, hidden_size=53, batch_first=True),\n    nn.Conv3d(in_channels=6, out_channels=12, kernel_size=2),\n    nn.LSTM(input_size=53, hidden_size=112, batch_first=True),\n    nn.LSTM(input_size=112, hidden_size=93, batch_first=True),\n    nn.Linear(in_features=93, out_features=164),\n    nn.Linear(in_features=164, out_features=215)\n)", "description": "This neural network takes an input of shape [102, 145] and produces an output of shape [12, 215]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=16, out_channels=24, kernel_size=1),\n    nn.LSTM(input_size=159, hidden_size=70, batch_first=True),\n    nn.Conv2d(in_channels=24, out_channels=30, kernel_size=2),\n    nn.GRU(input_size=70, hidden_size=105, batch_first=True),\n    nn.Conv1d(in_channels=30, out_channels=58, kernel_size=1),\n    nn.Conv3d(in_channels=58, out_channels=40, kernel_size=1),\n    nn.Conv1d(in_channels=40, out_channels=54, kernel_size=4),\n    nn.Linear(in_features=105, out_features=228)\n)", "description": "This neural network takes an input of shape [16, 159] and produces an output of shape [54, 228]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=110, out_channels=20, kernel_size=4),\n    nn.Conv2d(in_channels=20, out_channels=55, kernel_size=3),\n    nn.LSTM(input_size=55, hidden_size=103, batch_first=True),\n    nn.LSTM(input_size=103, hidden_size=124, batch_first=True),\n    nn.Linear(in_features=124, out_features=150),\n    nn.Linear(in_features=150, out_features=134),\n    nn.GRU(input_size=134, hidden_size=23, batch_first=True),\n    nn.GRU(input_size=23, hidden_size=53, batch_first=True)\n)", "description": "This neural network takes an input of shape [110] and produces an output of shape [53]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=173, out_channels=36, kernel_size=5),\n    nn.Conv1d(in_channels=36, out_channels=1, kernel_size=2),\n    nn.LSTM(input_size=231, hidden_size=5, batch_first=True),\n    nn.Conv3d(in_channels=1, out_channels=6, kernel_size=3),\n    nn.Conv2d(in_channels=6, out_channels=57, kernel_size=4),\n    nn.Linear(in_features=5, out_features=41),\n    nn.Linear(in_features=41, out_features=120),\n    nn.Conv3d(in_channels=57, out_channels=62, kernel_size=5),\n    nn.Conv3d(in_channels=62, out_channels=7, kernel_size=3)\n)", "description": "This neural network takes an input of shape [173, 231] and produces an output of shape [7, 120]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=118, hidden_size=71, batch_first=True),\n    nn.LSTM(input_size=71, hidden_size=121, batch_first=True),\n    nn.LSTM(input_size=121, hidden_size=126, batch_first=True),\n    nn.Conv1d(in_channels=169, out_channels=59, kernel_size=2),\n    nn.LSTM(input_size=126, hidden_size=62, batch_first=True),\n    nn.Linear(in_features=62, out_features=72),\n    nn.Conv1d(in_channels=59, out_channels=16, kernel_size=3)\n)", "description": "This neural network takes an input of shape [169, 118] and produces an output of shape [16, 72]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=67, out_channels=17, kernel_size=3),\n    nn.Linear(in_features=181, out_features=18),\n    nn.Conv2d(in_channels=17, out_channels=22, kernel_size=5),\n    nn.Conv1d(in_channels=22, out_channels=32, kernel_size=5),\n    nn.LSTM(input_size=18, hidden_size=11, batch_first=True),\n    nn.Conv2d(in_channels=32, out_channels=41, kernel_size=4),\n    nn.LSTM(input_size=11, hidden_size=25, batch_first=True)\n)", "description": "This neural network takes an input of shape [67, 145, 181] and produces an output of shape [41, 145, 25]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=110, out_channels=47, kernel_size=3),\n    nn.Conv1d(in_channels=47, out_channels=54, kernel_size=5),\n    nn.Conv1d(in_channels=54, out_channels=2, kernel_size=2),\n    nn.GRU(input_size=2, hidden_size=22, batch_first=True),\n    nn.Linear(in_features=22, out_features=14),\n    nn.LSTM(input_size=14, hidden_size=38, batch_first=True),\n    nn.Conv2d(in_channels=38, out_channels=37, kernel_size=4),\n    nn.Linear(in_features=37, out_features=52)\n)", "description": "This neural network takes an input of shape [110] and produces an output of shape [52]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=53, hidden_size=34, batch_first=True),\n    nn.Conv1d(in_channels=22, out_channels=56, kernel_size=4),\n    nn.Conv2d(in_channels=56, out_channels=16, kernel_size=1),\n    nn.LSTM(input_size=34, hidden_size=84, batch_first=True),\n    nn.Conv1d(in_channels=16, out_channels=64, kernel_size=1)\n)", "description": "This neural network takes an input of shape [22, 53] and produces an output of shape [64, 84]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=192, out_channels=27, kernel_size=3),\n    nn.LSTM(input_size=27, hidden_size=89, batch_first=True),\n    nn.Conv1d(in_channels=89, out_channels=64, kernel_size=1),\n    nn.GRU(input_size=64, hidden_size=82, batch_first=True)\n)", "description": "This neural network takes an input of shape [192] and produces an output of shape [82]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=70, out_channels=61, kernel_size=2),\n    nn.Conv2d(in_channels=61, out_channels=26, kernel_size=2),\n    nn.Conv2d(in_channels=26, out_channels=12, kernel_size=2),\n    nn.Linear(in_features=232, out_features=199),\n    nn.Conv3d(in_channels=12, out_channels=56, kernel_size=5),\n    nn.Conv2d(in_channels=56, out_channels=48, kernel_size=1)\n)", "description": "This neural network takes an input of shape [70, 250, 232] and produces an output of shape [48, 250, 199]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=223, out_channels=5, kernel_size=4),\n    nn.GRU(input_size=47, hidden_size=29, batch_first=True),\n    nn.GRU(input_size=29, hidden_size=36, batch_first=True),\n    nn.Conv3d(in_channels=5, out_channels=63, kernel_size=4),\n    nn.LSTM(input_size=36, hidden_size=94, batch_first=True),\n    nn.GRU(input_size=94, hidden_size=49, batch_first=True),\n    nn.LSTM(input_size=49, hidden_size=32, batch_first=True),\n    nn.LSTM(input_size=32, hidden_size=109, batch_first=True)\n)", "description": "This neural network takes an input of shape [223, 244, 47] and produces an output of shape [63, 244, 109]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=202, hidden_size=66, batch_first=True),\n    nn.GRU(input_size=66, hidden_size=46, batch_first=True),\n    nn.GRU(input_size=46, hidden_size=72, batch_first=True),\n    nn.Linear(in_features=72, out_features=214),\n    nn.Conv1d(in_channels=214, out_channels=26, kernel_size=5),\n    nn.Linear(in_features=26, out_features=6)\n)", "description": "This neural network takes an input of shape [202] and produces an output of shape [6]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=190, out_channels=49, kernel_size=3)\n)", "description": "This neural network takes an input of shape [190, 36, 98] and produces an output of shape [49, 36, 98]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=152, out_features=240),\n    nn.Linear(in_features=240, out_features=253),\n    nn.Linear(in_features=253, out_features=205),\n    nn.Conv3d(in_channels=205, out_channels=45, kernel_size=3),\n    nn.Conv1d(in_channels=45, out_channels=42, kernel_size=2),\n    nn.Conv1d(in_channels=42, out_channels=10, kernel_size=4),\n    nn.Conv1d(in_channels=10, out_channels=38, kernel_size=5),\n    nn.Linear(in_features=38, out_features=84)\n)", "description": "This neural network takes an input of shape [152] and produces an output of shape [84]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=202, out_channels=44, kernel_size=2),\n    nn.Conv3d(in_channels=44, out_channels=15, kernel_size=1),\n    nn.Conv3d(in_channels=15, out_channels=45, kernel_size=3),\n    nn.Conv1d(in_channels=45, out_channels=24, kernel_size=1),\n    nn.Conv3d(in_channels=24, out_channels=18, kernel_size=5),\n    nn.Linear(in_features=117, out_features=220),\n    nn.Conv3d(in_channels=18, out_channels=16, kernel_size=1),\n    nn.Linear(in_features=220, out_features=240)\n)", "description": "This neural network takes an input of shape [202, 117] and produces an output of shape [16, 240]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=204, out_channels=30, kernel_size=2),\n    nn.Conv1d(in_channels=30, out_channels=43, kernel_size=3),\n    nn.Linear(in_features=139, out_features=2),\n    nn.Conv3d(in_channels=43, out_channels=23, kernel_size=2),\n    nn.Conv3d(in_channels=23, out_channels=45, kernel_size=5),\n    nn.GRU(input_size=2, hidden_size=46, batch_first=True),\n    nn.Linear(in_features=46, out_features=247),\n    nn.Conv1d(in_channels=45, out_channels=8, kernel_size=3),\n    nn.Linear(in_features=247, out_features=163),\n    nn.Linear(in_features=163, out_features=106)\n)", "description": "This neural network takes an input of shape [204, 242, 139] and produces an output of shape [8, 242, 106]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=98, hidden_size=112, batch_first=True),\n    nn.Conv1d(in_channels=219, out_channels=10, kernel_size=3),\n    nn.Linear(in_features=112, out_features=148),\n    nn.Conv3d(in_channels=10, out_channels=36, kernel_size=2),\n    nn.Conv3d(in_channels=36, out_channels=27, kernel_size=2)\n)", "description": "This neural network takes an input of shape [219, 98] and produces an output of shape [27, 148]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=183, out_features=169),\n    nn.LSTM(input_size=169, hidden_size=46, batch_first=True),\n    nn.Conv3d(in_channels=202, out_channels=41, kernel_size=3),\n    nn.Conv1d(in_channels=41, out_channels=59, kernel_size=1)\n)", "description": "This neural network takes an input of shape [202, 183] and produces an output of shape [59, 46]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=96, hidden_size=63, batch_first=True),\n    nn.Conv2d(in_channels=63, out_channels=10, kernel_size=3)\n)", "description": "This neural network takes an input of shape [96] and produces an output of shape [10]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=150, out_channels=26, kernel_size=4),\n    nn.LSTM(input_size=228, hidden_size=28, batch_first=True),\n    nn.GRU(input_size=28, hidden_size=10, batch_first=True)\n)", "description": "This neural network takes an input of shape [150, 139, 228] and produces an output of shape [26, 139, 10]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=166, out_channels=18, kernel_size=3),\n    nn.LSTM(input_size=68, hidden_size=56, batch_first=True),\n    nn.Conv1d(in_channels=18, out_channels=23, kernel_size=1),\n    nn.Conv1d(in_channels=23, out_channels=12, kernel_size=4),\n    nn.GRU(input_size=56, hidden_size=110, batch_first=True),\n    nn.Conv3d(in_channels=12, out_channels=63, kernel_size=3),\n    nn.Conv1d(in_channels=63, out_channels=58, kernel_size=4),\n    nn.Conv3d(in_channels=58, out_channels=26, kernel_size=3),\n    nn.Conv3d(in_channels=26, out_channels=22, kernel_size=4),\n    nn.Linear(in_features=110, out_features=218)\n)", "description": "This neural network takes an input of shape [166, 215, 68] and produces an output of shape [22, 215, 218]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=27, out_channels=49, kernel_size=5),\n    nn.Conv3d(in_channels=49, out_channels=52, kernel_size=3),\n    nn.LSTM(input_size=52, hidden_size=118, batch_first=True),\n    nn.GRU(input_size=118, hidden_size=67, batch_first=True)\n)", "description": "This neural network takes an input of shape [27, 193, 52] and produces an output of shape [52, 193, 67]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=171, out_features=211),\n    nn.Conv2d(in_channels=253, out_channels=15, kernel_size=2),\n    nn.Conv1d(in_channels=15, out_channels=46, kernel_size=5),\n    nn.LSTM(input_size=211, hidden_size=14, batch_first=True),\n    nn.Linear(in_features=14, out_features=157),\n    nn.LSTM(input_size=157, hidden_size=4, batch_first=True),\n    nn.Conv1d(in_channels=46, out_channels=63, kernel_size=5)\n)", "description": "This neural network takes an input of shape [253, 171] and produces an output of shape [63, 4]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=17, out_features=139),\n    nn.Conv2d(in_channels=139, out_channels=55, kernel_size=5),\n    nn.GRU(input_size=55, hidden_size=93, batch_first=True)\n)", "description": "This neural network takes an input of shape [17] and produces an output of shape [93]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=97, out_features=66),\n    nn.Conv1d(in_channels=22, out_channels=51, kernel_size=3),\n    nn.Conv1d(in_channels=51, out_channels=18, kernel_size=5),\n    nn.Linear(in_features=66, out_features=156),\n    nn.Conv1d(in_channels=18, out_channels=59, kernel_size=1),\n    nn.Linear(in_features=156, out_features=186),\n    nn.LSTM(input_size=186, hidden_size=67, batch_first=True)\n)", "description": "This neural network takes an input of shape [22, 97] and produces an output of shape [59, 67]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=211, hidden_size=111, batch_first=True),\n    nn.LSTM(input_size=111, hidden_size=64, batch_first=True),\n    nn.Conv1d(in_channels=64, out_channels=56, kernel_size=2),\n    nn.Conv3d(in_channels=56, out_channels=18, kernel_size=5),\n    nn.GRU(input_size=18, hidden_size=112, batch_first=True),\n    nn.Conv3d(in_channels=112, out_channels=14, kernel_size=4),\n    nn.Linear(in_features=14, out_features=70),\n    nn.GRU(input_size=70, hidden_size=32, batch_first=True)\n)", "description": "This neural network takes an input of shape [211] and produces an output of shape [32]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=168, hidden_size=70, batch_first=True)\n)", "description": "This neural network takes an input of shape [98, 190, 168] and produces an output of shape [98, 190, 70]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=182, hidden_size=7, batch_first=True),\n    nn.Conv2d(in_channels=124, out_channels=1, kernel_size=2),\n    nn.Conv2d(in_channels=1, out_channels=48, kernel_size=5),\n    nn.Conv1d(in_channels=48, out_channels=7, kernel_size=2)\n)", "description": "This neural network takes an input of shape [124, 182] and produces an output of shape [7, 7]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=95, out_channels=49, kernel_size=5),\n    nn.Conv3d(in_channels=49, out_channels=36, kernel_size=2),\n    nn.GRU(input_size=36, hidden_size=65, batch_first=True)\n)", "description": "This neural network takes an input of shape [95] and produces an output of shape [65]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=216, hidden_size=91, batch_first=True),\n    nn.LSTM(input_size=91, hidden_size=33, batch_first=True),\n    nn.Conv2d(in_channels=186, out_channels=55, kernel_size=5),\n    nn.Conv3d(in_channels=55, out_channels=19, kernel_size=2),\n    nn.LSTM(input_size=33, hidden_size=21, batch_first=True),\n    nn.LSTM(input_size=21, hidden_size=53, batch_first=True),\n    nn.Conv1d(in_channels=19, out_channels=60, kernel_size=2),\n    nn.Conv1d(in_channels=60, out_channels=57, kernel_size=2)\n)", "description": "This neural network takes an input of shape [186, 4, 216] and produces an output of shape [57, 4, 53]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=47, out_channels=59, kernel_size=1),\n    nn.Conv2d(in_channels=59, out_channels=21, kernel_size=5),\n    nn.Conv1d(in_channels=21, out_channels=4, kernel_size=2),\n    nn.Conv1d(in_channels=4, out_channels=42, kernel_size=3)\n)", "description": "This neural network takes an input of shape [47, 95] and produces an output of shape [42, 95]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=182, hidden_size=118, batch_first=True),\n    nn.Conv1d(in_channels=232, out_channels=44, kernel_size=4),\n    nn.LSTM(input_size=118, hidden_size=50, batch_first=True),\n    nn.GRU(input_size=50, hidden_size=40, batch_first=True),\n    nn.GRU(input_size=40, hidden_size=11, batch_first=True),\n    nn.Linear(in_features=11, out_features=3),\n    nn.Conv2d(in_channels=44, out_channels=45, kernel_size=4),\n    nn.GRU(input_size=3, hidden_size=77, batch_first=True)\n)", "description": "This neural network takes an input of shape [232, 182] and produces an output of shape [45, 77]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=248, hidden_size=13, batch_first=True)\n)", "description": "This neural network takes an input of shape [195, 248] and produces an output of shape [195, 13]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=93, out_features=224),\n    nn.Linear(in_features=224, out_features=91),\n    nn.Conv2d(in_channels=91, out_channels=45, kernel_size=4),\n    nn.LSTM(input_size=45, hidden_size=64, batch_first=True),\n    nn.Conv3d(in_channels=64, out_channels=28, kernel_size=3),\n    nn.Conv2d(in_channels=28, out_channels=31, kernel_size=5),\n    nn.GRU(input_size=31, hidden_size=2, batch_first=True),\n    nn.Conv2d(in_channels=2, out_channels=55, kernel_size=2),\n    nn.Linear(in_features=55, out_features=219),\n    nn.Linear(in_features=219, out_features=104)\n)", "description": "This neural network takes an input of shape [93] and produces an output of shape [104]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=42, out_channels=38, kernel_size=4),\n    nn.Conv1d(in_channels=38, out_channels=14, kernel_size=4),\n    nn.Conv1d(in_channels=14, out_channels=9, kernel_size=1),\n    nn.LSTM(input_size=9, hidden_size=84, batch_first=True)\n)", "description": "This neural network takes an input of shape [42] and produces an output of shape [84]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=69, hidden_size=109, batch_first=True),\n    nn.Conv1d(in_channels=165, out_channels=62, kernel_size=1),\n    nn.Conv3d(in_channels=62, out_channels=7, kernel_size=2),\n    nn.Conv3d(in_channels=7, out_channels=15, kernel_size=1),\n    nn.Conv1d(in_channels=15, out_channels=59, kernel_size=5),\n    nn.Conv2d(in_channels=59, out_channels=7, kernel_size=3),\n    nn.GRU(input_size=109, hidden_size=68, batch_first=True),\n    nn.LSTM(input_size=68, hidden_size=79, batch_first=True)\n)", "description": "This neural network takes an input of shape [165, 186, 69] and produces an output of shape [7, 186, 79]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=18, hidden_size=36, batch_first=True),\n    nn.Conv3d(in_channels=168, out_channels=7, kernel_size=1)\n)", "description": "This neural network takes an input of shape [168, 18] and produces an output of shape [7, 36]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=48, hidden_size=56, batch_first=True),\n    nn.LSTM(input_size=56, hidden_size=112, batch_first=True),\n    nn.LSTM(input_size=112, hidden_size=81, batch_first=True)\n)", "description": "This neural network takes an input of shape [67, 48] and produces an output of shape [67, 81]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=252, hidden_size=92, batch_first=True),\n    nn.Conv2d(in_channels=238, out_channels=60, kernel_size=1),\n    nn.LSTM(input_size=92, hidden_size=9, batch_first=True),\n    nn.Conv3d(in_channels=60, out_channels=10, kernel_size=5),\n    nn.GRU(input_size=9, hidden_size=14, batch_first=True),\n    nn.Linear(in_features=14, out_features=80),\n    nn.Conv2d(in_channels=10, out_channels=56, kernel_size=4),\n    nn.Linear(in_features=80, out_features=179),\n    nn.GRU(input_size=179, hidden_size=28, batch_first=True)\n)", "description": "This neural network takes an input of shape [238, 252] and produces an output of shape [56, 28]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=165, out_channels=32, kernel_size=1)\n)", "description": "This neural network takes an input of shape [165] and produces an output of shape [32]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=243, out_channels=60, kernel_size=2),\n    nn.Conv1d(in_channels=60, out_channels=1, kernel_size=4)\n)", "description": "This neural network takes an input of shape [243, 46, 1] and produces an output of shape [1, 46, 1]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=137, hidden_size=113, batch_first=True),\n    nn.GRU(input_size=113, hidden_size=86, batch_first=True),\n    nn.Conv1d(in_channels=209, out_channels=15, kernel_size=3),\n    nn.Conv3d(in_channels=15, out_channels=63, kernel_size=2),\n    nn.LSTM(input_size=86, hidden_size=41, batch_first=True),\n    nn.Conv2d(in_channels=63, out_channels=56, kernel_size=1),\n    nn.Linear(in_features=41, out_features=222),\n    nn.Linear(in_features=222, out_features=110),\n    nn.GRU(input_size=110, hidden_size=102, batch_first=True),\n    nn.Linear(in_features=102, out_features=111)\n)", "description": "This neural network takes an input of shape [209, 137] and produces an output of shape [56, 111]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=256, hidden_size=94, batch_first=True),\n    nn.Conv1d(in_channels=94, out_channels=22, kernel_size=1),\n    nn.Conv3d(in_channels=22, out_channels=61, kernel_size=4),\n    nn.Conv2d(in_channels=61, out_channels=10, kernel_size=2),\n    nn.Conv1d(in_channels=10, out_channels=16, kernel_size=1),\n    nn.Linear(in_features=16, out_features=181),\n    nn.Conv2d(in_channels=181, out_channels=27, kernel_size=5),\n    nn.LSTM(input_size=27, hidden_size=105, batch_first=True),\n    nn.Linear(in_features=105, out_features=110)\n)", "description": "This neural network takes an input of shape [256] and produces an output of shape [110]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=171, out_channels=23, kernel_size=3),\n    nn.LSTM(input_size=31, hidden_size=64, batch_first=True),\n    nn.Linear(in_features=64, out_features=76),\n    nn.Conv3d(in_channels=23, out_channels=41, kernel_size=4),\n    nn.Conv3d(in_channels=41, out_channels=46, kernel_size=2)\n)", "description": "This neural network takes an input of shape [171, 31] and produces an output of shape [46, 76]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=253, out_channels=7, kernel_size=5),\n    nn.Linear(in_features=7, out_features=13),\n    nn.LSTM(input_size=13, hidden_size=62, batch_first=True),\n    nn.Conv3d(in_channels=62, out_channels=61, kernel_size=4),\n    nn.Linear(in_features=61, out_features=22)\n)", "description": "This neural network takes an input of shape [253] and produces an output of shape [22]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=169, hidden_size=83, batch_first=True),\n    nn.GRU(input_size=83, hidden_size=92, batch_first=True),\n    nn.Conv2d(in_channels=92, out_channels=4, kernel_size=5),\n    nn.Linear(in_features=4, out_features=85),\n    nn.GRU(input_size=85, hidden_size=36, batch_first=True),\n    nn.GRU(input_size=36, hidden_size=66, batch_first=True)\n)", "description": "This neural network takes an input of shape [169] and produces an output of shape [66]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=134, hidden_size=31, batch_first=True),\n    nn.Linear(in_features=31, out_features=72),\n    nn.Linear(in_features=72, out_features=143),\n    nn.Conv1d(in_channels=1, out_channels=49, kernel_size=1),\n    nn.Conv3d(in_channels=49, out_channels=7, kernel_size=3),\n    nn.GRU(input_size=143, hidden_size=62, batch_first=True),\n    nn.GRU(input_size=62, hidden_size=91, batch_first=True),\n    nn.Conv2d(in_channels=7, out_channels=14, kernel_size=5),\n    nn.LSTM(input_size=91, hidden_size=71, batch_first=True)\n)", "description": "This neural network takes an input of shape [1, 134] and produces an output of shape [14, 71]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=61, out_channels=39, kernel_size=5),\n    nn.GRU(input_size=39, hidden_size=26, batch_first=True),\n    nn.LSTM(input_size=26, hidden_size=73, batch_first=True),\n    nn.Conv2d(in_channels=73, out_channels=50, kernel_size=5)\n)", "description": "This neural network takes an input of shape [61] and produces an output of shape [50]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=107, out_channels=31, kernel_size=5),\n    nn.Conv1d(in_channels=31, out_channels=35, kernel_size=1)\n)", "description": "This neural network takes an input of shape [107, 187, 255] and produces an output of shape [35, 187, 255]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=225, out_channels=45, kernel_size=4),\n    nn.GRU(input_size=45, hidden_size=41, batch_first=True)\n)", "description": "This neural network takes an input of shape [225] and produces an output of shape [41]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=195, out_features=252),\n    nn.Conv2d(in_channels=132, out_channels=31, kernel_size=5),\n    nn.Conv1d(in_channels=31, out_channels=13, kernel_size=3),\n    nn.Conv2d(in_channels=13, out_channels=63, kernel_size=1),\n    nn.GRU(input_size=252, hidden_size=39, batch_first=True),\n    nn.Linear(in_features=39, out_features=167),\n    nn.LSTM(input_size=167, hidden_size=29, batch_first=True),\n    nn.Linear(in_features=29, out_features=154)\n)", "description": "This neural network takes an input of shape [132, 195] and produces an output of shape [63, 154]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=42, hidden_size=60, batch_first=True),\n    nn.GRU(input_size=60, hidden_size=19, batch_first=True),\n    nn.Linear(in_features=19, out_features=183),\n    nn.GRU(input_size=183, hidden_size=6, batch_first=True),\n    nn.Conv2d(in_channels=6, out_channels=35, kernel_size=3),\n    nn.Conv1d(in_channels=35, out_channels=59, kernel_size=4),\n    nn.Linear(in_features=59, out_features=45),\n    nn.LSTM(input_size=45, hidden_size=45, batch_first=True),\n    nn.Conv1d(in_channels=45, out_channels=20, kernel_size=4),\n    nn.Conv1d(in_channels=20, out_channels=10, kernel_size=1)\n)", "description": "This neural network takes an input of shape [42] and produces an output of shape [10]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=161, out_channels=1, kernel_size=4),\n    nn.LSTM(input_size=1, hidden_size=46, batch_first=True),\n    nn.Conv3d(in_channels=46, out_channels=42, kernel_size=3),\n    nn.Conv2d(in_channels=42, out_channels=28, kernel_size=4),\n    nn.Linear(in_features=28, out_features=155),\n    nn.Conv1d(in_channels=155, out_channels=28, kernel_size=3),\n    nn.Conv1d(in_channels=28, out_channels=17, kernel_size=2),\n    nn.Linear(in_features=17, out_features=167),\n    nn.Conv3d(in_channels=167, out_channels=34, kernel_size=3)\n)", "description": "This neural network takes an input of shape [161] and produces an output of shape [34]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=96, out_channels=55, kernel_size=3),\n    nn.LSTM(input_size=55, hidden_size=86, batch_first=True),\n    nn.Conv2d(in_channels=86, out_channels=44, kernel_size=1),\n    nn.Conv2d(in_channels=44, out_channels=11, kernel_size=1),\n    nn.Conv3d(in_channels=11, out_channels=40, kernel_size=3),\n    nn.GRU(input_size=40, hidden_size=17, batch_first=True),\n    nn.Linear(in_features=17, out_features=216),\n    nn.Conv3d(in_channels=216, out_channels=17, kernel_size=1),\n    nn.Linear(in_features=17, out_features=45)\n)", "description": "This neural network takes an input of shape [96] and produces an output of shape [45]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=239, hidden_size=24, batch_first=True),\n    nn.Conv2d(in_channels=24, out_channels=23, kernel_size=2),\n    nn.Conv3d(in_channels=23, out_channels=42, kernel_size=4),\n    nn.Conv2d(in_channels=42, out_channels=27, kernel_size=5),\n    nn.Conv2d(in_channels=27, out_channels=39, kernel_size=2),\n    nn.Conv2d(in_channels=39, out_channels=35, kernel_size=3),\n    nn.Conv3d(in_channels=35, out_channels=11, kernel_size=4),\n    nn.GRU(input_size=11, hidden_size=126, batch_first=True),\n    nn.GRU(input_size=126, hidden_size=101, batch_first=True),\n    nn.GRU(input_size=101, hidden_size=114, batch_first=True)\n)", "description": "This neural network takes an input of shape [239] and produces an output of shape [114]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=213, hidden_size=90, batch_first=True),\n    nn.Conv2d(in_channels=90, out_channels=33, kernel_size=1),\n    nn.Conv1d(in_channels=33, out_channels=14, kernel_size=3),\n    nn.Linear(in_features=14, out_features=42),\n    nn.Linear(in_features=42, out_features=34)\n)", "description": "This neural network takes an input of shape [213] and produces an output of shape [34]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=135, out_channels=36, kernel_size=3)\n)", "description": "This neural network takes an input of shape [135] and produces an output of shape [36]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=177, hidden_size=86, batch_first=True),\n    nn.Conv2d(in_channels=41, out_channels=54, kernel_size=4),\n    nn.GRU(input_size=86, hidden_size=126, batch_first=True),\n    nn.LSTM(input_size=126, hidden_size=42, batch_first=True),\n    nn.Linear(in_features=42, out_features=216)\n)", "description": "This neural network takes an input of shape [41, 177] and produces an output of shape [54, 216]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=46, hidden_size=77, batch_first=True),\n    nn.Conv1d(in_channels=84, out_channels=39, kernel_size=1),\n    nn.Conv3d(in_channels=39, out_channels=42, kernel_size=5),\n    nn.Linear(in_features=77, out_features=187),\n    nn.Conv2d(in_channels=42, out_channels=33, kernel_size=5),\n    nn.Linear(in_features=187, out_features=71),\n    nn.Linear(in_features=71, out_features=172)\n)", "description": "This neural network takes an input of shape [84, 46] and produces an output of shape [33, 172]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=169, hidden_size=33, batch_first=True),\n    nn.Conv2d(in_channels=33, out_channels=10, kernel_size=4),\n    nn.GRU(input_size=10, hidden_size=127, batch_first=True),\n    nn.GRU(input_size=127, hidden_size=45, batch_first=True)\n)", "description": "This neural network takes an input of shape [169] and produces an output of shape [45]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=80, out_features=91),\n    nn.Conv1d(in_channels=208, out_channels=39, kernel_size=4),\n    nn.Conv2d(in_channels=39, out_channels=40, kernel_size=5),\n    nn.Conv1d(in_channels=40, out_channels=23, kernel_size=4)\n)", "description": "This neural network takes an input of shape [208, 80] and produces an output of shape [23, 91]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=238, out_channels=40, kernel_size=1),\n    nn.Conv2d(in_channels=40, out_channels=46, kernel_size=3),\n    nn.LSTM(input_size=46, hidden_size=119, batch_first=True)\n)", "description": "This neural network takes an input of shape [238] and produces an output of shape [119]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=67, out_channels=60, kernel_size=3),\n    nn.Linear(in_features=14, out_features=14)\n)", "description": "This neural network takes an input of shape [67, 17, 14] and produces an output of shape [60, 17, 14]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=31, out_channels=16, kernel_size=5),\n    nn.Conv3d(in_channels=16, out_channels=32, kernel_size=4),\n    nn.LSTM(input_size=135, hidden_size=116, batch_first=True),\n    nn.LSTM(input_size=116, hidden_size=20, batch_first=True),\n    nn.GRU(input_size=20, hidden_size=104, batch_first=True),\n    nn.LSTM(input_size=104, hidden_size=108, batch_first=True)\n)", "description": "This neural network takes an input of shape [31, 135] and produces an output of shape [32, 108]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=37, out_channels=9, kernel_size=5),\n    nn.LSTM(input_size=9, hidden_size=26, batch_first=True),\n    nn.Conv2d(in_channels=26, out_channels=32, kernel_size=1),\n    nn.Conv3d(in_channels=32, out_channels=45, kernel_size=4),\n    nn.Linear(in_features=45, out_features=55),\n    nn.Conv3d(in_channels=55, out_channels=43, kernel_size=3),\n    nn.Conv2d(in_channels=43, out_channels=23, kernel_size=3),\n    nn.GRU(input_size=23, hidden_size=102, batch_first=True),\n    nn.Linear(in_features=102, out_features=234)\n)", "description": "This neural network takes an input of shape [37] and produces an output of shape [234]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=251, out_features=96),\n    nn.GRU(input_size=96, hidden_size=128, batch_first=True),\n    nn.GRU(input_size=128, hidden_size=19, batch_first=True),\n    nn.GRU(input_size=19, hidden_size=126, batch_first=True),\n    nn.Linear(in_features=126, out_features=221),\n    nn.Conv1d(in_channels=221, out_channels=57, kernel_size=1),\n    nn.LSTM(input_size=57, hidden_size=7, batch_first=True),\n    nn.Conv1d(in_channels=7, out_channels=31, kernel_size=2),\n    nn.Linear(in_features=31, out_features=37),\n    nn.Conv2d(in_channels=37, out_channels=59, kernel_size=4)\n)", "description": "This neural network takes an input of shape [251] and produces an output of shape [59]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=31, out_channels=49, kernel_size=4),\n    nn.Conv3d(in_channels=49, out_channels=54, kernel_size=2),\n    nn.Linear(in_features=54, out_features=76)\n)", "description": "This neural network takes an input of shape [31] and produces an output of shape [76]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=40, out_features=168),\n    nn.LSTM(input_size=168, hidden_size=38, batch_first=True),\n    nn.Conv2d(in_channels=38, out_channels=60, kernel_size=3),\n    nn.Conv2d(in_channels=60, out_channels=60, kernel_size=1),\n    nn.LSTM(input_size=60, hidden_size=52, batch_first=True)\n)", "description": "This neural network takes an input of shape [40] and produces an output of shape [52]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=233, hidden_size=21, batch_first=True)\n)", "description": "This neural network takes an input of shape [206, 233] and produces an output of shape [206, 21]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=12, hidden_size=45, batch_first=True)\n)", "description": "This neural network takes an input of shape [12] and produces an output of shape [45]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=153, out_channels=15, kernel_size=4),\n    nn.Linear(in_features=254, out_features=62),\n    nn.Conv1d(in_channels=15, out_channels=35, kernel_size=3)\n)", "description": "This neural network takes an input of shape [153, 254] and produces an output of shape [35, 62]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=65, out_channels=17, kernel_size=3),\n    nn.Conv3d(in_channels=17, out_channels=43, kernel_size=3),\n    nn.Conv3d(in_channels=43, out_channels=1, kernel_size=4),\n    nn.Linear(in_features=1, out_features=231),\n    nn.LSTM(input_size=231, hidden_size=8, batch_first=True),\n    nn.Linear(in_features=8, out_features=139)\n)", "description": "This neural network takes an input of shape [65] and produces an output of shape [139]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=206, hidden_size=6, batch_first=True),\n    nn.Conv3d(in_channels=12, out_channels=5, kernel_size=4)\n)", "description": "This neural network takes an input of shape [12, 1, 206] and produces an output of shape [5, 1, 6]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=33, out_channels=13, kernel_size=2),\n    nn.GRU(input_size=3, hidden_size=20, batch_first=True),\n    nn.Conv2d(in_channels=13, out_channels=62, kernel_size=3),\n    nn.Conv1d(in_channels=62, out_channels=48, kernel_size=2),\n    nn.Conv1d(in_channels=48, out_channels=33, kernel_size=3),\n    nn.Conv2d(in_channels=33, out_channels=62, kernel_size=5)\n)", "description": "This neural network takes an input of shape [33, 13, 3] and produces an output of shape [62, 13, 20]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=15, out_channels=15, kernel_size=1),\n    nn.Linear(in_features=71, out_features=21),\n    nn.GRU(input_size=21, hidden_size=77, batch_first=True),\n    nn.Conv3d(in_channels=15, out_channels=61, kernel_size=5),\n    nn.Linear(in_features=77, out_features=65)\n)", "description": "This neural network takes an input of shape [15, 180, 71] and produces an output of shape [61, 180, 65]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=247, out_channels=48, kernel_size=1),\n    nn.Conv2d(in_channels=48, out_channels=23, kernel_size=4),\n    nn.LSTM(input_size=6, hidden_size=111, batch_first=True),\n    nn.Conv2d(in_channels=23, out_channels=53, kernel_size=4),\n    nn.LSTM(input_size=111, hidden_size=14, batch_first=True),\n    nn.LSTM(input_size=14, hidden_size=33, batch_first=True)\n)", "description": "This neural network takes an input of shape [247, 6] and produces an output of shape [53, 33]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=245, out_features=231),\n    nn.Conv2d(in_channels=197, out_channels=31, kernel_size=2),\n    nn.Linear(in_features=231, out_features=7),\n    nn.Conv3d(in_channels=31, out_channels=51, kernel_size=4),\n    nn.LSTM(input_size=7, hidden_size=100, batch_first=True),\n    nn.GRU(input_size=100, hidden_size=62, batch_first=True)\n)", "description": "This neural network takes an input of shape [197, 130, 245] and produces an output of shape [51, 130, 62]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=250, out_channels=35, kernel_size=1),\n    nn.GRU(input_size=196, hidden_size=62, batch_first=True),\n    nn.Conv1d(in_channels=35, out_channels=56, kernel_size=1),\n    nn.Linear(in_features=62, out_features=140),\n    nn.GRU(input_size=140, hidden_size=55, batch_first=True),\n    nn.Linear(in_features=55, out_features=10),\n    nn.Conv1d(in_channels=56, out_channels=38, kernel_size=5),\n    nn.Linear(in_features=10, out_features=184),\n    nn.LSTM(input_size=184, hidden_size=21, batch_first=True),\n    nn.GRU(input_size=21, hidden_size=45, batch_first=True)\n)", "description": "This neural network takes an input of shape [250, 186, 196] and produces an output of shape [38, 186, 45]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=95, out_channels=18, kernel_size=4),\n    nn.Conv2d(in_channels=18, out_channels=50, kernel_size=2),\n    nn.Conv2d(in_channels=50, out_channels=37, kernel_size=5),\n    nn.Conv3d(in_channels=37, out_channels=47, kernel_size=3)\n)", "description": "This neural network takes an input of shape [95, 3] and produces an output of shape [47, 3]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=242, out_channels=23, kernel_size=5)\n)", "description": "This neural network takes an input of shape [242, 126] and produces an output of shape [23, 126]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=117, hidden_size=21, batch_first=True),\n    nn.GRU(input_size=21, hidden_size=62, batch_first=True),\n    nn.Linear(in_features=62, out_features=119),\n    nn.Conv1d(in_channels=34, out_channels=48, kernel_size=4),\n    nn.Conv1d(in_channels=48, out_channels=29, kernel_size=1),\n    nn.LSTM(input_size=119, hidden_size=45, batch_first=True)\n)", "description": "This neural network takes an input of shape [34, 117] and produces an output of shape [29, 45]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=114, hidden_size=2, batch_first=True)\n)", "description": "This neural network takes an input of shape [223, 114] and produces an output of shape [223, 2]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=82, out_channels=53, kernel_size=3)\n)", "description": "This neural network takes an input of shape [82] and produces an output of shape [53]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=5, hidden_size=36, batch_first=True),\n    nn.Conv3d(in_channels=36, out_channels=58, kernel_size=4),\n    nn.Linear(in_features=58, out_features=185),\n    nn.Conv1d(in_channels=185, out_channels=32, kernel_size=4),\n    nn.Conv3d(in_channels=32, out_channels=60, kernel_size=2),\n    nn.GRU(input_size=60, hidden_size=74, batch_first=True),\n    nn.Conv3d(in_channels=74, out_channels=40, kernel_size=1),\n    nn.Conv3d(in_channels=40, out_channels=6, kernel_size=4),\n    nn.Linear(in_features=6, out_features=205)\n)", "description": "This neural network takes an input of shape [5] and produces an output of shape [205]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=114, out_channels=39, kernel_size=1),\n    nn.Conv3d(in_channels=39, out_channels=25, kernel_size=5),\n    nn.Conv3d(in_channels=25, out_channels=49, kernel_size=5),\n    nn.Conv1d(in_channels=49, out_channels=25, kernel_size=5),\n    nn.Linear(in_features=229, out_features=205),\n    nn.Linear(in_features=205, out_features=198),\n    nn.Conv3d(in_channels=25, out_channels=22, kernel_size=2),\n    nn.Linear(in_features=198, out_features=64),\n    nn.LSTM(input_size=64, hidden_size=56, batch_first=True)\n)", "description": "This neural network takes an input of shape [114, 200, 229] and produces an output of shape [22, 200, 56]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=48, hidden_size=121, batch_first=True),\n    nn.LSTM(input_size=121, hidden_size=69, batch_first=True),\n    nn.GRU(input_size=69, hidden_size=68, batch_first=True),\n    nn.LSTM(input_size=68, hidden_size=55, batch_first=True),\n    nn.Linear(in_features=55, out_features=133)\n)", "description": "This neural network takes an input of shape [95, 48] and produces an output of shape [95, 133]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=162, out_features=54),\n    nn.Linear(in_features=54, out_features=129),\n    nn.Linear(in_features=129, out_features=24),\n    nn.Conv2d(in_channels=249, out_channels=36, kernel_size=2),\n    nn.GRU(input_size=24, hidden_size=33, batch_first=True)\n)", "description": "This neural network takes an input of shape [249, 136, 162] and produces an output of shape [36, 136, 33]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=164, out_channels=57, kernel_size=4),\n    nn.LSTM(input_size=206, hidden_size=16, batch_first=True),\n    nn.GRU(input_size=16, hidden_size=85, batch_first=True),\n    nn.GRU(input_size=85, hidden_size=20, batch_first=True),\n    nn.Conv2d(in_channels=57, out_channels=35, kernel_size=5),\n    nn.LSTM(input_size=20, hidden_size=51, batch_first=True),\n    nn.GRU(input_size=51, hidden_size=7, batch_first=True),\n    nn.Conv1d(in_channels=35, out_channels=48, kernel_size=5)\n)", "description": "This neural network takes an input of shape [164, 206] and produces an output of shape [48, 7]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=60, out_channels=6, kernel_size=4),\n    nn.Conv1d(in_channels=6, out_channels=19, kernel_size=5),\n    nn.Linear(in_features=19, out_features=231),\n    nn.GRU(input_size=231, hidden_size=103, batch_first=True),\n    nn.GRU(input_size=103, hidden_size=94, batch_first=True),\n    nn.LSTM(input_size=94, hidden_size=121, batch_first=True),\n    nn.Conv3d(in_channels=121, out_channels=60, kernel_size=4)\n)", "description": "This neural network takes an input of shape [60] and produces an output of shape [60]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=13, out_channels=43, kernel_size=3),\n    nn.Conv3d(in_channels=43, out_channels=13, kernel_size=1),\n    nn.GRU(input_size=203, hidden_size=25, batch_first=True),\n    nn.GRU(input_size=25, hidden_size=128, batch_first=True),\n    nn.Conv1d(in_channels=13, out_channels=44, kernel_size=4),\n    nn.Linear(in_features=128, out_features=118),\n    nn.Conv2d(in_channels=44, out_channels=51, kernel_size=4),\n    nn.GRU(input_size=118, hidden_size=112, batch_first=True)\n)", "description": "This neural network takes an input of shape [13, 138, 203] and produces an output of shape [51, 138, 112]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=54, out_channels=59, kernel_size=4),\n    nn.Conv2d(in_channels=59, out_channels=46, kernel_size=4),\n    nn.Linear(in_features=125, out_features=5),\n    nn.Conv3d(in_channels=46, out_channels=42, kernel_size=5),\n    nn.Linear(in_features=5, out_features=146)\n)", "description": "This neural network takes an input of shape [54, 148, 125] and produces an output of shape [42, 148, 146]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=12, hidden_size=125, batch_first=True),\n    nn.Conv1d(in_channels=125, out_channels=33, kernel_size=1),\n    nn.Conv2d(in_channels=33, out_channels=35, kernel_size=4),\n    nn.Conv2d(in_channels=35, out_channels=63, kernel_size=1),\n    nn.Linear(in_features=63, out_features=82),\n    nn.GRU(input_size=82, hidden_size=26, batch_first=True),\n    nn.Linear(in_features=26, out_features=141),\n    nn.GRU(input_size=141, hidden_size=41, batch_first=True),\n    nn.Conv3d(in_channels=41, out_channels=16, kernel_size=4)\n)", "description": "This neural network takes an input of shape [12] and produces an output of shape [16]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=56, out_channels=40, kernel_size=3)\n)", "description": "This neural network takes an input of shape [56, 122, 159] and produces an output of shape [40, 122, 159]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=12, out_channels=11, kernel_size=4),\n    nn.Linear(in_features=172, out_features=225),\n    nn.Conv3d(in_channels=11, out_channels=52, kernel_size=3),\n    nn.GRU(input_size=225, hidden_size=64, batch_first=True),\n    nn.Conv1d(in_channels=52, out_channels=3, kernel_size=1),\n    nn.Linear(in_features=64, out_features=92)\n)", "description": "This neural network takes an input of shape [12, 183, 172] and produces an output of shape [3, 183, 92]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=172, hidden_size=60, batch_first=True),\n    nn.Conv1d(in_channels=60, out_channels=3, kernel_size=1),\n    nn.Conv2d(in_channels=3, out_channels=26, kernel_size=1),\n    nn.GRU(input_size=26, hidden_size=30, batch_first=True),\n    nn.Conv3d(in_channels=30, out_channels=3, kernel_size=1),\n    nn.LSTM(input_size=3, hidden_size=41, batch_first=True)\n)", "description": "This neural network takes an input of shape [172] and produces an output of shape [41]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=34, out_channels=64, kernel_size=2)\n)", "description": "This neural network takes an input of shape [34] and produces an output of shape [64]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=82, out_features=112),\n    nn.LSTM(input_size=112, hidden_size=93, batch_first=True),\n    nn.Conv1d(in_channels=93, out_channels=63, kernel_size=5)\n)", "description": "This neural network takes an input of shape [82] and produces an output of shape [63]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=183, out_channels=35, kernel_size=3),\n    nn.LSTM(input_size=35, hidden_size=48, batch_first=True),\n    nn.Linear(in_features=48, out_features=27),\n    nn.GRU(input_size=27, hidden_size=69, batch_first=True),\n    nn.Linear(in_features=69, out_features=145),\n    nn.Conv1d(in_channels=145, out_channels=16, kernel_size=3),\n    nn.LSTM(input_size=16, hidden_size=111, batch_first=True)\n)", "description": "This neural network takes an input of shape [183] and produces an output of shape [111]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=68, out_channels=10, kernel_size=3),\n    nn.GRU(input_size=105, hidden_size=100, batch_first=True),\n    nn.LSTM(input_size=100, hidden_size=38, batch_first=True)\n)", "description": "This neural network takes an input of shape [68, 105] and produces an output of shape [10, 38]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=140, out_channels=4, kernel_size=3),\n    nn.Conv3d(in_channels=4, out_channels=9, kernel_size=2),\n    nn.Conv1d(in_channels=9, out_channels=17, kernel_size=3),\n    nn.Linear(in_features=133, out_features=23),\n    nn.Linear(in_features=23, out_features=128),\n    nn.Linear(in_features=128, out_features=224)\n)", "description": "This neural network takes an input of shape [140, 14, 133] and produces an output of shape [17, 14, 224]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=189, hidden_size=43, batch_first=True)\n)", "description": "This neural network takes an input of shape [198, 189] and produces an output of shape [198, 43]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=246, out_channels=10, kernel_size=5),\n    nn.GRU(input_size=10, hidden_size=60, batch_first=True),\n    nn.Linear(in_features=60, out_features=8)\n)", "description": "This neural network takes an input of shape [246] and produces an output of shape [8]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=7, out_channels=3, kernel_size=2),\n    nn.GRU(input_size=22, hidden_size=18, batch_first=True),\n    nn.LSTM(input_size=18, hidden_size=74, batch_first=True),\n    nn.Conv1d(in_channels=3, out_channels=45, kernel_size=4)\n)", "description": "This neural network takes an input of shape [7, 22] and produces an output of shape [45, 74]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=33, out_features=151),\n    nn.GRU(input_size=151, hidden_size=5, batch_first=True),\n    nn.Conv2d(in_channels=5, out_channels=17, kernel_size=2),\n    nn.GRU(input_size=17, hidden_size=64, batch_first=True)\n)", "description": "This neural network takes an input of shape [33] and produces an output of shape [64]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=34, hidden_size=120, batch_first=True),\n    nn.Conv2d(in_channels=33, out_channels=31, kernel_size=1),\n    nn.Conv1d(in_channels=31, out_channels=61, kernel_size=4),\n    nn.Conv2d(in_channels=61, out_channels=41, kernel_size=2),\n    nn.Conv2d(in_channels=41, out_channels=10, kernel_size=1),\n    nn.LSTM(input_size=120, hidden_size=91, batch_first=True),\n    nn.Conv3d(in_channels=10, out_channels=43, kernel_size=2),\n    nn.Conv2d(in_channels=43, out_channels=1, kernel_size=4),\n    nn.Conv3d(in_channels=1, out_channels=26, kernel_size=4)\n)", "description": "This neural network takes an input of shape [33, 16, 34] and produces an output of shape [26, 16, 91]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=66, hidden_size=20, batch_first=True)\n)", "description": "This neural network takes an input of shape [198, 253, 66] and produces an output of shape [198, 253, 20]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=232, out_channels=45, kernel_size=2),\n    nn.Conv2d(in_channels=45, out_channels=24, kernel_size=5),\n    nn.Conv2d(in_channels=24, out_channels=54, kernel_size=5),\n    nn.Conv1d(in_channels=54, out_channels=55, kernel_size=1),\n    nn.GRU(input_size=88, hidden_size=75, batch_first=True),\n    nn.GRU(input_size=75, hidden_size=104, batch_first=True),\n    nn.GRU(input_size=104, hidden_size=116, batch_first=True),\n    nn.Conv3d(in_channels=55, out_channels=50, kernel_size=5),\n    nn.LSTM(input_size=116, hidden_size=2, batch_first=True)\n)", "description": "This neural network takes an input of shape [232, 88] and produces an output of shape [50, 2]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=64, hidden_size=35, batch_first=True),\n    nn.Conv1d(in_channels=87, out_channels=7, kernel_size=2)\n)", "description": "This neural network takes an input of shape [87, 93, 64] and produces an output of shape [7, 93, 35]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=213, out_features=29),\n    nn.Linear(in_features=29, out_features=31),\n    nn.Conv1d(in_channels=48, out_channels=4, kernel_size=1),\n    nn.Conv1d(in_channels=4, out_channels=63, kernel_size=5),\n    nn.Linear(in_features=31, out_features=254)\n)", "description": "This neural network takes an input of shape [48, 45, 213] and produces an output of shape [63, 45, 254]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=155, out_channels=45, kernel_size=5),\n    nn.Linear(in_features=143, out_features=74)\n)", "description": "This neural network takes an input of shape [155, 41, 143] and produces an output of shape [45, 41, 74]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=183, hidden_size=20, batch_first=True),\n    nn.Conv1d(in_channels=189, out_channels=37, kernel_size=3),\n    nn.Conv1d(in_channels=37, out_channels=44, kernel_size=4),\n    nn.Conv3d(in_channels=44, out_channels=56, kernel_size=4),\n    nn.Conv3d(in_channels=56, out_channels=15, kernel_size=2),\n    nn.GRU(input_size=20, hidden_size=114, batch_first=True)\n)", "description": "This neural network takes an input of shape [189, 183] and produces an output of shape [15, 114]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=185, hidden_size=2, batch_first=True),\n    nn.Conv1d(in_channels=2, out_channels=62, kernel_size=3),\n    nn.Linear(in_features=62, out_features=173)\n)", "description": "This neural network takes an input of shape [185] and produces an output of shape [173]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=159, hidden_size=111, batch_first=True),\n    nn.LSTM(input_size=111, hidden_size=128, batch_first=True),\n    nn.GRU(input_size=128, hidden_size=53, batch_first=True),\n    nn.Conv3d(in_channels=53, out_channels=46, kernel_size=5)\n)", "description": "This neural network takes an input of shape [159] and produces an output of shape [46]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=100, out_channels=59, kernel_size=3),\n    nn.Conv3d(in_channels=59, out_channels=8, kernel_size=1),\n    nn.Conv2d(in_channels=8, out_channels=58, kernel_size=1),\n    nn.Conv3d(in_channels=58, out_channels=13, kernel_size=1)\n)", "description": "This neural network takes an input of shape [100] and produces an output of shape [13]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=190, hidden_size=22, batch_first=True),\n    nn.Conv3d(in_channels=22, out_channels=7, kernel_size=3),\n    nn.LSTM(input_size=7, hidden_size=15, batch_first=True)\n)", "description": "This neural network takes an input of shape [190] and produces an output of shape [15]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=245, out_channels=13, kernel_size=3),\n    nn.LSTM(input_size=13, hidden_size=16, batch_first=True),\n    nn.Linear(in_features=16, out_features=239),\n    nn.Linear(in_features=239, out_features=124),\n    nn.Conv3d(in_channels=124, out_channels=36, kernel_size=3),\n    nn.Conv3d(in_channels=36, out_channels=44, kernel_size=3),\n    nn.Conv1d(in_channels=44, out_channels=47, kernel_size=5),\n    nn.Linear(in_features=47, out_features=87),\n    nn.Conv3d(in_channels=87, out_channels=5, kernel_size=3)\n)", "description": "This neural network takes an input of shape [245] and produces an output of shape [5]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=79, hidden_size=13, batch_first=True),\n    nn.LSTM(input_size=13, hidden_size=72, batch_first=True),\n    nn.Linear(in_features=72, out_features=103),\n    nn.Conv3d(in_channels=154, out_channels=2, kernel_size=4)\n)", "description": "This neural network takes an input of shape [154, 79] and produces an output of shape [2, 103]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=142, out_features=44),\n    nn.Linear(in_features=44, out_features=183)\n)", "description": "This neural network takes an input of shape [142] and produces an output of shape [183]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=162, out_channels=57, kernel_size=3),\n    nn.Linear(in_features=217, out_features=27),\n    nn.Conv2d(in_channels=57, out_channels=35, kernel_size=2),\n    nn.Conv3d(in_channels=35, out_channels=52, kernel_size=5),\n    nn.Conv3d(in_channels=52, out_channels=29, kernel_size=4),\n    nn.Linear(in_features=27, out_features=21),\n    nn.Conv1d(in_channels=29, out_channels=54, kernel_size=3),\n    nn.Conv3d(in_channels=54, out_channels=57, kernel_size=5),\n    nn.Conv2d(in_channels=57, out_channels=64, kernel_size=5)\n)", "description": "This neural network takes an input of shape [162, 217] and produces an output of shape [64, 21]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=240, hidden_size=2, batch_first=True),\n    nn.Conv1d(in_channels=140, out_channels=31, kernel_size=2),\n    nn.Conv3d(in_channels=31, out_channels=20, kernel_size=5),\n    nn.LSTM(input_size=2, hidden_size=4, batch_first=True),\n    nn.Linear(in_features=4, out_features=127),\n    nn.Conv1d(in_channels=20, out_channels=4, kernel_size=3),\n    nn.Linear(in_features=127, out_features=203),\n    nn.Conv2d(in_channels=4, out_channels=19, kernel_size=1)\n)", "description": "This neural network takes an input of shape [140, 3, 240] and produces an output of shape [19, 3, 203]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=60, out_channels=20, kernel_size=1)\n)", "description": "This neural network takes an input of shape [60] and produces an output of shape [20]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=177, hidden_size=13, batch_first=True),\n    nn.Conv1d(in_channels=13, out_channels=57, kernel_size=5),\n    nn.Conv3d(in_channels=57, out_channels=63, kernel_size=5),\n    nn.Conv1d(in_channels=63, out_channels=63, kernel_size=1),\n    nn.GRU(input_size=63, hidden_size=29, batch_first=True),\n    nn.Conv3d(in_channels=29, out_channels=45, kernel_size=2),\n    nn.LSTM(input_size=45, hidden_size=59, batch_first=True),\n    nn.Conv2d(in_channels=59, out_channels=28, kernel_size=5)\n)", "description": "This neural network takes an input of shape [177] and produces an output of shape [28]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=139, out_features=100),\n    nn.LSTM(input_size=100, hidden_size=61, batch_first=True),\n    nn.Conv2d(in_channels=61, out_channels=48, kernel_size=1),\n    nn.Conv2d(in_channels=48, out_channels=8, kernel_size=2),\n    nn.GRU(input_size=8, hidden_size=74, batch_first=True),\n    nn.Conv1d(in_channels=74, out_channels=8, kernel_size=5)\n)", "description": "This neural network takes an input of shape [139] and produces an output of shape [8]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=244, hidden_size=13, batch_first=True),\n    nn.GRU(input_size=13, hidden_size=106, batch_first=True),\n    nn.Linear(in_features=106, out_features=190),\n    nn.LSTM(input_size=190, hidden_size=80, batch_first=True),\n    nn.Conv3d(in_channels=208, out_channels=31, kernel_size=3),\n    nn.Conv1d(in_channels=31, out_channels=16, kernel_size=1),\n    nn.Conv1d(in_channels=16, out_channels=15, kernel_size=5)\n)", "description": "This neural network takes an input of shape [208, 244] and produces an output of shape [15, 80]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=227, out_channels=39, kernel_size=4),\n    nn.Linear(in_features=39, out_features=121),\n    nn.GRU(input_size=121, hidden_size=88, batch_first=True),\n    nn.Conv3d(in_channels=88, out_channels=7, kernel_size=3),\n    nn.Linear(in_features=7, out_features=163),\n    nn.LSTM(input_size=163, hidden_size=76, batch_first=True),\n    nn.Conv3d(in_channels=76, out_channels=18, kernel_size=1),\n    nn.Conv3d(in_channels=18, out_channels=54, kernel_size=2),\n    nn.Linear(in_features=54, out_features=212)\n)", "description": "This neural network takes an input of shape [227] and produces an output of shape [212]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=39, out_channels=18, kernel_size=1),\n    nn.Conv1d(in_channels=18, out_channels=33, kernel_size=5),\n    nn.Conv3d(in_channels=33, out_channels=8, kernel_size=1),\n    nn.Linear(in_features=2, out_features=251),\n    nn.GRU(input_size=251, hidden_size=118, batch_first=True),\n    nn.Linear(in_features=118, out_features=101),\n    nn.Linear(in_features=101, out_features=1),\n    nn.GRU(input_size=1, hidden_size=103, batch_first=True),\n    nn.Conv1d(in_channels=8, out_channels=62, kernel_size=4),\n    nn.LSTM(input_size=103, hidden_size=60, batch_first=True)\n)", "description": "This neural network takes an input of shape [39, 2] and produces an output of shape [62, 60]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=88, hidden_size=4, batch_first=True),\n    nn.Conv2d(in_channels=121, out_channels=56, kernel_size=4),\n    nn.Linear(in_features=4, out_features=121),\n    nn.LSTM(input_size=121, hidden_size=4, batch_first=True),\n    nn.Conv2d(in_channels=56, out_channels=32, kernel_size=1),\n    nn.Conv3d(in_channels=32, out_channels=11, kernel_size=4),\n    nn.LSTM(input_size=4, hidden_size=55, batch_first=True),\n    nn.Linear(in_features=55, out_features=113)\n)", "description": "This neural network takes an input of shape [121, 218, 88] and produces an output of shape [11, 218, 113]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=219, out_features=51),\n    nn.GRU(input_size=51, hidden_size=30, batch_first=True)\n)", "description": "This neural network takes an input of shape [221, 219] and produces an output of shape [221, 30]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=221, out_channels=21, kernel_size=2),\n    nn.Conv1d(in_channels=21, out_channels=39, kernel_size=4),\n    nn.Conv3d(in_channels=39, out_channels=9, kernel_size=4),\n    nn.Conv1d(in_channels=9, out_channels=26, kernel_size=2),\n    nn.LSTM(input_size=26, hidden_size=88, batch_first=True),\n    nn.Conv1d(in_channels=88, out_channels=5, kernel_size=3),\n    nn.Linear(in_features=5, out_features=156),\n    nn.Conv1d(in_channels=156, out_channels=26, kernel_size=2),\n    nn.Linear(in_features=26, out_features=230)\n)", "description": "This neural network takes an input of shape [221] and produces an output of shape [230]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=238, hidden_size=71, batch_first=True),\n    nn.Conv3d(in_channels=71, out_channels=20, kernel_size=4),\n    nn.Conv2d(in_channels=20, out_channels=52, kernel_size=3),\n    nn.Conv3d(in_channels=52, out_channels=23, kernel_size=5),\n    nn.LSTM(input_size=23, hidden_size=35, batch_first=True)\n)", "description": "This neural network takes an input of shape [238] and produces an output of shape [35]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=117, hidden_size=102, batch_first=True),\n    nn.Conv1d(in_channels=102, out_channels=49, kernel_size=5),\n    nn.Conv2d(in_channels=49, out_channels=25, kernel_size=4),\n    nn.Conv2d(in_channels=25, out_channels=53, kernel_size=2),\n    nn.GRU(input_size=53, hidden_size=119, batch_first=True),\n    nn.LSTM(input_size=119, hidden_size=6, batch_first=True),\n    nn.Conv3d(in_channels=6, out_channels=58, kernel_size=3),\n    nn.LSTM(input_size=58, hidden_size=14, batch_first=True),\n    nn.Conv2d(in_channels=14, out_channels=32, kernel_size=1)\n)", "description": "This neural network takes an input of shape [117] and produces an output of shape [32]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=62, out_channels=58, kernel_size=2),\n    nn.Conv3d(in_channels=58, out_channels=2, kernel_size=2),\n    nn.Conv3d(in_channels=2, out_channels=48, kernel_size=1),\n    nn.Linear(in_features=106, out_features=131),\n    nn.Linear(in_features=131, out_features=47),\n    nn.GRU(input_size=47, hidden_size=106, batch_first=True),\n    nn.Conv3d(in_channels=48, out_channels=6, kernel_size=2),\n    nn.GRU(input_size=106, hidden_size=82, batch_first=True)\n)", "description": "This neural network takes an input of shape [62, 106] and produces an output of shape [6, 82]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=114, out_features=13),\n    nn.Conv1d(in_channels=13, out_channels=35, kernel_size=5),\n    nn.Conv2d(in_channels=35, out_channels=62, kernel_size=1),\n    nn.Conv1d(in_channels=62, out_channels=41, kernel_size=5),\n    nn.Conv3d(in_channels=41, out_channels=39, kernel_size=1),\n    nn.Linear(in_features=39, out_features=157),\n    nn.Linear(in_features=157, out_features=236),\n    nn.GRU(input_size=236, hidden_size=16, batch_first=True)\n)", "description": "This neural network takes an input of shape [114] and produces an output of shape [16]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=224, out_channels=43, kernel_size=1),\n    nn.Conv1d(in_channels=43, out_channels=31, kernel_size=4),\n    nn.Conv2d(in_channels=31, out_channels=14, kernel_size=1),\n    nn.Conv2d(in_channels=14, out_channels=58, kernel_size=2),\n    nn.Conv2d(in_channels=58, out_channels=28, kernel_size=4)\n)", "description": "This neural network takes an input of shape [224, 256] and produces an output of shape [28, 256]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=149, hidden_size=97, batch_first=True),\n    nn.LSTM(input_size=97, hidden_size=48, batch_first=True),\n    nn.GRU(input_size=48, hidden_size=26, batch_first=True),\n    nn.GRU(input_size=26, hidden_size=74, batch_first=True),\n    nn.GRU(input_size=74, hidden_size=20, batch_first=True),\n    nn.Conv1d(in_channels=20, out_channels=25, kernel_size=4),\n    nn.Conv3d(in_channels=25, out_channels=38, kernel_size=1),\n    nn.Conv3d(in_channels=38, out_channels=17, kernel_size=1),\n    nn.Linear(in_features=17, out_features=29)\n)", "description": "This neural network takes an input of shape [149] and produces an output of shape [29]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=76, hidden_size=5, batch_first=True),\n    nn.Conv3d(in_channels=5, out_channels=23, kernel_size=4),\n    nn.Conv2d(in_channels=23, out_channels=58, kernel_size=5)\n)", "description": "This neural network takes an input of shape [76] and produces an output of shape [58]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=32, out_channels=30, kernel_size=4),\n    nn.LSTM(input_size=30, hidden_size=126, batch_first=True),\n    nn.Linear(in_features=126, out_features=228),\n    nn.Conv3d(in_channels=228, out_channels=58, kernel_size=3),\n    nn.Linear(in_features=58, out_features=51),\n    nn.LSTM(input_size=51, hidden_size=62, batch_first=True),\n    nn.Linear(in_features=62, out_features=246),\n    nn.Conv3d(in_channels=246, out_channels=28, kernel_size=5)\n)", "description": "This neural network takes an input of shape [32] and produces an output of shape [28]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=47, out_channels=61, kernel_size=5)\n)", "description": "This neural network takes an input of shape [47] and produces an output of shape [61]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=166, hidden_size=45, batch_first=True),\n    nn.Conv2d(in_channels=159, out_channels=48, kernel_size=4),\n    nn.GRU(input_size=45, hidden_size=37, batch_first=True),\n    nn.Conv1d(in_channels=48, out_channels=16, kernel_size=3),\n    nn.GRU(input_size=37, hidden_size=98, batch_first=True),\n    nn.Conv1d(in_channels=16, out_channels=30, kernel_size=5),\n    nn.GRU(input_size=98, hidden_size=98, batch_first=True)\n)", "description": "This neural network takes an input of shape [159, 166] and produces an output of shape [30, 98]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=128, hidden_size=34, batch_first=True)\n)", "description": "This neural network takes an input of shape [185, 156, 128] and produces an output of shape [185, 156, 34]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=75, out_channels=51, kernel_size=4),\n    nn.GRU(input_size=32, hidden_size=103, batch_first=True),\n    nn.LSTM(input_size=103, hidden_size=6, batch_first=True),\n    nn.Conv3d(in_channels=51, out_channels=53, kernel_size=3),\n    nn.GRU(input_size=6, hidden_size=116, batch_first=True),\n    nn.Conv3d(in_channels=53, out_channels=63, kernel_size=5)\n)", "description": "This neural network takes an input of shape [75, 174, 32] and produces an output of shape [63, 174, 116]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=48, out_features=252)\n)", "description": "This neural network takes an input of shape [41, 48] and produces an output of shape [41, 252]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=47, out_channels=9, kernel_size=3),\n    nn.GRU(input_size=9, hidden_size=61, batch_first=True),\n    nn.LSTM(input_size=61, hidden_size=107, batch_first=True),\n    nn.Conv1d(in_channels=107, out_channels=33, kernel_size=4),\n    nn.Conv2d(in_channels=33, out_channels=35, kernel_size=5)\n)", "description": "This neural network takes an input of shape [47] and produces an output of shape [35]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=62, out_features=9)\n)", "description": "This neural network takes an input of shape [62] and produces an output of shape [9]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=228, out_channels=63, kernel_size=2),\n    nn.GRU(input_size=63, hidden_size=106, batch_first=True),\n    nn.Conv1d(in_channels=106, out_channels=31, kernel_size=5),\n    nn.Conv3d(in_channels=31, out_channels=18, kernel_size=1),\n    nn.GRU(input_size=18, hidden_size=44, batch_first=True),\n    nn.Linear(in_features=44, out_features=189),\n    nn.Conv3d(in_channels=189, out_channels=28, kernel_size=5),\n    nn.LSTM(input_size=28, hidden_size=97, batch_first=True)\n)", "description": "This neural network takes an input of shape [228] and produces an output of shape [97]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=9, hidden_size=48, batch_first=True),\n    nn.Conv1d(in_channels=20, out_channels=24, kernel_size=4),\n    nn.LSTM(input_size=48, hidden_size=33, batch_first=True),\n    nn.GRU(input_size=33, hidden_size=73, batch_first=True),\n    nn.Conv1d(in_channels=24, out_channels=6, kernel_size=5)\n)", "description": "This neural network takes an input of shape [20, 9] and produces an output of shape [6, 73]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=91, out_channels=49, kernel_size=5),\n    nn.Conv3d(in_channels=49, out_channels=12, kernel_size=4),\n    nn.Conv2d(in_channels=12, out_channels=30, kernel_size=2),\n    nn.LSTM(input_size=205, hidden_size=73, batch_first=True),\n    nn.Conv1d(in_channels=30, out_channels=38, kernel_size=3),\n    nn.Conv1d(in_channels=38, out_channels=7, kernel_size=2),\n    nn.LSTM(input_size=73, hidden_size=101, batch_first=True),\n    nn.LSTM(input_size=101, hidden_size=55, batch_first=True)\n)", "description": "This neural network takes an input of shape [91, 205] and produces an output of shape [7, 55]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=221, hidden_size=43, batch_first=True),\n    nn.Conv3d(in_channels=23, out_channels=61, kernel_size=3),\n    nn.LSTM(input_size=43, hidden_size=92, batch_first=True),\n    nn.Conv2d(in_channels=61, out_channels=45, kernel_size=1),\n    nn.Conv2d(in_channels=45, out_channels=29, kernel_size=2),\n    nn.Conv1d(in_channels=29, out_channels=40, kernel_size=4)\n)", "description": "This neural network takes an input of shape [23, 221] and produces an output of shape [40, 92]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=202, out_channels=24, kernel_size=4),\n    nn.LSTM(input_size=129, hidden_size=32, batch_first=True),\n    nn.Conv2d(in_channels=24, out_channels=50, kernel_size=5),\n    nn.GRU(input_size=32, hidden_size=109, batch_first=True),\n    nn.Conv3d(in_channels=50, out_channels=7, kernel_size=2),\n    nn.Conv1d(in_channels=7, out_channels=57, kernel_size=1),\n    nn.Conv3d(in_channels=57, out_channels=26, kernel_size=1),\n    nn.Conv1d(in_channels=26, out_channels=59, kernel_size=5),\n    nn.Conv2d(in_channels=59, out_channels=55, kernel_size=2),\n    nn.Conv2d(in_channels=55, out_channels=31, kernel_size=3)\n)", "description": "This neural network takes an input of shape [202, 25, 129] and produces an output of shape [31, 25, 109]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=125, out_channels=13, kernel_size=4),\n    nn.Conv1d(in_channels=13, out_channels=4, kernel_size=5)\n)", "description": "This neural network takes an input of shape [125, 131, 147] and produces an output of shape [4, 131, 147]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=202, out_features=83)\n)", "description": "This neural network takes an input of shape [202] and produces an output of shape [83]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=89, out_channels=61, kernel_size=3),\n    nn.GRU(input_size=19, hidden_size=3, batch_first=True),\n    nn.Conv3d(in_channels=61, out_channels=42, kernel_size=3),\n    nn.GRU(input_size=3, hidden_size=18, batch_first=True),\n    nn.Conv2d(in_channels=42, out_channels=12, kernel_size=4),\n    nn.LSTM(input_size=18, hidden_size=100, batch_first=True),\n    nn.Linear(in_features=100, out_features=11),\n    nn.Linear(in_features=11, out_features=32),\n    nn.Conv2d(in_channels=12, out_channels=37, kernel_size=5)\n)", "description": "This neural network takes an input of shape [89, 130, 19] and produces an output of shape [37, 130, 32]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=123, out_channels=21, kernel_size=1),\n    nn.GRU(input_size=225, hidden_size=91, batch_first=True),\n    nn.GRU(input_size=91, hidden_size=122, batch_first=True),\n    nn.Conv1d(in_channels=21, out_channels=33, kernel_size=4)\n)", "description": "This neural network takes an input of shape [123, 225] and produces an output of shape [33, 122]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=121, out_channels=62, kernel_size=4),\n    nn.GRU(input_size=62, hidden_size=56, batch_first=True),\n    nn.Linear(in_features=56, out_features=75),\n    nn.Conv2d(in_channels=75, out_channels=1, kernel_size=5)\n)", "description": "This neural network takes an input of shape [121] and produces an output of shape [1]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=85, hidden_size=32, batch_first=True),\n    nn.Conv1d(in_channels=25, out_channels=56, kernel_size=5),\n    nn.Conv3d(in_channels=56, out_channels=19, kernel_size=5),\n    nn.Conv1d(in_channels=19, out_channels=20, kernel_size=1),\n    nn.Linear(in_features=32, out_features=72),\n    nn.Linear(in_features=72, out_features=102),\n    nn.Linear(in_features=102, out_features=180),\n    nn.LSTM(input_size=180, hidden_size=119, batch_first=True)\n)", "description": "This neural network takes an input of shape [25, 85] and produces an output of shape [20, 119]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=73, hidden_size=6, batch_first=True),\n    nn.Conv3d(in_channels=6, out_channels=8, kernel_size=3),\n    nn.Linear(in_features=8, out_features=29)\n)", "description": "This neural network takes an input of shape [73] and produces an output of shape [29]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=154, out_channels=24, kernel_size=4),\n    nn.Conv3d(in_channels=24, out_channels=48, kernel_size=1),\n    nn.LSTM(input_size=48, hidden_size=86, batch_first=True),\n    nn.Conv2d(in_channels=86, out_channels=47, kernel_size=1),\n    nn.Conv3d(in_channels=47, out_channels=6, kernel_size=5),\n    nn.Conv1d(in_channels=6, out_channels=51, kernel_size=4)\n)", "description": "This neural network takes an input of shape [154] and produces an output of shape [51]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=238, out_channels=27, kernel_size=3),\n    nn.Linear(in_features=27, out_features=58),\n    nn.Conv1d(in_channels=58, out_channels=11, kernel_size=1),\n    nn.GRU(input_size=11, hidden_size=126, batch_first=True),\n    nn.LSTM(input_size=126, hidden_size=59, batch_first=True),\n    nn.Conv2d(in_channels=59, out_channels=61, kernel_size=5),\n    nn.Linear(in_features=61, out_features=53)\n)", "description": "This neural network takes an input of shape [238] and produces an output of shape [53]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=111, out_features=109),\n    nn.Conv3d(in_channels=109, out_channels=9, kernel_size=3),\n    nn.Conv1d(in_channels=9, out_channels=35, kernel_size=2),\n    nn.Linear(in_features=35, out_features=212),\n    nn.Linear(in_features=212, out_features=230),\n    nn.GRU(input_size=230, hidden_size=97, batch_first=True),\n    nn.Conv1d(in_channels=97, out_channels=10, kernel_size=5),\n    nn.GRU(input_size=10, hidden_size=9, batch_first=True),\n    nn.Linear(in_features=9, out_features=138),\n    nn.LSTM(input_size=138, hidden_size=50, batch_first=True)\n)", "description": "This neural network takes an input of shape [111] and produces an output of shape [50]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=124, hidden_size=56, batch_first=True),\n    nn.Conv2d(in_channels=177, out_channels=7, kernel_size=5),\n    nn.GRU(input_size=56, hidden_size=42, batch_first=True),\n    nn.Conv2d(in_channels=7, out_channels=16, kernel_size=4),\n    nn.LSTM(input_size=42, hidden_size=18, batch_first=True)\n)", "description": "This neural network takes an input of shape [177, 46, 124] and produces an output of shape [16, 46, 18]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=109, out_channels=46, kernel_size=4),\n    nn.Conv2d(in_channels=46, out_channels=6, kernel_size=3),\n    nn.LSTM(input_size=6, hidden_size=116, batch_first=True),\n    nn.LSTM(input_size=116, hidden_size=4, batch_first=True),\n    nn.Conv2d(in_channels=4, out_channels=47, kernel_size=2),\n    nn.Conv2d(in_channels=47, out_channels=23, kernel_size=5),\n    nn.Conv3d(in_channels=23, out_channels=18, kernel_size=5),\n    nn.Conv1d(in_channels=18, out_channels=56, kernel_size=2),\n    nn.Linear(in_features=56, out_features=179),\n    nn.Linear(in_features=179, out_features=207)\n)", "description": "This neural network takes an input of shape [109] and produces an output of shape [207]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=5, out_channels=45, kernel_size=3),\n    nn.Conv2d(in_channels=45, out_channels=47, kernel_size=5)\n)", "description": "This neural network takes an input of shape [5] and produces an output of shape [47]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=94, hidden_size=112, batch_first=True)\n)", "description": "This neural network takes an input of shape [181, 244, 94] and produces an output of shape [181, 244, 112]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=209, out_channels=28, kernel_size=2),\n    nn.Conv1d(in_channels=28, out_channels=4, kernel_size=2),\n    nn.Conv1d(in_channels=4, out_channels=62, kernel_size=3)\n)", "description": "This neural network takes an input of shape [209, 83] and produces an output of shape [62, 83]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=221, out_features=46),\n    nn.LSTM(input_size=46, hidden_size=119, batch_first=True),\n    nn.Conv2d(in_channels=251, out_channels=42, kernel_size=2),\n    nn.Conv2d(in_channels=42, out_channels=29, kernel_size=5),\n    nn.Conv3d(in_channels=29, out_channels=38, kernel_size=2),\n    nn.Linear(in_features=119, out_features=134),\n    nn.LSTM(input_size=134, hidden_size=50, batch_first=True),\n    nn.Linear(in_features=50, out_features=36),\n    nn.Conv3d(in_channels=38, out_channels=24, kernel_size=1),\n    nn.Linear(in_features=36, out_features=212)\n)", "description": "This neural network takes an input of shape [251, 70, 221] and produces an output of shape [24, 70, 212]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=252, out_features=136),\n    nn.Conv2d(in_channels=86, out_channels=22, kernel_size=3),\n    nn.Linear(in_features=136, out_features=223),\n    nn.Conv2d(in_channels=22, out_channels=22, kernel_size=3)\n)", "description": "This neural network takes an input of shape [86, 202, 252] and produces an output of shape [22, 202, 223]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=164, out_features=232),\n    nn.LSTM(input_size=232, hidden_size=117, batch_first=True),\n    nn.Conv1d(in_channels=32, out_channels=56, kernel_size=3),\n    nn.Linear(in_features=117, out_features=224),\n    nn.Linear(in_features=224, out_features=104),\n    nn.GRU(input_size=104, hidden_size=90, batch_first=True),\n    nn.GRU(input_size=90, hidden_size=48, batch_first=True),\n    nn.Conv2d(in_channels=56, out_channels=23, kernel_size=5),\n    nn.Linear(in_features=48, out_features=2),\n    nn.Conv3d(in_channels=23, out_channels=47, kernel_size=2)\n)", "description": "This neural network takes an input of shape [32, 164] and produces an output of shape [47, 2]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=57, out_channels=14, kernel_size=4),\n    nn.Linear(in_features=88, out_features=74)\n)", "description": "This neural network takes an input of shape [57, 223, 88] and produces an output of shape [14, 223, 74]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=115, hidden_size=103, batch_first=True),\n    nn.Linear(in_features=103, out_features=50),\n    nn.Linear(in_features=50, out_features=57),\n    nn.Linear(in_features=57, out_features=122),\n    nn.Linear(in_features=122, out_features=228),\n    nn.Linear(in_features=228, out_features=82),\n    nn.Conv2d(in_channels=216, out_channels=41, kernel_size=1)\n)", "description": "This neural network takes an input of shape [216, 148, 115] and produces an output of shape [41, 148, 82]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=166, hidden_size=117, batch_first=True),\n    nn.Conv1d(in_channels=117, out_channels=20, kernel_size=4)\n)", "description": "This neural network takes an input of shape [166] and produces an output of shape [20]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=24, hidden_size=22, batch_first=True),\n    nn.LSTM(input_size=22, hidden_size=33, batch_first=True),\n    nn.Conv1d(in_channels=94, out_channels=22, kernel_size=2),\n    nn.Conv1d(in_channels=22, out_channels=7, kernel_size=1),\n    nn.LSTM(input_size=33, hidden_size=81, batch_first=True),\n    nn.Conv3d(in_channels=7, out_channels=25, kernel_size=4),\n    nn.LSTM(input_size=81, hidden_size=40, batch_first=True),\n    nn.Conv1d(in_channels=25, out_channels=59, kernel_size=3),\n    nn.Conv3d(in_channels=59, out_channels=58, kernel_size=2),\n    nn.Conv2d(in_channels=58, out_channels=16, kernel_size=4)\n)", "description": "This neural network takes an input of shape [94, 24] and produces an output of shape [16, 40]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=123, out_channels=54, kernel_size=5),\n    nn.Linear(in_features=45, out_features=17),\n    nn.Linear(in_features=17, out_features=193)\n)", "description": "This neural network takes an input of shape [123, 45] and produces an output of shape [54, 193]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=43, out_channels=64, kernel_size=4),\n    nn.Linear(in_features=87, out_features=87),\n    nn.Conv3d(in_channels=64, out_channels=49, kernel_size=5),\n    nn.GRU(input_size=87, hidden_size=85, batch_first=True),\n    nn.Linear(in_features=85, out_features=140),\n    nn.Conv2d(in_channels=49, out_channels=48, kernel_size=3),\n    nn.Conv3d(in_channels=48, out_channels=58, kernel_size=2),\n    nn.GRU(input_size=140, hidden_size=67, batch_first=True),\n    nn.LSTM(input_size=67, hidden_size=21, batch_first=True)\n)", "description": "This neural network takes an input of shape [43, 20, 87] and produces an output of shape [58, 20, 21]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=132, hidden_size=41, batch_first=True),\n    nn.Conv2d(in_channels=41, out_channels=53, kernel_size=2),\n    nn.Linear(in_features=53, out_features=23),\n    nn.GRU(input_size=23, hidden_size=123, batch_first=True),\n    nn.Conv1d(in_channels=123, out_channels=8, kernel_size=4),\n    nn.Conv1d(in_channels=8, out_channels=56, kernel_size=4)\n)", "description": "This neural network takes an input of shape [132] and produces an output of shape [56]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=93, out_features=77),\n    nn.GRU(input_size=77, hidden_size=44, batch_first=True),\n    nn.Linear(in_features=44, out_features=198),\n    nn.Linear(in_features=198, out_features=2),\n    nn.Conv3d(in_channels=210, out_channels=30, kernel_size=1)\n)", "description": "This neural network takes an input of shape [210, 93] and produces an output of shape [30, 2]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=175, out_channels=8, kernel_size=3),\n    nn.LSTM(input_size=209, hidden_size=98, batch_first=True),\n    nn.GRU(input_size=98, hidden_size=109, batch_first=True),\n    nn.Conv2d(in_channels=8, out_channels=40, kernel_size=5),\n    nn.GRU(input_size=109, hidden_size=38, batch_first=True),\n    nn.LSTM(input_size=38, hidden_size=111, batch_first=True),\n    nn.Conv3d(in_channels=40, out_channels=16, kernel_size=4),\n    nn.Linear(in_features=111, out_features=210),\n    nn.Conv1d(in_channels=16, out_channels=39, kernel_size=3)\n)", "description": "This neural network takes an input of shape [175, 17, 209] and produces an output of shape [39, 17, 210]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=166, out_channels=15, kernel_size=4)\n)", "description": "This neural network takes an input of shape [166, 166] and produces an output of shape [15, 166]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=168, hidden_size=88, batch_first=True),\n    nn.Linear(in_features=88, out_features=255),\n    nn.Linear(in_features=255, out_features=9),\n    nn.Conv1d(in_channels=34, out_channels=30, kernel_size=2),\n    nn.Linear(in_features=9, out_features=104),\n    nn.Linear(in_features=104, out_features=170),\n    nn.Conv1d(in_channels=30, out_channels=27, kernel_size=1),\n    nn.Linear(in_features=170, out_features=71),\n    nn.LSTM(input_size=71, hidden_size=25, batch_first=True)\n)", "description": "This neural network takes an input of shape [34, 168] and produces an output of shape [27, 25]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=217, out_channels=38, kernel_size=5),\n    nn.Linear(in_features=124, out_features=120),\n    nn.Conv2d(in_channels=38, out_channels=39, kernel_size=2),\n    nn.LSTM(input_size=120, hidden_size=79, batch_first=True),\n    nn.Conv1d(in_channels=39, out_channels=40, kernel_size=3),\n    nn.LSTM(input_size=79, hidden_size=55, batch_first=True),\n    nn.LSTM(input_size=55, hidden_size=127, batch_first=True),\n    nn.GRU(input_size=127, hidden_size=31, batch_first=True),\n    nn.Conv2d(in_channels=40, out_channels=48, kernel_size=1)\n)", "description": "This neural network takes an input of shape [217, 124] and produces an output of shape [48, 31]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=107, hidden_size=4, batch_first=True),\n    nn.Linear(in_features=4, out_features=195),\n    nn.LSTM(input_size=195, hidden_size=124, batch_first=True)\n)", "description": "This neural network takes an input of shape [107] and produces an output of shape [124]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=215, out_channels=57, kernel_size=3),\n    nn.Conv3d(in_channels=57, out_channels=39, kernel_size=1),\n    nn.GRU(input_size=93, hidden_size=43, batch_first=True),\n    nn.Conv1d(in_channels=39, out_channels=29, kernel_size=5),\n    nn.Conv3d(in_channels=29, out_channels=61, kernel_size=1),\n    nn.Conv1d(in_channels=61, out_channels=41, kernel_size=1),\n    nn.Conv3d(in_channels=41, out_channels=40, kernel_size=1),\n    nn.LSTM(input_size=43, hidden_size=7, batch_first=True)\n)", "description": "This neural network takes an input of shape [215, 58, 93] and produces an output of shape [40, 58, 7]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=57, out_channels=24, kernel_size=5)\n)", "description": "This neural network takes an input of shape [57, 225] and produces an output of shape [24, 225]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=106, out_features=116),\n    nn.Conv1d(in_channels=246, out_channels=17, kernel_size=1)\n)", "description": "This neural network takes an input of shape [246, 148, 106] and produces an output of shape [17, 148, 116]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=201, out_channels=61, kernel_size=1),\n    nn.LSTM(input_size=61, hidden_size=91, batch_first=True),\n    nn.Conv1d(in_channels=91, out_channels=58, kernel_size=4),\n    nn.Conv1d(in_channels=58, out_channels=57, kernel_size=5),\n    nn.Conv2d(in_channels=57, out_channels=41, kernel_size=1),\n    nn.LSTM(input_size=41, hidden_size=58, batch_first=True),\n    nn.Conv1d(in_channels=58, out_channels=27, kernel_size=5),\n    nn.Conv2d(in_channels=27, out_channels=44, kernel_size=3),\n    nn.Linear(in_features=44, out_features=45)\n)", "description": "This neural network takes an input of shape [201] and produces an output of shape [45]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=123, out_features=152)\n)", "description": "This neural network takes an input of shape [123] and produces an output of shape [152]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=211, out_channels=13, kernel_size=2),\n    nn.Conv3d(in_channels=13, out_channels=50, kernel_size=5),\n    nn.GRU(input_size=195, hidden_size=99, batch_first=True),\n    nn.GRU(input_size=99, hidden_size=77, batch_first=True),\n    nn.GRU(input_size=77, hidden_size=10, batch_first=True),\n    nn.Conv1d(in_channels=50, out_channels=58, kernel_size=5),\n    nn.LSTM(input_size=10, hidden_size=9, batch_first=True),\n    nn.Linear(in_features=9, out_features=215)\n)", "description": "This neural network takes an input of shape [211, 195] and produces an output of shape [58, 215]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=21, hidden_size=30, batch_first=True),\n    nn.Conv2d(in_channels=134, out_channels=30, kernel_size=4),\n    nn.GRU(input_size=30, hidden_size=32, batch_first=True),\n    nn.Linear(in_features=32, out_features=140),\n    nn.GRU(input_size=140, hidden_size=82, batch_first=True),\n    nn.Conv1d(in_channels=30, out_channels=3, kernel_size=3),\n    nn.Conv1d(in_channels=3, out_channels=9, kernel_size=2),\n    nn.Conv2d(in_channels=9, out_channels=26, kernel_size=3),\n    nn.GRU(input_size=82, hidden_size=122, batch_first=True),\n    nn.LSTM(input_size=122, hidden_size=28, batch_first=True)\n)", "description": "This neural network takes an input of shape [134, 21] and produces an output of shape [26, 28]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=164, out_features=120),\n    nn.Linear(in_features=120, out_features=243),\n    nn.Conv3d(in_channels=243, out_channels=18, kernel_size=3)\n)", "description": "This neural network takes an input of shape [164] and produces an output of shape [18]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=115, out_features=132),\n    nn.Linear(in_features=132, out_features=56),\n    nn.GRU(input_size=56, hidden_size=71, batch_first=True)\n)", "description": "This neural network takes an input of shape [124, 11, 115] and produces an output of shape [124, 11, 71]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=124, out_channels=64, kernel_size=3),\n    nn.LSTM(input_size=217, hidden_size=101, batch_first=True),\n    nn.Conv1d(in_channels=64, out_channels=32, kernel_size=2),\n    nn.LSTM(input_size=101, hidden_size=22, batch_first=True),\n    nn.Conv2d(in_channels=32, out_channels=53, kernel_size=5),\n    nn.GRU(input_size=22, hidden_size=24, batch_first=True)\n)", "description": "This neural network takes an input of shape [124, 38, 217] and produces an output of shape [53, 38, 24]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=76, out_channels=62, kernel_size=2),\n    nn.Conv3d(in_channels=62, out_channels=16, kernel_size=4),\n    nn.Conv3d(in_channels=16, out_channels=12, kernel_size=3),\n    nn.Conv3d(in_channels=12, out_channels=46, kernel_size=2),\n    nn.Linear(in_features=131, out_features=135),\n    nn.Linear(in_features=135, out_features=119),\n    nn.LSTM(input_size=119, hidden_size=127, batch_first=True),\n    nn.Conv3d(in_channels=46, out_channels=11, kernel_size=3),\n    nn.Conv2d(in_channels=11, out_channels=45, kernel_size=1)\n)", "description": "This neural network takes an input of shape [76, 62, 131] and produces an output of shape [45, 62, 127]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=80, out_channels=59, kernel_size=1),\n    nn.LSTM(input_size=59, hidden_size=12, batch_first=True)\n)", "description": "This neural network takes an input of shape [80] and produces an output of shape [12]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=59, out_channels=32, kernel_size=1),\n    nn.Conv2d(in_channels=32, out_channels=57, kernel_size=4),\n    nn.LSTM(input_size=173, hidden_size=91, batch_first=True),\n    nn.Conv1d(in_channels=57, out_channels=51, kernel_size=3),\n    nn.Conv1d(in_channels=51, out_channels=58, kernel_size=4)\n)", "description": "This neural network takes an input of shape [59, 40, 173] and produces an output of shape [58, 40, 91]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=26, hidden_size=102, batch_first=True),\n    nn.GRU(input_size=102, hidden_size=41, batch_first=True),\n    nn.Linear(in_features=41, out_features=68),\n    nn.Linear(in_features=68, out_features=239),\n    nn.Linear(in_features=239, out_features=52),\n    nn.LSTM(input_size=52, hidden_size=79, batch_first=True),\n    nn.Conv2d(in_channels=53, out_channels=32, kernel_size=3),\n    nn.Conv1d(in_channels=32, out_channels=47, kernel_size=1),\n    nn.Conv1d(in_channels=47, out_channels=19, kernel_size=5)\n)", "description": "This neural network takes an input of shape [53, 246, 26] and produces an output of shape [19, 246, 79]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=25, out_features=63),\n    nn.LSTM(input_size=63, hidden_size=2, batch_first=True),\n    nn.Linear(in_features=2, out_features=221),\n    nn.Linear(in_features=221, out_features=246),\n    nn.Conv3d(in_channels=246, out_channels=38, kernel_size=4),\n    nn.Linear(in_features=38, out_features=1),\n    nn.Conv1d(in_channels=1, out_channels=51, kernel_size=5)\n)", "description": "This neural network takes an input of shape [25] and produces an output of shape [51]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=131, out_channels=45, kernel_size=5),\n    nn.Conv2d(in_channels=45, out_channels=53, kernel_size=4),\n    nn.GRU(input_size=53, hidden_size=108, batch_first=True),\n    nn.Linear(in_features=108, out_features=153),\n    nn.LSTM(input_size=153, hidden_size=81, batch_first=True),\n    nn.Conv2d(in_channels=81, out_channels=30, kernel_size=1)\n)", "description": "This neural network takes an input of shape [131] and produces an output of shape [30]."}, {"network": "nn.Sequential(\n    nn.Conv3d(in_channels=83, out_channels=21, kernel_size=4),\n    nn.Conv1d(in_channels=21, out_channels=29, kernel_size=3),\n    nn.Linear(in_features=122, out_features=80),\n    nn.LSTM(input_size=80, hidden_size=14, batch_first=True),\n    nn.GRU(input_size=14, hidden_size=21, batch_first=True),\n    nn.Linear(in_features=21, out_features=167),\n    nn.LSTM(input_size=167, hidden_size=35, batch_first=True),\n    nn.Conv1d(in_channels=29, out_channels=59, kernel_size=3),\n    nn.Conv1d(in_channels=59, out_channels=29, kernel_size=3)\n)", "description": "This neural network takes an input of shape [83, 122] and produces an output of shape [29, 35]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=213, out_features=148),\n    nn.Conv2d(in_channels=139, out_channels=1, kernel_size=1),\n    nn.Linear(in_features=148, out_features=58),\n    nn.GRU(input_size=58, hidden_size=113, batch_first=True),\n    nn.Conv3d(in_channels=1, out_channels=3, kernel_size=4),\n    nn.LSTM(input_size=113, hidden_size=41, batch_first=True),\n    nn.Conv2d(in_channels=3, out_channels=1, kernel_size=2)\n)", "description": "This neural network takes an input of shape [139, 213] and produces an output of shape [1, 41]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=162, hidden_size=34, batch_first=True),\n    nn.Linear(in_features=34, out_features=103),\n    nn.Conv2d(in_channels=168, out_channels=52, kernel_size=4),\n    nn.Conv2d(in_channels=52, out_channels=53, kernel_size=1),\n    nn.Conv3d(in_channels=53, out_channels=17, kernel_size=2)\n)", "description": "This neural network takes an input of shape [168, 162] and produces an output of shape [17, 103]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=16, hidden_size=16, batch_first=True),\n    nn.Conv2d(in_channels=57, out_channels=63, kernel_size=3),\n    nn.Conv1d(in_channels=63, out_channels=7, kernel_size=4),\n    nn.Conv1d(in_channels=7, out_channels=27, kernel_size=3),\n    nn.Conv1d(in_channels=27, out_channels=7, kernel_size=2),\n    nn.Conv3d(in_channels=7, out_channels=12, kernel_size=1),\n    nn.GRU(input_size=16, hidden_size=116, batch_first=True),\n    nn.GRU(input_size=116, hidden_size=79, batch_first=True)\n)", "description": "This neural network takes an input of shape [57, 16] and produces an output of shape [12, 79]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=207, out_channels=41, kernel_size=3),\n    nn.Conv2d(in_channels=41, out_channels=35, kernel_size=5),\n    nn.LSTM(input_size=35, hidden_size=74, batch_first=True),\n    nn.GRU(input_size=74, hidden_size=119, batch_first=True),\n    nn.Conv3d(in_channels=119, out_channels=34, kernel_size=5),\n    nn.Linear(in_features=34, out_features=92),\n    nn.LSTM(input_size=92, hidden_size=86, batch_first=True),\n    nn.Conv1d(in_channels=86, out_channels=47, kernel_size=3)\n)", "description": "This neural network takes an input of shape [207] and produces an output of shape [47]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=208, hidden_size=66, batch_first=True),\n    nn.LSTM(input_size=66, hidden_size=6, batch_first=True),\n    nn.Conv3d(in_channels=40, out_channels=31, kernel_size=1),\n    nn.Conv1d(in_channels=31, out_channels=62, kernel_size=5)\n)", "description": "This neural network takes an input of shape [40, 256, 208] and produces an output of shape [62, 256, 6]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=27, hidden_size=65, batch_first=True),\n    nn.GRU(input_size=65, hidden_size=79, batch_first=True)\n)", "description": "This neural network takes an input of shape [37, 176, 27] and produces an output of shape [37, 176, 79]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=94, hidden_size=102, batch_first=True),\n    nn.LSTM(input_size=102, hidden_size=5, batch_first=True),\n    nn.Conv2d(in_channels=193, out_channels=31, kernel_size=1),\n    nn.Conv1d(in_channels=31, out_channels=58, kernel_size=1)\n)", "description": "This neural network takes an input of shape [193, 94] and produces an output of shape [58, 5]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=253, out_channels=19, kernel_size=5),\n    nn.LSTM(input_size=19, hidden_size=97, batch_first=True),\n    nn.GRU(input_size=97, hidden_size=98, batch_first=True)\n)", "description": "This neural network takes an input of shape [253] and produces an output of shape [98]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=124, out_channels=27, kernel_size=4),\n    nn.LSTM(input_size=27, hidden_size=33, batch_first=True),\n    nn.GRU(input_size=33, hidden_size=114, batch_first=True),\n    nn.LSTM(input_size=114, hidden_size=70, batch_first=True),\n    nn.LSTM(input_size=70, hidden_size=48, batch_first=True),\n    nn.GRU(input_size=48, hidden_size=72, batch_first=True),\n    nn.Linear(in_features=72, out_features=245),\n    nn.Conv2d(in_channels=245, out_channels=9, kernel_size=3)\n)", "description": "This neural network takes an input of shape [124] and produces an output of shape [9]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=157, hidden_size=56, batch_first=True),\n    nn.Conv2d(in_channels=233, out_channels=20, kernel_size=4)\n)", "description": "This neural network takes an input of shape [233, 157] and produces an output of shape [20, 56]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=115, out_features=64),\n    nn.Conv1d(in_channels=64, out_channels=31, kernel_size=1),\n    nn.Conv3d(in_channels=31, out_channels=11, kernel_size=4),\n    nn.Linear(in_features=11, out_features=229)\n)", "description": "This neural network takes an input of shape [115] and produces an output of shape [229]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=134, hidden_size=48, batch_first=True),\n    nn.Conv1d(in_channels=159, out_channels=9, kernel_size=2),\n    nn.Conv2d(in_channels=9, out_channels=14, kernel_size=3),\n    nn.Conv2d(in_channels=14, out_channels=56, kernel_size=5),\n    nn.Linear(in_features=48, out_features=58),\n    nn.GRU(input_size=58, hidden_size=30, batch_first=True),\n    nn.LSTM(input_size=30, hidden_size=20, batch_first=True),\n    nn.LSTM(input_size=20, hidden_size=15, batch_first=True),\n    nn.Conv2d(in_channels=56, out_channels=20, kernel_size=1)\n)", "description": "This neural network takes an input of shape [159, 134] and produces an output of shape [20, 15]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=245, hidden_size=13, batch_first=True),\n    nn.Conv1d(in_channels=13, out_channels=36, kernel_size=4),\n    nn.GRU(input_size=36, hidden_size=6, batch_first=True),\n    nn.LSTM(input_size=6, hidden_size=26, batch_first=True)\n)", "description": "This neural network takes an input of shape [245] and produces an output of shape [26]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=27, hidden_size=103, batch_first=True)\n)", "description": "This neural network takes an input of shape [27] and produces an output of shape [103]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=21, out_channels=49, kernel_size=4),\n    nn.Conv1d(in_channels=49, out_channels=14, kernel_size=4),\n    nn.LSTM(input_size=14, hidden_size=127, batch_first=True),\n    nn.Conv1d(in_channels=127, out_channels=1, kernel_size=1),\n    nn.Conv3d(in_channels=1, out_channels=19, kernel_size=5),\n    nn.Linear(in_features=19, out_features=179),\n    nn.Conv3d(in_channels=179, out_channels=14, kernel_size=1),\n    nn.Conv2d(in_channels=14, out_channels=55, kernel_size=3),\n    nn.Conv1d(in_channels=55, out_channels=64, kernel_size=1)\n)", "description": "This neural network takes an input of shape [21] and produces an output of shape [64]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=59, out_features=13),\n    nn.Conv1d(in_channels=143, out_channels=16, kernel_size=5),\n    nn.Linear(in_features=13, out_features=255)\n)", "description": "This neural network takes an input of shape [143, 217, 59] and produces an output of shape [16, 217, 255]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=120, out_features=188),\n    nn.GRU(input_size=188, hidden_size=122, batch_first=True),\n    nn.Conv1d(in_channels=122, out_channels=61, kernel_size=4),\n    nn.Linear(in_features=61, out_features=130)\n)", "description": "This neural network takes an input of shape [120] and produces an output of shape [130]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=87, out_features=244)\n)", "description": "This neural network takes an input of shape [82, 31, 87] and produces an output of shape [82, 31, 244]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=40, hidden_size=88, batch_first=True),\n    nn.Conv2d(in_channels=163, out_channels=20, kernel_size=4),\n    nn.Conv1d(in_channels=20, out_channels=12, kernel_size=5),\n    nn.Conv2d(in_channels=12, out_channels=7, kernel_size=2),\n    nn.Conv1d(in_channels=7, out_channels=5, kernel_size=5),\n    nn.Conv1d(in_channels=5, out_channels=61, kernel_size=3),\n    nn.GRU(input_size=88, hidden_size=43, batch_first=True),\n    nn.GRU(input_size=43, hidden_size=32, batch_first=True),\n    nn.Conv1d(in_channels=61, out_channels=47, kernel_size=1),\n    nn.Linear(in_features=32, out_features=131)\n)", "description": "This neural network takes an input of shape [163, 36, 40] and produces an output of shape [47, 36, 131]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=163, hidden_size=91, batch_first=True),\n    nn.Conv2d(in_channels=152, out_channels=33, kernel_size=4),\n    nn.GRU(input_size=91, hidden_size=44, batch_first=True),\n    nn.Conv2d(in_channels=33, out_channels=57, kernel_size=5),\n    nn.GRU(input_size=44, hidden_size=86, batch_first=True),\n    nn.Conv1d(in_channels=57, out_channels=27, kernel_size=5),\n    nn.Conv2d(in_channels=27, out_channels=4, kernel_size=3)\n)", "description": "This neural network takes an input of shape [152, 163] and produces an output of shape [4, 86]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=12, out_channels=8, kernel_size=5),\n    nn.Conv1d(in_channels=8, out_channels=55, kernel_size=5),\n    nn.Conv3d(in_channels=55, out_channels=36, kernel_size=4),\n    nn.GRU(input_size=36, hidden_size=72, batch_first=True)\n)", "description": "This neural network takes an input of shape [12] and produces an output of shape [72]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=68, out_channels=58, kernel_size=1),\n    nn.LSTM(input_size=86, hidden_size=112, batch_first=True),\n    nn.Conv3d(in_channels=58, out_channels=28, kernel_size=5),\n    nn.Linear(in_features=112, out_features=32),\n    nn.Conv2d(in_channels=28, out_channels=30, kernel_size=4)\n)", "description": "This neural network takes an input of shape [68, 228, 86] and produces an output of shape [30, 228, 32]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=172, out_channels=58, kernel_size=1),\n    nn.LSTM(input_size=58, hidden_size=57, batch_first=True),\n    nn.Conv3d(in_channels=57, out_channels=62, kernel_size=4),\n    nn.Conv2d(in_channels=62, out_channels=63, kernel_size=1)\n)", "description": "This neural network takes an input of shape [172] and produces an output of shape [63]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=149, out_features=2),\n    nn.Conv2d(in_channels=97, out_channels=38, kernel_size=5),\n    nn.Conv3d(in_channels=38, out_channels=27, kernel_size=1),\n    nn.GRU(input_size=2, hidden_size=51, batch_first=True),\n    nn.LSTM(input_size=51, hidden_size=73, batch_first=True),\n    nn.GRU(input_size=73, hidden_size=8, batch_first=True)\n)", "description": "This neural network takes an input of shape [97, 149] and produces an output of shape [27, 8]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=202, hidden_size=98, batch_first=True)\n)", "description": "This neural network takes an input of shape [202] and produces an output of shape [98]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=218, hidden_size=50, batch_first=True),\n    nn.Conv1d(in_channels=50, out_channels=33, kernel_size=5),\n    nn.LSTM(input_size=33, hidden_size=115, batch_first=True),\n    nn.LSTM(input_size=115, hidden_size=23, batch_first=True),\n    nn.Conv2d(in_channels=23, out_channels=55, kernel_size=3),\n    nn.Conv1d(in_channels=55, out_channels=55, kernel_size=3),\n    nn.Conv3d(in_channels=55, out_channels=62, kernel_size=3),\n    nn.Conv2d(in_channels=62, out_channels=13, kernel_size=2)\n)", "description": "This neural network takes an input of shape [218] and produces an output of shape [13]."}, {"network": "nn.Sequential(\n    nn.Conv2d(in_channels=154, out_channels=60, kernel_size=5),\n    nn.LSTM(input_size=249, hidden_size=116, batch_first=True),\n    nn.GRU(input_size=116, hidden_size=72, batch_first=True),\n    nn.Conv1d(in_channels=60, out_channels=10, kernel_size=4),\n    nn.GRU(input_size=72, hidden_size=63, batch_first=True),\n    nn.Linear(in_features=63, out_features=71),\n    nn.GRU(input_size=71, hidden_size=109, batch_first=True)\n)", "description": "This neural network takes an input of shape [154, 192, 249] and produces an output of shape [10, 192, 109]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=215, out_features=227),\n    nn.Conv1d(in_channels=93, out_channels=17, kernel_size=5),\n    nn.LSTM(input_size=227, hidden_size=107, batch_first=True),\n    nn.Conv2d(in_channels=17, out_channels=59, kernel_size=3),\n    nn.Linear(in_features=107, out_features=97),\n    nn.LSTM(input_size=97, hidden_size=16, batch_first=True)\n)", "description": "This neural network takes an input of shape [93, 215] and produces an output of shape [59, 16]."}, {"network": "nn.Sequential(\n    nn.Linear(in_features=161, out_features=180)\n)", "description": "This neural network takes an input of shape [160, 170, 161] and produces an output of shape [160, 170, 180]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=213, hidden_size=118, batch_first=True),\n    nn.Conv3d(in_channels=99, out_channels=41, kernel_size=2),\n    nn.Conv3d(in_channels=41, out_channels=8, kernel_size=1),\n    nn.LSTM(input_size=118, hidden_size=90, batch_first=True),\n    nn.Conv2d(in_channels=8, out_channels=30, kernel_size=3),\n    nn.GRU(input_size=90, hidden_size=9, batch_first=True),\n    nn.Conv1d(in_channels=30, out_channels=31, kernel_size=5),\n    nn.Conv1d(in_channels=31, out_channels=25, kernel_size=4),\n    nn.Conv2d(in_channels=25, out_channels=5, kernel_size=3)\n)", "description": "This neural network takes an input of shape [99, 213] and produces an output of shape [5, 9]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=167, hidden_size=11, batch_first=True),\n    nn.Conv1d(in_channels=11, out_channels=1, kernel_size=5),\n    nn.Conv2d(in_channels=1, out_channels=8, kernel_size=4),\n    nn.Conv3d(in_channels=8, out_channels=11, kernel_size=3),\n    nn.Linear(in_features=11, out_features=209),\n    nn.GRU(input_size=209, hidden_size=57, batch_first=True),\n    nn.Conv1d(in_channels=57, out_channels=8, kernel_size=5),\n    nn.LSTM(input_size=8, hidden_size=59, batch_first=True),\n    nn.GRU(input_size=59, hidden_size=88, batch_first=True)\n)", "description": "This neural network takes an input of shape [167] and produces an output of shape [88]."}, {"network": "nn.Sequential(\n    nn.LSTM(input_size=10, hidden_size=97, batch_first=True),\n    nn.GRU(input_size=97, hidden_size=35, batch_first=True),\n    nn.Conv2d(in_channels=112, out_channels=20, kernel_size=5),\n    nn.Linear(in_features=35, out_features=38),\n    nn.Linear(in_features=38, out_features=200),\n    nn.Conv1d(in_channels=20, out_channels=24, kernel_size=4),\n    nn.Linear(in_features=200, out_features=136),\n    nn.LSTM(input_size=136, hidden_size=72, batch_first=True),\n    nn.LSTM(input_size=72, hidden_size=12, batch_first=True),\n    nn.GRU(input_size=12, hidden_size=64, batch_first=True)\n)", "description": "This neural network takes an input of shape [112, 182, 10] and produces an output of shape [24, 182, 64]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=169, out_channels=6, kernel_size=1),\n    nn.LSTM(input_size=6, hidden_size=57, batch_first=True)\n)", "description": "This neural network takes an input of shape [169] and produces an output of shape [57]."}, {"network": "nn.Sequential(\n    nn.GRU(input_size=41, hidden_size=101, batch_first=True),\n    nn.Linear(in_features=101, out_features=165),\n    nn.LSTM(input_size=165, hidden_size=49, batch_first=True),\n    nn.Conv3d(in_channels=49, out_channels=53, kernel_size=4)\n)", "description": "This neural network takes an input of shape [41] and produces an output of shape [53]."}, {"network": "nn.Sequential(\n    nn.Conv1d(in_channels=50, out_channels=14, kernel_size=3),\n    nn.Conv1d(in_channels=14, out_channels=49, kernel_size=4),\n    nn.Conv3d(in_channels=49, out_channels=40, kernel_size=1),\n    nn.LSTM(input_size=207, hidden_size=4, batch_first=True),\n    nn.GRU(input_size=4, hidden_size=15, batch_first=True),\n    nn.GRU(input_size=15, hidden_size=42, batch_first=True),\n    nn.Conv1d(in_channels=40, out_channels=54, kernel_size=4)\n)", "description": "This neural network takes an input of shape [50, 124, 207] and produces an output of shape [54, 124, 42]."}]